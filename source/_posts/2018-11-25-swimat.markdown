---
layout: post
title: "PromiseKitのフォーマット崩れに困ったらSwimatを使ってみよう！"
date: 2018-11-25 01:09
comments: true
categories: ios swift
---

### はじめに
基本的に、Xcode上でフォーマットをかける場合は[SwiftLint](https://github.com/realm/SwiftLint)を利用することがほとんどかと思うのですが、  
[PromiseKit](https://github.com/mxcl/PromiseKit)の書式のようにSwiftLintでは解決できないフォーマットも一部あったため、  
筆者はお試しで[Swimat](https://github.com/Jintin/Swimat)を使ってみていました。  

必要な時だけ利用するという使い方でも十分使いやすかったため、今日はSwimatについて紹介したいと思います。  

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<!-- more -->

### インストール＆初期設定方法
インストール方法は[README.md](https://github.com/Jintin/Swimat/blob/master/README.md)を読めば特に詰まることなく進めることができると思います。  
一応、参考までに、手順を書いておきます。  

① `Homebrew` でインストール  

```objective-c
$ brew cask install swimat
```

インストールが完了すると、  

![Homebrewでswimatをインストール](/images/swimat_1.png)  

のようにターミナルにログが出ると思います。  

② システム環境設定で `Xcode Source Editor` の拡張機能として `Swimat` を設定する  

システム環境設定を開いて、 **拡張機能** を選択しましょう。  

![システム環境設定で拡張機能を選択する](/images/swimat_2.png)  

`Xcode Source Editor` として `Swimat` を設定します。  

![Xcode Source EditorとしてSwimatを設定する](/images/swimat_3.png)  

以上で準備完了です。  
では、実際にXcode上で `Swimat` を利用してみましょう。  

### Swimatを利用する
冒頭で `PromiseKit` の話を出しましたので、ここでも `PromiseKit` を例に紹介します。  

`PromiseKit` を利用して以下のようなソースコードを書いたとします。  

```objective-c
// ここでは正しくフォーマットされた状態で書いています。
firstly {
    worker.fetchHospitals(lat: latitude, lng: longitude)
}.done { [weak self] results in
    guard let strongSelf = self else { return }
    let response = Map.Search.Response(type: .success(places: results))
    strongSelf.presenter?.presentSearch(response: response)
}.catch { [weak self] error in
    guard let strongSelf = self else { return }
    let response = Map.Search.Response(type: .failure(description: error.localizedDescription))
    strongSelf.presenter?.presentSearch(response: response)
}
```

これを普通にXcode上で書くと次のようなネストの状態になってしまいます。  

![Swimatでフォーマットをかける前の状態](/images/swimat_4.png)  

これに `Swimat` でフォーマットをかけます。  
フォーマットをかけたい行を選択してから、 `Editor` > `Swimat` > `Format` を選択します。  

![Swimatでフォーマットをかける](/images/swimat_5.png)   

その結果、  

![Swimatでフォーマットをかけた後の状態](/images/swimat_6.png)  

のようにネストが正しく修正されます。  

### まとめ
如何でしたでしょうか？  
もう少しで `GitHub` 上のスター数も1,000突破しそうな勢いですし、知っておいて損はないかと思います。  
`PromiseKit` だけでなく有用な場面も当然あると思いますし、気になった方はぜひ使ってみてください。  
と言ったところで本日はここまで。  

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
