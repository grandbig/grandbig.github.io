---
layout: post
title: "Freddyを使ってみよう！"
date: 2016-05-08 22:47
comments: true
categories: ios swift
---

####SwiftでJSONパーサーライブラリを使ってみよう
GW最終日にブログを更新します。  
以前、[今更だけど使ってみようSwiftyJson](http://grandbig.github.io/blog/2016/03/06/swiftyjson/)で紹介しましたが、今回は別のSwift製のJSONパーサーライブラリを紹介したいと思います。  
本日は、[Freddy](https://github.com/bignerdranch/Freddy)というJSONパーサーライブラリを紹介します。  
SwiftyJsonのGitHub上でのStar数が約1万なのに比べるとFreddyは約850と段違いに支持数は低いですが、割りと有名なライブラリかと思います。  

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

<!-- more -->

####CocoaPodsでインストール
まずはインストールです。  
今回も`Open Weather Map API`をサンプルに利用したいので[Alamofire](https://github.com/Alamofire/Alamofire)も合わせてインストールします。  

```objective-c
source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '8.0'
use_frameworks!

pod 'Freddy'
pod 'Alamofire', '~> 3.0'
```

####Freddyを使ってみる
続いて、早速`Freddy`を使ってみましょう。  

```objective-c
Alamofire.request(.GET, "http://api.openweathermap.org/data/2.5/weather?APPID=<あなた自身のAPPID>",
	parameters:["q":location]).responseJSON { (response) -> Void in
		if response.result.isSuccess {
			do {
				let json = try JSON(data: response.data!)
				let description = try json.array("weather")[0]["description"]
				print(description)
			} catch {
				print("例外が発生しました！")
			}
		}
}
```

`SwiftyJson`では下記のように書いていました。  

```objective-c
Alamofire.request(.GET, "http://api.openweathermap.org/data/2.5/weather?APPID=<あなた自身のAPPID>",
	parameters:["q":location]).responseJSON { (response) -> Void in
		if response.result.isSuccess {
			guard let data = response.result.value else {
				return
			}
			let json = JSON(data)
			guard let description = json["weather"][0]["description"] else {
				return
			}
			print(description)
		}
}
```

`Freddy`と`SwiftyJson`を比較すると、そこまで大きな違いはないと思います。  
`Freddy`の場合は、  

* JSON型への変換に失敗した場合、throwで例外を投げる  
* JSON型データ内のデータ形式次第で実行するメソッドが変わる  
`array`, `string`, `bool`等のメソッドを使うことでアンラップを気にする必要がなくなります。  

といった特徴があります。  
どのライブラリを使った方が良いか否かは個々人の判断ですね。  

簡単ですが、本日はここまで。  

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
