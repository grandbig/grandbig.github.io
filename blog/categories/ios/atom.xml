<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ios, | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2015-02-08T16:45:20+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WKWebViewとUIWebViewをシミュレータで比較してみた]]></title>
    <link href="http://grandbig.github.io/blog/2014/09/22/wkwebview1/"/>
    <updated>2014-09-22T00:07:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2014/09/22/wkwebview1</id>
    <content type="html"><![CDATA[<h3>WKWebViewを使ってみる</h3>

<p>さて、本日はiOS8 SDKで新たに利用可能となった <strong>WKWebView</strong> を試してみたいと思います。<br/>
これまでSafariにしか解放されていなかった機能がいろいろと使えるとのことでこれから期待が膨らみます。<br/>
まずは、WKWebViewをアプリに実装するとことから始めましょう。</p>

<p>WKWebViewはUIWebViewと異なり、Storyboard上からドラッグ＆ドロップで追加することができません。<br/>
よって、ソース上から追加する必要があります。</p>

<p>WKWebViewExampleという名前でプロジェクトを作成しましょう。<br/>
<img src="/images/wkwebview1.png" alt="WKWebViewExampleプロジェクト" /></p>

<!--more-->


<p>ViewController.mファイルを下記のように実装します。</p>

<p>```objective-c</p>

<h1>import &ldquo;ViewController.h&rdquo;</h1>

<h1>import &lt;WebKit/WebKit.h>   // WebKitをimport</h1>

<p>// 表示するWebサイトのURlを設定
static NSString <em>const InitialURL = @&ldquo;<a href="http://localhost/testWeb/">http://localhost/testWeb/</a>&rdquo;;
// Delegateメソッドを利用できるように設定
@interface ViewController ()&lt;WKNavigationDelegate, WKUIDelegate>
// WKWebViewを宣言
@property(nonatomic, strong)IBOutlet WKWebView </em>webView;</p>

<p>@end</p>

<p>@implementation ViewController</p>

<ul>
<li><p>(void)viewDidLoad {
  [super viewDidLoad];</p>

<p>  // WKWebViewをインスタンス化
  self.webView = [WKWebView alloc] initWithFrame:self.view.bounds];
  self.webView.translatesAutoresizingMaskIntoConstraints = NO;
  // WKWebViewをViewControllerのViewのsubViewとして追加
  [self.view addSubview:self.webView];</p>

<p>  // Delegateの設定
  self.webView.navigationDelegate = self;
  self.webView.UIDelegate = self;]
}</p></li>
<li><p>(void)viewDidAppear:(BOOL)animated {
  [super viewDidAppear:animated];</p>

<p>  // Web画面の表示
  NSURL <em>url = [NSURL URLWithString:InitialURL];
  NSURLRequest </em>request = [NSURLRequest requestWithURL:url];
  [self.webView loadRequest:request];
}</p></li>
</ul>


<p>```</p>

<p>たったこれだけでWKWebViewを実装することができました。</p>

<h3>WKWebViewとUIWebViewの性能を比較してみる</h3>

<p>気になっていた本題に入ります。<br/>
UIWebViewはJavaScriptの実行速度がSafariの約1/4と言われてきました。それが、WKWebViewの出現により、Safariと同等のJavaScript実行速度にまで引き上げられました。<br/>
という話から実際にWKWebViewとUIWebViewのJavaScript実行速度を比較してみようと思います。<br/>
今回利用するWebソースは下記です。</p>

<p>index.html<br/>
```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;meta charset="UTF-8" content="text/css" http-equiv="Content-Style-Type" /&gt;
    &lt;meta content="width=device-width, user-scalable=no,minimum-scale=0.5, maximum-scale=1.0" name="viewport" /&gt;
    &lt;title&gt;テストサイト&lt;/title&gt;
&lt;/head&gt;
&lt;body style="background-color: blue;"&gt;
    &lt;div&gt;テストサイトです。&lt;/div&gt;

    &lt;button type="button" id="testBtn" onclick=""&gt;テストボタン&lt;/button&gt;

    &lt;script src="./js/jquery-2.1.1.min.js"&gt;&lt;/script&gt;
    &lt;script src="./js/index.js"&gt;&lt;/script&gt;
&lt;/body&gt;
</code></pre>

<p></html></p>

<p>```</p>

<p>jQueryは最新のバージョン2.1.1を利用しています。</p>

<p>index.js<br/>
```javascript
$(function() {</p>

<pre><code>$(document).on("click touchEnd", "#testBtn", function() {
    //window.alert("test");
    //$("body").css("background-color", "red");
    var startTime = new Date().getTime();
    for(var i=0; i &lt; 5000000; i++) {
        console.log(i+"回目のログ");
    }
    var endTime = new Date().getTime();
    var diff = endTime - startTime;
    $("body").append("&lt;div&gt;時間: " + diff + "&lt;/div&gt;");
});
</code></pre>

<p>});</p>

<p>```</p>

<p>これは簡単に言うと、大量のforループを実行し、その処理時間を画面に表示するというものです。<br/>
結果は下記になりました。<br/>
※iOS8に対応した実機がないため、シミュレータでのテストになります。</p>

<p>UIWebView: <strong>5,098.4</strong> [ms]<br/>
WKWebView: <strong>4,495.6</strong> [ms]</p>

<p>4倍とまではいかなくても確かに実行速度は向上しているようです。<br/>
近々、実機でも試してみる予定です。</p>

<p>今日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
