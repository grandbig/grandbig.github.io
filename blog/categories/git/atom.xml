<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2017-06-18T21:28:52+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitのFetchでSSLエラーが出たときの対応]]></title>
    <link href="http://grandbig.github.io/blog/2016/11/25/git-ssl-error/"/>
    <updated>2016-11-25T21:46:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/11/25/git-ssl-error</id>
    <content type="html"><![CDATA[<h3>突如としてエラーが発生した場合の対応</h3>

<p>先程、思いがけずエラーが出たのでメモします。<br/>
GitでFetchしようとして下記エラーが出ました。</p>

<p>```
/usr/local/Cellar/git/2.10.2/bin/git -C /Users/<username>/git/iOS/Server\ Side\ Swift/PerfectTemplate/Packages/PerfectLib.git fetch &mdash;tags origin
error: RPC failed; curl 56 SSLRead() return error -36
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed</p>

<p>error: exit(128): git -C /Users/<username>/git/iOS/Server\ Side\ Swift/PerfectTemplate/Packages/PerfectLib.git fetch &mdash;tags origin
```</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>これはどうもSSLに関するエラーが出ているようです。<br/>
なので下記をインストールします。</p>

<p><code>
$ brew reinstall git --with-brewed-curl --with-brewed-openssl
</code></p>

<p>これで再度、Gitコマンドを打ってみれば万事OKです。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitでリモートにPushした内容を取り消したい！！]]></title>
    <link href="http://grandbig.github.io/blog/2016/07/16/git-reset/"/>
    <updated>2016-07-16T22:58:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/07/16/git-reset</id>
    <content type="html"><![CDATA[<h3>SourceTreeでgit resetを使いこなそう！</h3>

<p>さて、本日は <strong>Git</strong> について書きます。<br/>
皆さんは、GitでリモートにPushした内容を取り消したくなることがありませんでしょうか？<br/>
そんなときに利用するのが<code>git reset</code>コマンドです。</p>

<p>リモートにPushした内容ということは自分だけの範疇では収まらないため、他の人に影響が出るかもしれません。<br/>
それって考えてみると非常に怖いですよね&hellip;。<br/>
しかし、どうしてもリモートの内容を修正したいことが出てきます。<br/>
今回はそんな不安を跳ね飛ばすべく実際に練習してみました。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>git reset</h3>

<p>今回扱うGitのRepositoryはこちらです。<br/>
<img src="/images/git_reset_1.png" alt="Git Repository" /></p>

<p>では実際に<code>git reset</code>を実行してみましょう。</p>

<h4>git reset &mdash;soft</h4>

<p>まずは<code>git reset --soft</code>を実行してみます。<br/>
SourceTreeでは下記の手順で実行します。</p>

<p>1．元に戻したいポイントで右クリック<br/>
2．「このコミットまでmasterを元に戻す」を選択<br/>
3．モードで <strong>Soft</strong> を選択する</p>

<p><img src="/images/git_reset_2.png" alt="Softモード" /></p>

<p>これでローカル上でコミット前の<code>master</code>に戻せます。<br/>
<code>master</code>に反映した分を別ブランチに持って行きたい場合は別ブランチを切って、そちらにコミットすれば良いです。</p>

<p><img src="/images/git_reset_3.png" alt="別ブランチに反映" /></p>

<p>続いて、リモートの<code>master</code>からプッシュ分を取り除くためには、ローカルの<code>master</code>の状態をプッシュしなくてはなりません。<br/>
SourceTreeでは強制プッシュはデフォルトでOFFになっているため、設定を変更する必要があります。</p>

<p><img src="/images/git_reset_4.png" alt="SourceTreeで強制プッシュをONに変更" /></p>

<p>4．強制プッシュを実行する</p>

<p>これにより、Gitの状態は下図のようになります。<br/>
<img src="/images/git_reset_5.png" alt="Git Repositoryの結果" /></p>

<h4>git reset &mdash;mixed</h4>

<p>続いて<code>git reset --mixed</code>を実行してみます。</p>

<p>1．元に戻したいポイントで右クリック<br/>
2．「このコミットまでmasterを元に戻す」を選択<br/>
3．モードで <strong>Mixed</strong> を選択する</p>

<p><img src="/images/git_reset_6.png" alt="Mixedモード" /></p>

<p>これでローカル上でコミット前の<code>master</code>に戻せます。<br/>
<code>soft</code>と異なるのは <strong>コミットだけでなくaddも取り除ける</strong> ということです。</p>

<p><img src="/images/git_reset_7.png" alt="mixedを実行した状態" /></p>

<p>もちろん<code>soft</code>のときと同様に別ブランチに内容を反映させることができます。</p>

<p><img src="/images/git_reset_8.png" alt="別ブランチに反映" /></p>

<p>4．強制プッシュを実行する</p>

<p>強制プッシュ実行後は下図のようになります。</p>

<p><img src="/images/git_reset_9.png" alt="Git Repositoryの結果" /></p>

<h4>git reset &mdash;hard</h4>

<p>最後に<code>git reset --hard</code>を実行してみます。</p>

<p>1．元に戻したいポイントで右クリック<br/>
2．「このコミットまでmasterを元に戻す」を選択<br/>
3．モードで <strong>Hard</strong> を選択する</p>

<p><img src="/images/git_reset_10.png" alt="Hardモード" /></p>

<p>これでローカル上でコミット前の<code>master</code>に戻せます。<br/>
<code>soft</code>や<code>mixed</code>と異なり、作業内容が一切削除されます。</p>

<p><img src="/images/git_reset_11.png" alt="hardを実行した状態" /></p>

<p>4．強制プッシュを実行する</p>

<p>強制プッシュ実行後は下図のようになります。</p>

<p><img src="/images/git_reset_9.png" alt="Git Repositoryの結果" /></p>

<h3>まとめ</h3>

<p>さていかがでしたでしょうか？<br/>
通常はあまりやりたくない操作ではありますが、必要となるタイミングは必ずくるはずなので知っておいて損はないでしょう。<br/>
筆者も早速3連休明けから使いそうな予感が&hellip;。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
