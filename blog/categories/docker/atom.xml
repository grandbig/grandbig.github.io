<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: docker | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/docker/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2017-02-13T01:02:16+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Docker for Macをインストールしよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/02/13/docker-for-mac-1/"/>
    <updated>2017-02-13T00:06:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/02/13/docker-for-mac-1</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>本日は <strong>Docker for Mac</strong> についてメモ程度に学んだことを書き残しておきたいと思います。<br/>
<code>Docker for Mac</code>とはMacアプリとしてインストールできるDockerです。<br/>
今までは、MacでDockerを利用するために<code>Docker Toolbox</code>と<code>Virtual Box</code>をインストールする必要がありましたが、<code>Docker for Mac</code>の登場により、いろいろとやってくれそうな感があります。<br/>
(筆者もDocker自体にそんなに詳しいわけではないので、1つずつ見ていきたいと思います。)</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Docker for Macのインストール</h3>

<p>簡単かと思いきや、なぜか詰まることもあるので書きます。<br/>
インストールは<a href="https://docs.docker.com/docker-for-mac/">Docker公式ページ</a>から可能です。<br/>
公式ページを見ると、 <strong>Download Docker for Mac</strong> という文字が見つかります。<br/>
<code>Stable channel</code>と<code>Beta channel</code>の2つがあるのですが、筆者は最終的に<code>Beta channel</code>をインストールしました。<br/>
なぜなら、<code>Stable channel</code>では<code>docker run hello-world</code>が実行エラーになったためです&hellip;</p>

<p><img src="/images/docker_1.png" alt="Docker for Mac Betaのダウンロード" /></p>

<p>インストールが完了すると、macのツールバーにDockerのマークが出現します。</p>

<p><img src="/images/docker_2.png" alt="ツールバーにDockerマーク" /></p>

<p>Dockerが正しくインストールされたので下記コマンドでバージョンを確認してみましょう。</p>

<p>```javascript
$ docker &mdash;version
Docker version 1.13.1, build 092cba3</p>

<p>$ docker-compose &mdash;version
docker-compose version 1.11.1, build 7c5d5e4</p>

<p>$ docker-machine &mdash;version
docker-machine version 0.9.0, build 15fd4c7
```</p>

<p>続いて、Dockerが期待通りに動くことを確認するために下記コマンドを叩いてみましょう。<br/>
まずはDockerのバージョン確認です。</p>

<p>```javascript
$ docker version
Client:
 Version:      1.13.1
 API version:  1.26
 Go version:   go1.7.5
 Git commit:   092cba3
 Built:        Wed Feb  8 08:47:51 2017
 OS/Arch:      darwin/amd64</p>

<p>Server:
 Version:      1.13.1
 API version:  1.26 (minimum version 1.12)
 Go version:   go1.7.5
 Git commit:   092cba3
 Built:        Wed Feb  8 08:47:51 2017
 OS/Arch:      linux/amd64
 Experimental: true
```</p>

<p><code>Client</code>と<code>Server</code>の両方のバージョンが確認できるようです。<br/>
(中身があまり変わらないように見えるけど&hellip;)</p>

<p>続いて、ローカルに存在するDockerコンテナの確認です。</p>

<p><code>javascript
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
</code></p>

<p>何もないと当然ですが、上記のように何も表示されません。<br/>
最も初歩であろう<code>hello-world</code>コマンドです。</p>

<p>```javascript
$ docker run hello-world
Unable to find image &lsquo;hello-world:latest&rsquo; locally
latest: Pulling from library/hello-world
78445dd45222: Pull complete
Digest: sha256:c5515758d4c5e1e838e9cd307f6c6a0d620b5e07e6f927b07d05f6d12a1ac8d7
Status: Downloaded newer image for hello-world:latest</p>

<p>Hello from Docker!
This message shows that your installation appears to be working correctly.</p>

<p>To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the &ldquo;hello-world&rdquo; image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the</p>

<pre><code>executable that produces the output you are currently reading.
</code></pre>

<ol>
<li>The Docker daemon streamed that output to the Docker client, which sent it
to your terminal.</li>
</ol>


<p>To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash</p>

<p>Share images, automate workflows, and more with a free Docker ID:
 <a href="https://cloud.docker.com/">https://cloud.docker.com/</a></p>

<p>For more examples and ideas, visit:
 <a href="https://docs.docker.com/engine/userguide/">https://docs.docker.com/engine/userguide/</a>
```</p>

<p>ローカルに存在しないとダウンロードを始めます。<br/>
冒頭に述べた<code>Stable channel</code>では、ここで全くダウンロードができませんでした。<br/>
何はともあれ、これで <strong>Docker for Mac</strong> のインストール完了です。</p>

<h3>Docker for Macを使ってUbuntuをインストールしてみよう</h3>

<p>先程インストールした<code>hello-world</code>の結果の中に<code>To try something more ambitious, you can run an Ubuntu container with:</code>とありました。<br/>
興味本位ですが、コマンド叩いてみましょう。</p>

<p><code>javascript
$ docker run -it ubuntu bash
Unable to find image 'ubuntu:latest' locally
latest: Pulling from library/ubuntu
8aec416115fd: Pull complete
695f074e24e3: Pull complete
946d6c48c2a7: Pull complete
bc7277e579f0: Pull complete
2508cbcde94b: Pull complete
Digest: sha256:71cd81252a3563a03ad8daee81047b62ab5d892ebbfbf71cf53415f29c130950
Status: Downloaded newer image for ubuntu:latest
root@3e95790a60cb:/#
</code></p>

<p>これで<code>Ubuntu</code>がインストールできたようです。<br/>
しかも<code>Ubuntu</code>の中に入れてますね！</p>

<p>本当に<code>Ubuntu</code>インストールできたか確かめるためにもコマンドを叩いてみましょう。</p>

<p>```javascript
root@3e95790a60cb:/# cat /etc/lsb-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=16.04
DISTRIB_CODENAME=xenial
DISTRIB_DESCRIPTION=&ldquo;Ubuntu 16.04.1 LTS&rdquo;</p>

<p>root@3e95790a60cb:/# arch
x86_64</p>

<p>root@3e95790a60cb:/# uname -a
Linux 3e95790a60cb 4.9.8-moby #1 SMP Wed Feb 8 09:59:13 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
```</p>

<p>バッチリですね！！<br/>
(正直な話、<code>uname -a</code>とか数年ぶりに叩いた気がして懐かしい&hellip;笑)</p>

<p>これで後はもう様々な便利なものをインストールして楽しめそうですね。</p>

<h3>Kitematicの紹介</h3>

<p>メニューバーのDockerマークをクリックすると、Docker for Macのメニュー項目が表示されます。<br/>
その中に<code>Kitematic</code>という聞きなれないものがあると思います。<br/>
こちらをインストールするとターミナルからコマンドを叩かずとも、GUIからクリック操作で様々なことが可能になります。</p>

<p><img src="/images/docker_3.png" alt="Dockerのメニュー" /></p>

<p>起動してログインすると(初めはアカウントがないと思うので作成しましょう。)、下記のような画面が表示されます。</p>

<p><img src="/images/docker_4.png" alt="Kitematic" /></p>

<p>最早、見るだけで心躍りますよね！？<br/>
様々なものをインストールして楽しめそうな気しかしません！</p>

<p>因みに、下記のようにコンテナの起動などが可能です。</p>

<p><img src="/images/docker_5.png" alt="KitematicでDockerコンテナ起動" /></p>

<h3>まとめ</h3>

<p>さて、今回は珍しく基盤よりなDockerで遊んでみました。<br/>
この付近の知識はあって困ることはないですし、Dockerかなり一般的になってきているので引き続きブログの題材として取り上げていきたいと思います。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
