<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Push | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/push/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2018-04-07T16:29:49+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS8からのLocalNotification]]></title>
    <link href="http://grandbig.github.io/blog/2014/11/09/localnotification-ios8/"/>
    <updated>2014-11-09T17:05:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2014/11/09/localnotification-ios8</id>
    <content type="html"><![CDATA[<h4>LocalNotificationでAction</h4>

<p>今日はiOS8から追加されたLocalNotificationの新機能についてお話します。<br/>
これまでのLocalNotificationは</p>

<ul>
<li>通知が通知エリアに表示される</li>
<li>通知をタップすることでアプリを起動</li>
</ul>


<p>くらいの機能しかありませんでした。</p>

<p>しかし、iOS8からは届いた通知に対して、ユーザが答えることができるようになりました。</p>

<!-- more -->


<p>例えば、下記のような感じですね。</p>

<p><img src="/images/localnotification_1.png" alt="バナー表示" /><br/>
<img src="/images/localnotification_2.png" alt="ダイアログ表示" /></p>

<p>これまでLocalNotificationを使ってきた人であれば、実に簡単に実装ができます。<br/>
それでは、実際にソースを見て行きましょう。</p>

<p>```objective-c
// AppDelegate.m
&ndash; (BOOL)application:(UIApplication <em>)application didFinishLaunchingWithOptions:(NSDictionary </em>)launchOptions {</p>

<pre><code>if ([UIApplication instancesRespondToSelector:@selector(registerUserNotificationSettings:)]) {
    [self registerUserNotificationSettings];
}

return YES;
</code></pre>

<p>}</p>

<p>&lt;省略></p>

<p>// アプリがBackground起動になったときに処理
&ndash; (void)applicationDidEnterBackground:(UIApplication *)application {</p>

<pre><code>// LocalNotificationの送信
[self sendLocalNotificationForMessage:@"TEST"];
</code></pre>

<p>}</p>

<p>&lt;省略></p>

<p>// LocalNotificationでアクションを実行したときの処理
&ndash; (void) application:(UIApplication <em>)application handleActionWithIdentifier:(NSString </em>)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void (^)())completionHandler
{</p>

<pre><code>if ([identifier isEqualToString:@"ACCEPT"]) {
    NSLog(@"Accepted");
} else if([identifier isEqualToString:@"MAYBE"]) {
    NSLog(@"Maybe");
} else if([identifier isEqualToString:@"DECLINE"]) {
    NSLog(@"Declined");
}

if(completionHandler) {
    completionHandler();
}
</code></pre>

<p>}</p>

<p>// Notificationの設定
&ndash; (void)registerUserNotificationSettings
{</p>

<pre><code>// Actionの生成
UIMutableUserNotificationAction *acceptAction = [[UIMutableUserNotificationAction alloc] init];
acceptAction.identifier = @"ACCEPT";
acceptAction.title = @"Accept";
acceptAction.activationMode = UIUserNotificationActivationModeBackground;
acceptAction.authenticationRequired = NO;
acceptAction.destructive = NO;

// Actionの生成
UIMutableUserNotificationAction *acceptAction = [[UIMutableUserNotificationAction alloc] init];
acceptAction.identifier = @"MAYBE";
acceptAction.title = @"Maybe";
acceptAction.activationMode = UIUserNotificationActivationModeBackground;
acceptAction.authenticationRequired = NO;
acceptAction.destructive = NO;

// Actionの生成
UIMutableUserNotificationAction *acceptAction = [[UIMutableUserNotificationAction alloc] init];
acceptAction.identifier = @"DECLINE";
acceptAction.title = @"Decline";
acceptAction.activationMode = UIUserNotificationActivationModeBackground;
acceptAction.authenticationRequired = NO;
acceptAction.destructive = YES;

// Categoryの作成
UIMutableUserNotificationCategory *inviteCategory = [UIMutableUserNotificationCategory alloc] init];
inviteCategory.identifier = @"INVITE_CATEGORY"; // CategoryのIDを設定
[inviteCategory setActions:@[acceptAction, maybeAction, declineAction] forContext:UIUserNotificationActionContextDefault]; // ダイアログ表示
[inviteCategory setActions:@[acceptAction, declineAction] forContext:UIUserNotificationActionContextMinimal]; // バナー表示

NSSet *categories = [NSSet setWithObjects:inviteCategory, nil];
UIUserNotificationSettings *notificationSettings = [UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeAlert|UIUserNotificationTypeBadge|UIUserNotificationTypeSound categories:categories];
[[UIApplication sharedApplication] registerUserNotificationSettings:notificationSettings];
</code></pre>

<p>}</p>

<p>// LocalNotificationを送信
&ndash; (void)sendLocalNotificationForMessage:(NSString *)message
{</p>

<pre><code>UILocalNotification *localNotification = [UILocalNotification new];
localNotification.alertBody = message;
localNotification.fireDate = [NSDate date];
localNotification.timeZone = [NSTimeZone localTimeZone];
localNotification.soundName = UILocalNotificationDefaultSoundName;
localNotification.category = @"INVITE_CATEGORY"; // Action表示させたいCategoryの設定
[UIApplication sharedApplication] scheduleLocalNotification:localNotification];
</code></pre>

<p>}
```</p>

<p>簡単に書けますね。<br/>
ぱっと見た感じは、予めAction項目を作成しておく必要があるので、用途は限定的になりそうな気がしますね。<br/>
と言っても、これまでよりユーザ操作のハンドリングの幅が広がるので、嬉しい限りですが&hellip;。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



]]></content>
  </entry>
  
</feed>
