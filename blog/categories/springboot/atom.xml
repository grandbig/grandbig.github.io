<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: springboot | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/springboot/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2016-04-16T15:46:06+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Spring Bootを使い始めよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/04/16/start-spring-boot/"/>
    <updated>2016-04-16T14:43:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/04/16/start-spring-boot</id>
    <content type="html"><![CDATA[<h4>Spring Bootとは</h4>

<p>本日はこれまでと全く趣向を変えて、 <strong>Spring Boot</strong> について書きたいと思います。<br/>
<a href="http://projects.spring.io/spring-boot/">Spring Boot</a>とはSpringプロジェクトが提供している多くのFrameworkを統合した、<br/>
簡単にWebアプリケーションを作成できるように設計されたFrameworkです。</p>

<p>開発者はSpringプロジェクト内で用意された様々なFrameworkを意識する必要がありません。<br/>
Spring Bootとは長年ブラッシュアップされ、肥大化してきたSpringプロジェクトへの参入ハードルを劇的に下げるものと言えるでしょう。</p>

<p>なんて言いつつも、<br/>
筆者はJavaによるWebアプリケーション開発はほとんどやったことがありません。</p>

<p>何はともあれ、まずは触れてみたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>Spring BootによるWeb Application Projectを作成しよう！</h4>

<p>最も簡単な方法について説明します。</p>

<p>1．<a href="https://start.spring.io/">Spring Initializer</a>にアクセス<br/>
Projectの自動生成ツールサイトがあるので、アクセスして各種項目を設定しましょう。</p>

<ul>
<li>Project: GradleおよびMavenから選択できます</li>
<li>Spring Boot: バージョンを選択できます</li>
<li>Group: パッケージ名を指定できます</li>
<li>Artifact: メインファイル名を指定できます</li>
<li>Dependencies: 初期状態で追加されるdependenciesを指定できます</li>
</ul>


<p>筆者は下記のように指定しました。</p>

<p><img src="/images/start-spring-boot1.png" alt="Spring Initializer" /></p>

<p>2．Generate Projectボタンをクリック<br/>
下記のようなProjectが生成されます。<br/>
(下記は筆者が指定した設定項目で生成されたProjectです。)</p>

<p>```java
firstApp
  ┣━━ build.gradle
  ┣━━ gradlew
  ┣━━ gradlew.bat
  ┣━━ gradle
  ┃    ┗━━ wrapper
  ┃          ┣━━ gradle-wrapper.jar
  ┃          ┗━━ gradle-wrapper.properties
  ┗━━ src</p>

<pre><code>   ┣━━ main
   ┃    ┣━━ java
   ┃    ┃    ┗━━ com
   ┃    ┃         ┗━━ example
   ┃    ┃               ┗━━ FirstAppApplication.java
   ┃    ┗━━ resources
   ┃         ┗━━ application.properties
   ┗━━ test
        ┗━━ java
             ┗━━ com
                  ┗━━ example
                        ┗━━ FirstAppApplicationTests.java
</code></pre>

<p>```</p>

<p>3．<code>gradle bootRun</code>コマンドを実行<br/>
firstApp直下で<code>gradle bootRun</code>コマンドを実行します。<br/>
下記のような実行結果が出るはずです。</p>

<p><img src="/images/start-spring-boot2.png" alt="実行結果" /></p>

<p>これは生成されたメインファイルでのソースが下記のようになっているためです。<br/>
<code>main</code>メソッド内で実行している処理はたったの1行で、<br/>
これはSpring Bootによるアプリケーションを起動する処理となっています。</p>

<p>```java
package com.example;</p>

<p>import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;</p>

<p>@SpringBootApplication
public class FirstAppApplication {</p>

<pre><code>public static void main(String[] args) {
    SpringApplication.run(FirstAppApplication.class, args);
}
</code></pre>

<p>}
```</p>

<p>因みに、初期状態で<code>sourceCompatibility</code>および<code>targetCompatibility</code>が <strong>1.8</strong> となっています。<br/>
よって、実行するためにはJDKバージョン <strong>1.8</strong> が必要になります。<br/>
(インストールは<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">こちら</a>から)</p>

<p>まずは最も簡単な導入が完了したようです。<br/>
引き続きSpring Bootを見ていきますが、本記事は一旦ここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



]]></content>
  </entry>
  
</feed>
