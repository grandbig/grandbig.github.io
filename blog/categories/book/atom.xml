<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: book | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/book/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2019-10-03T21:55:51+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[『Team Geek Googleのギークたちはいかにしてチームを作るのか』を読んで]]></title>
    <link href="http://grandbig.github.io/blog/2019/02/24/team-geek/"/>
    <updated>2019-02-24T20:27:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2019/02/24/team-geek</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は今更ながら読んで <strong>『Team Geek Googleのギークたちはいかにしてチームを作るのか』</strong> という本を紹介しつつ、<br/>
転職前後で自身の置かれた立場の変化から思ったことや感じたことを連々と書いていきたいと思います。</p>

<h3>書籍『Team Geek Googleのギークたちはいかにしてチームを作るのか』の紹介</h3>

<p>2013年に初版発行されたオライリー書籍で、 <code>Subversion</code> などのフリーソフトウェア開発に携わり、Googleでも働いていた Brian Fitzpatrickさんが執筆した書籍です。</p>

<iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="https://rcm-fe.amazon-adsystem.com/e/cm?ref=tf_til&t=grandbig7-22&m=amazon&o=9&p=8&l=as1&IS1=1&detail=1&asins=4873116309&linkId=3698919d5b20ae653e91ee7585b711eb&bc1=FFFFFF&lt1=_top&fc1=333333&lc1=0066C0&bg1=FFFFFF&f=ifr"></iframe>


<p></p>

<!-- more -->


<p>内容を簡潔に言うと、<br/>
『最高のエンジニアチームを構築し、円滑なチーム開発を実行するにはどうしたら良いのか』<br/>
についての実践的な考え方やコツを学べる本です。</p>

<p>その中でも特に重要な三本柱が、</p>

<p><strong>Humidity</strong> (謙虚)<br/>
<strong>Respect</strong> (尊敬)<br/>
<strong>Trust</strong> (信頼)</p>

<p>であり、これらをまとめて <strong>HRT</strong> と読んでいます。</p>

<p>本書は、全編を通して <strong>HRT</strong> を元に実行すべき所作について語られています。<br/>
しかも、著者の実体験を元に具体的なストーリーを挟みつつ描かれているため、<br/>
読者の立場に置き換えて対処方法などをイメージしやすいと思います。</p>

<p>また、著者はリーダポジションを経験しているため、リーダ目線で語られてはいますが、<br/>
実践内容はメンバーであっても行動に移せるため、リーダに限らずメンバーにとっても一見の価値がある書籍になっています。</p>

<p>個人的にはまさに <strong>HRT</strong> に共感したため、オススメしたい一冊だと心から感じています。</p>

<h3>転職前後で変わった立場から見るHRTを元にしたチーム構築について考えてみる</h3>

<p>さて、私は2月より新しい会社で働き始めているのですが、<br/>
ちょうどこの書籍を読んだことで、改めて自身の立場が変わり、意識すべき視点も変わったのだと気づきました。</p>

<p>良い機会ですので、前職で自身が考えていたことを振り返りつつ、現職でどのように立ち振る舞うべきかなどについて考えをまとめました。</p>

<h4>前職で新規参画者をチームに受け入れる側だった自分</h4>

<p>前職では約3年間働きました。<br/>
そして、その3年間をほぼ1つのプロダクトに費やしたことで、<br/>
気がつけば私はエンハンスチーム内で最も古株のメンバーとなっていました。</p>

<p>しかも人の入れ替わりが激しい現場だったため、<br/>
新規参画者の受け入れを幾度となく担当してきました。<br/>
その際に私自身が気をつけていた視点は下記の通りです。</p>

<ol>
<li>新規参画者の立ち上げには時間がかかるため、焦らない<br/>
● 開発を独り立ちしてこなせるようになるのに最低でも1〜2ヶ月<br/>
● チームに慣れて不安なく働けるようになるのに最低でも半年程度</li>
<li>初めから必要以上に情報を与えない(過度なプレッシャーを与えない)<br/>
● 直近の仕事に影響があるかないかを軸に、重要な情報から伝えていく<br/>
● 新規参画者では情報の重要度を判断できない</li>
<li>新規参画者のつっかえポイントは貴重な気づき<br/>
● チームに長くいると暗黙の了解が増え、不自然に気づきにくくなる</li>
</ol>


<p>当時は自然と上記の対応に経験とともに収束されていったのですが、<br/>
今考えてみると <strong>HRT</strong> に関係していると言えることに気づきました。</p>

<p>つまり、1と2は<br/>
新規参画者が現場に慣れて近い将来活躍してくれるだろうことを信じる = <strong>Trust</strong><br/>
であり、3は<br/>
自身がUPDATEすべき情報を得て改善できる = <strong>Humidity</strong><br/>
ということです。</p>

<h4>現職で新規参画者としてチームに受け入れられる側となった自分</h4>

<p>そして、今、私は転職したことで、「チームに『受け入れられる側』」になっています。<br/>
これまでと逆の立場になったことで <strong>HRT</strong> の原則に則るとどのような動き方ができるのか考えてみました。</p>

<ol>
<li>まずはその現場に慣れる<br/>
● 人を知り、ルールを知ることから始める</li>
<li>続いてチームの一員であることを自覚する<br/>
● 新規・既存に関わらずチームの課題は自分ごととして捉えるべき</li>
</ol>


<p>1については、</p>

<p>自分の経験値を正とするのではない = <strong>Humidity</strong><br/>
これまでこのプロダクトを担当してきたメンバーに敬意を払う = <strong>Respect</strong></p>

<p>という意味で、「過去、自分は◯◯は▲▲していたから&hellip;」と批判するべきではないということです。</p>

<p>そして、歴史を知り、現状を知った上で、初めて建設的な議論や提案になると思っています。<br/>
つまり、2のように自分ごととして捉えた上での行動が可能になるということです。</p>

<p>この順番さえ間違えなければ、一緒にチームを次のステップに進められると互いに信じていけるのではないかと思います。</p>

<p>逆に、経緯を知ろうともせずに、あるべき事実だけを突きつけ批判するような形を取れば、<br/>
<strong>HRT</strong> の全てに背いているため、チームから煙たがれることとなるでしょう。</p>

<h3>まとめ</h3>

<p>さて、今回は『Team Geek』の書籍について簡単に紹介し、<br/>
前職と現職での考え方と <strong>HRT</strong> との関係性について見てきました。</p>

<p>振り返ってみると、無意識的に <strong>HRT</strong> を意識した言動が取れていたこともあったのですが、<br/>
改めて言語化された形で体系的に学べる書籍があると非常に助かりますね。</p>

<p>エンジニア一人ひとりが働きやすい世の中にしていくためにも、<br/>
これからも更に本書籍が広まることを願ってやみません。</p>

<p>ということで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初心者だけしゃない！『iOSアプリ設計パターン入門』へのススメ]]></title>
    <link href="http://grandbig.github.io/blog/2019/02/11/ios-architecture-impression/"/>
    <updated>2019-02-11T15:28:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2019/02/11/ios-architecture-impression</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は、<a href="https://peaks.cc/iOS_architecture">iOSアプリ設計パターン入門</a>という書籍を紹介したいと思います。</p>

<div class="peaks_widget" style="overflow:hidden; padding:20px; border:2px solid #ccc;"><div class="peaks_widget__image" style="float:left; margin-right:15px; line-height:0;"><a target="_blank" id="purchase" href="https://peaks.cc/grand_big/iOS_architecture"><img alt="iOSアプリ設計パターン入門" style="border:none; max-width:140px;" src="https://s3-ap-northeast-1.amazonaws.com/peaks-images/ios_architecture_project_cover_alpha.png"></a></div><div class="peaks_widget__info"><p style="margin:0 0 3px 0; font-size:110%; font-weight:bold;"><a target="_blank" id="purchase" href="http://peaks.cc/grand_big/iOS_architecture">iOSアプリ設計パターン入門</a></p><ul style="margin:0; padding:0;">
<li style="font-size:90%; list-style:none;"><span>著者：</span>
<span>関 義隆,</span><span>史 翔新,</span><span>田中 賢治,</span><span>松館 大輝,</span><span>鈴木 大貴,</span><span>杉上 洋平,</span><span>加藤 寛人,</span></li>
<li style="font-size:90%; list-style:none;">製本版,電子版</li>
<li style="font-size:90%; list-style:none;"><a target="_blank" id="purchase" style="text-decoration:underline; color:#1DA1F2;" href="http://peaks.cc/grand_big/iOS_architecture">PEAKSで購入する</a></li></ul></div></div>


<p></p>

<p>こちらの書籍は<a href="https://peaks.cc/">PEAKS</a>というクラウドファンディングの技術書版サービス内で成立したプロジェクトから生み出されたものです。</p>

<p>以前、<a href="https://peaks.cc/books/architecture_patterns">Android アプリ設計パターン入門</a>という書籍が執筆されていたのですが、<br/>
個人的には『iOS版もあれば絶対売れるのに&hellip;』と思っていました。<br/>
その後、ふとPEAKSのサイトを見た時に、待ちに待った <code>iOS版</code> が執筆のための応援を募っていることに気づき、その場で応援を即決したことを昨日のように覚えています。</p>

<p>そしてリリースされた書籍を手に取り読み込んでいくうちに、<br/>
予想通りの良書であったと再認識しました。<br/>
そんな想いを少しでも共有したいと思い、本記事を書いていこうと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>対象読者について</h3>

<p>PEAKSのページを見ると、対象読者は下記のように記されています。</p>

<p><code>
◆ アプリをどんなアーキテクチャで作るか迷っている方
◆ ViewController, ViewModelがすぐに肥大してしまう方
◆ 今後もメンテナンスし続けるアプリを作る方
◆ アーキテクチャ変遷の歴史を知りたい方
◆ そもそも設計って何？という方
</code></p>

<p>書籍のタイトルに『入門』というワードが入っているため、初心者向けのように思われるかもしれませんが、<br/>
上記の対象者を見て頂くとわかる通り、所謂 <code>Tech Lead</code> 人材にとっても役立つ書籍と言えるかと思います。</p>

<h3>内容について</h3>

<p>では、実際にどのような内容が書かれているのでしょうか。<br/>
まずは目次から見ていきましょう。</p>

<h4>目次</h4>

<p>```
第Ⅰ部：設計を知る
 ├── 第１章：設計するということ
 ├── 第２章：設計にパターンを適用する前に
 ├── 第３章：Swiftらしく設計する
 └── 第４章：アーキテクチャのパターンを鳥瞰する
第Ⅱ部：iOSアプリのための設計パターン
 ├── 第５章：MVC
 ├── 第６章：MVP
 ├── 第７章：MVVM
 ├── 第８章：Flux
 ├── 第９章：Redux
 ├── 第１０章：Clean Architecture
 ├── 第１１章：アプリの起動経路 &ndash; Application Coordinator の導入
 ├── 第１２章：画面遷移のパターン &ndash; Router の導入
 └── 第１３章：第2部まとめ &ndash; アーキテクチャの選定基準
 第Ⅲ部：設計をサービスに導入する
 ├── 第１４章：Flux の導入例
 └── 第１５章：Redux の導入例 &ndash; 大規模アプリケーションに Redux を導入する</p>

<p> ※細部は省略
```</p>

<p>続いて筆者が思う各部それぞれのポイントについて紹介します。</p>

<h4>第Ⅰ部：設計を知る</h4>

<p>第Ⅰ部は、</p>

<ol>
<li>「設計とは何か？/なぜ設計をするのか？」の説明</li>
<li>設計をする上で知っておくべき&amp;身につけておくべき知識</li>
<li>設計原則をSwiftでどう実現させるのか</li>
<li>アーキテクチャの変遷(iOSならではの話を含む)</li>
</ol>


<p>などについて語られています。<br/>
1や2, 4に関しては、iOSに閉じない話も含まれているため、アーキテクチャ自体の読み物としても面白いと思います。</p>

<p>3で記載した通り、具体的なコードベースで設計原理のSwiftでの実現手法が書かれているため、<br/>
設計本でありがちな思想の提示に留まらないところに本書籍の価値があると感じました。</p>

<p>要は、『 <strong>言いたいことはわかるけど、どう書けば良いの？</strong> 』という読者の問いに答えられる書籍になっているということです。</p>

<h4>第Ⅱ部：iOSアプリのための設計パターン</h4>

<p>第Ⅱ部は、</p>

<ol>
<li>各種設計パターンの説明と具体例の提示</li>
<li>画面遷移の複雑さをどう解決するかの紹介</li>
<li>アーキテクチャを選定する難しさ</li>
</ol>


<p>などについて語られています。</p>

<p>1にある通り、概念の図式はもちろんのこと、具体的にコードを用いて説明されているため、<br/>
どんなアーキテクチャがあるのか知らないという方でも理解が進むように感じられます。</p>

<p>「書籍で読まずとも、ネットでググれば大抵理解できるのでは？」と思われる方もいるかもしれません。<br/>
その意見に対する見解としては、<br/>
『 <strong>各種アーキテクチャのスタンダードな理解/共通理解を持つための拠り所としての価値</strong> 』<br/>
だと思っています。</p>

<p>つまり、<br/>
ネット上には、各種アーキテクチャを説明する記事が多数見つかりますが、<br/>
物によってはオレオレ要素が含まれているため、<br/>
記事によって差異が見られ、『何が正しいの？』と思ってしまうことがあるということです。</p>

<p>また、チーム開発をする際に、人によって信じる依代が異なると、<br/>
コミュニケーションコストが増大する可能性もあります。</p>

<p>この書籍が必ずしもアーキテクチャ選定時の拠り所にすべきとは言いませんが、<br/>
1つの選択肢として与えられることは一読者として非常にありがたいと感じています。</p>

<p>2に関しては、ネイティブアプリ特有の課題に突っ込んだ内容となっています。<br/>
プロジェクトアサイン時に、キャッチアップのためソースコードを読むと思うのですが、<br/>
画面遷移処理がキレイにまとめられているとそれだけで立ち上がりコストがぐっと楽になると思います。</p>

<p>また、各種アーキテクチャでアプリ構築を始めたところ、<br/>
「画面遷移処理はどうしよう？」と思うこともあったりするので、ありがたいナレッジの共有だと感じました。</p>

<p>そして非常に共感したのが、3のアーキテクチャ選定に関する話です。<br/>
『 <strong>モダン開発に対する魅力がアーキテクチャの必要可否に勝って選定されることが本当に正しいのか？</strong> 』
ということを考えるのに良い内容だと感じています。</p>

<p>個人的にも、「流行りこそ正義」みたいな考え方が先行して失敗してしまった苦い思い出があるので、ぜひ読んで頂きたい章です。<br/>
(ホント、なかなか難しいんですよね&hellip;。プロダクトやチームにとってベターなアーキテクチャ選定って&hellip;)</p>

<h4>第Ⅲ部：設計をサービスに導入する</h4>

<p>第Ⅲ部は、</p>

<ol>
<li><code>Flux</code> や <code>Redux</code> を実開発で利用するための追加説明</li>
<li>開発だけでなく、テストに目を向けた説明</li>
</ol>


<p>などについて語られています。</p>

<p>入門系の技術書籍を読んだ後に思いがちな<br/>
『基本はわかったけど、応用に生かせない』というもどかしさ<br/>
を読者が埋めやすくするようなサポートだと感じています。</p>

<p><code>Flux</code> と <code>Redux</code> の2パターンに限った話ではありますが、<br/>
エラーハンドリング/テスト/DIなどの汎用的な内容も含まれているため、<br/>
一読の価値があると思います。</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
個人的には、iOS関連の書籍に持続可能性を持たせることは非常に難しいと思っていたため、<br/>
本書に出会った時はとても感動しました。<br/>
今この時だけでなく、長期に渡って一助となる可能性を感じることができました。<br/>
これから繰り返し読み込んで理解を深めたいと思いますし、実業務に活かせるポイントを多分に含んでいると感じています。</p>

<p>とは言え、百聞は一見に如かずということで、実際に一読を考えてみてはいかがでしょうか？</p>

<p>と言ったところで本日はここまで。</p>

<div class="peaks_widget" style="overflow:hidden; padding:20px; border:2px solid #ccc;"><div class="peaks_widget__image" style="float:left; margin-right:15px; line-height:0;"><a target="_blank" id="purchase" href="https://peaks.cc/grand_big/iOS_architecture"><img alt="iOSアプリ設計パターン入門" style="border:none; max-width:140px;" src="https://s3-ap-northeast-1.amazonaws.com/peaks-images/ios_architecture_project_cover_alpha.png"></a></div><div class="peaks_widget__info"><p style="margin:0 0 3px 0; font-size:110%; font-weight:bold;"><a target="_blank" id="purchase" href="http://peaks.cc/grand_big/iOS_architecture">iOSアプリ設計パターン入門</a></p><ul style="margin:0; padding:0;">
<li style="font-size:90%; list-style:none;"><span>著者：</span>
<span>関 義隆,</span><span>史 翔新,</span><span>田中 賢治,</span><span>松館 大輝,</span><span>鈴木 大貴,</span><span>杉上 洋平,</span><span>加藤 寛人,</span></li>
<li style="font-size:90%; list-style:none;">製本版,電子版</li>
<li style="font-size:90%; list-style:none;"><a target="_blank" id="purchase" style="text-decoration:underline; color:#1DA1F2;" href="http://peaks.cc/grand_big/iOS_architecture">PEAKSで購入する</a></li></ul></div></div>


<p></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
