<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2018-07-23T00:20:10+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HackerRankで問題を解いてみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2018/07/22/hacker-rank/"/>
    <updated>2018-07-22T23:35:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/07/22/hacker-rank</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>さて、今回は<a href="https://www.hackerrank.com/dashboard?h_r=logo">HackerRank</a>について紹介したいと思います。<br/>
HackerRankとは求人サイトの一種で、問題を解くことで得点を稼ぐことができ、そのスコアでランキングを競うことのできるサイトです。<br/>
同様のサービスでは<a href="https://paiza.jp/">paiza</a>も有名かと思います。<br/>
( 少し前はCodeIQといったサービスもありましたね。 )</p>

<p>HackerRankの特徴は、</p>

<ul>
<li>全世界のエンジニア対象(=ランキングは世界ランキングになる)</li>
<li>問題文は全て英語で書かれている</li>
<li>問題種別は <code>Algorithms</code>, <code>Data Structures</code>, <code>Mathematics</code> が用意されている</li>
</ul>


<p>といったところでしょうか。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>どんな問題なのか</h3>

<p>オンラインでのプログラミングテストでありがちなのが、その独特な <code>Input</code> の扱い方かと思います。<br/>
例えば、複数 <code>Input</code> がある場合、<br/>
1回目の <code>readLine()</code> の呼び出しが1つ目の <code>Input</code> に当たり、<br/>
2回目の <code>readLine()</code> の呼び出しが2つ目の <code>Input</code> に当たるといった感じですね。</p>

<p>HackerRankでも、初級の問題ではそういった部分を書かせることがあるのですが、<br/>
ほとんどの問題が『肝心のロジックをどのように書いているのかに終始できる問題の出し方になっています。</p>

<p>では、実際に一例を見てみましょう。<br/>
こちらの<a href="https://www.hackerrank.com/challenges/apple-and-orange/problem">Apple and Orange</a>は <code>Algorithms</code> に区分けされた <code>Easy</code> 問題です。</p>

<p>問題を見てみると、「何やら既にたくさんのコードが書かれているな」ということに気づくでしょう。</p>

<p><img src="http://grandbig.github.io/images/hacker_rank.png" alt="HackerRankの問題例" /></p>

<p>上図のように中身のないメソッドが用意されており、その中のロジックを書くことが『問題に回答する』ということになります。<br/>
<code>Easy</code> 問題であっても、割と長々と英語で問題が解説されているため、身構えてしまう人もいるかもしれませんが、<br/>
最後まで読み切ってしまえば、問題の難易度と英文の長さが比例しているわけではないということがわかるでしょう。</p>

<p>参考までに上記の問題を筆者が解いたときの回答を記載しておきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="n">countApplesAndOranges</span><span class="p">(</span><span class="nl">s:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">t:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">a:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">b:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">apples:</span> <span class="p">[</span><span class="n">Int</span><span class="p">],</span> <span class="nl">oranges:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// まずは林檎の計算から開始する</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">sumAppleCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">apple</span> <span class="k">in</span> <span class="n">apples</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">position</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">apple</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">position</span> <span class="o">&gt;=</span> <span class="n">s</span><span class="p">,</span> <span class="n">position</span> <span class="o">&lt;=</span> <span class="n">t</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">sumAppleCount</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 次にオレンジの計算</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">sumOrangeCount</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">orange</span> <span class="k">in</span> <span class="n">oranges</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">position</span> <span class="o">=</span> <span class="n">b</span> <span class="o">+</span> <span class="n">orange</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">position</span> <span class="o">&gt;=</span> <span class="n">s</span><span class="p">,</span> <span class="n">position</span> <span class="o">&lt;=</span> <span class="n">t</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">sumOrangeCount</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="s">&quot;\(sumAppleCount)</span><span class="se">\n</span><span class="s">\(sumOrangeCount)&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>このように、コメント文を日本語で書いても問題はありません。<br/>
因みに、一度解いて提出した回答内容はいつでも <code>Submissions</code> タブから確認することができます。</p>

<p><img src="http://grandbig.github.io/images/hacker_rank_2.png" alt="提出した回答の確認方法" /></p>

<h3>まとめ</h3>

<p>さて、今回はHackerRankについて簡単に紹介しました。<br/>
初めは『プロダクトの開発の方がよっぽど面白いんじゃないか』と思っていたのですが、<br/>
案外、解き始めて見ると楽しいし、勉強になるしで良い遊び場を見つけたような気持ちになりました。</p>

<p>少しずつではありますが、筆者も <code>Easy</code> 問題から解き始めています。<br/>
そして <a href="https://github.com/grandbig/HackerRankAnswer">GitHub</a>に、その軌跡を残し始めることにしました。</p>

<p>「プロダクト開発で、『○○なロジックをキレイに書くためには&hellip;』なんて考えた時に思い出すかもしれないな」なんて思ったり笑</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ReSwiftを勉強してみよう！(3) ~ 非同期通信処理の場合 ~]]></title>
    <link href="http://grandbig.github.io/blog/2018/06/30/reswift-3/"/>
    <updated>2018-06-30T11:11:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/06/30/reswift-3</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は久しぶりに<a href="https://github.com/ReSwift/ReSwift">ReSwift</a>について書きたいと思います。<br/>
これまで以下のように <code>ReSwift</code> について勉強してきました。</p>

<ul>
<li><a href="https://grandbig.github.io/blog/2016/09/03/reswift-1/">ReSwiftを勉強してみよう！(1)</a><br/>
<code>CounterSample</code> を見ながら <code>ReSwift</code> の基本的な考え方</li>
<li><a href="https://grandbig.github.io/blog/2016/12/06/reswift-2/">ReSwiftを勉強してみよう！(2)</a><br/>
<code>ReSwiftRouter</code> を用いた画面切り替えの場合の書き方</li>
</ul>


<p>3回目の今回は非同期通信処理がある場合の <code>ReSwift</code> の利用方法について見ていきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>サンプルの説明</h3>

<p>まずはサンプルアプリの要件を説明します。</p>

<ul>
<li>Googleマップ上でユーザの現在地を表示</li>
<li>ユーザの現在地周辺のレストランを検索</li>
<li>その検索結果をGoogleマップにプロット</li>
</ul>


<p>今回、ユーザの現在地周辺のレストラン検索には、<a href="https://developers.google.com/places/?hl=ja">Google Places API</a>を利用します。<br/>
実際のイメージは以下の通りです。</p>

<p><img src="http://grandbig.github.io/images/reswift_3_1.png" alt="今回のサンプルアプリ" /></p>

<h3>実装の説明</h3>

<p>続いて、具体的な実装について説明したいと思います。<br/>
1つ1つ見ていきましょう。</p>

<h4>API処理周り</h4>

<p><code>ReSwift</code> とは直接関係ありませんが、今回の非同期通信処理の根源となるAPI処理周りについて先に書いておきます。<br/>
<a href="https://github.com/Moya/Moya">Moya</a>を利用して<a href="https://developers.google.com/places/?hl=ja">Google Places API</a>を叩けるようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// GooglePlacesAPI</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">Moya</span>
</span><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">GooglePlaces</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="n">GooglePlacesAPITarget</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">hospitals</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">restaurants</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="nl">APIError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">apiError</span><span class="p">(</span><span class="nl">description:</span> <span class="n">String</span><span class="p">)</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">decodeError</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="nl">GooglePlacesError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">notFoundError</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">GooglePlacesAPIProtocol</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchHospitals</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchPhoto</span><span class="p">(</span><span class="nl">placeId:</span> <span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">UIImage</span><span class="o">?&gt;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">GooglePlacesAPITarget:</span> <span class="n">TargetType</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// API Key</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">apiKey:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">keyFileName</span><span class="p">(),</span>
</span><span class='line'>                                          <span class="nl">ofType:</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">plistExtension</span><span class="p">())</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                                            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;key.plistが見つかりません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;key.plistの中身が想定通りではありません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">googleApiKeyName</span><span class="p">()]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;Google APIのKeyが設定されていません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">apiKey</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ベースURLを文字列で定義</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">_baseURL:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="n">hospitals</span><span class="p">,</span> <span class="p">.</span><span class="nl">restaurants:</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">url</span><span class="p">.</span><span class="n">googlePlacesApiPlaceUrl</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">baseURL:</span> <span class="n">URL</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">URL</span><span class="p">(</span><span class="nl">string:</span> <span class="n">_baseURL</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enumの値に対応したパスを指定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">path:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="n">hospitals</span><span class="p">,</span> <span class="p">.</span><span class="nl">restaurants:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enumの値に対応したHTTPメソッドを指定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">method:</span> <span class="n">Moya</span><span class="p">.</span><span class="n">Method</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="n">hospitals</span><span class="p">,</span> <span class="p">.</span><span class="nl">restaurants:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">.</span><span class="n">get</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// スタブデータの設定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">sampleData:</span> <span class="n">Data</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="n">hospitals</span><span class="p">,</span> <span class="p">.</span><span class="nl">restaurants:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;Stub data&quot;</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">using:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">.</span><span class="n">utf8</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// パラメータの設定</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">task:</span> <span class="n">Task</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">let</span> <span class="p">.</span><span class="n">hospitals</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">.</span><span class="n">requestParameters</span><span class="p">(</span><span class="nl">parameters:</span> <span class="p">[</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">keyFileName</span><span class="p">()</span><span class="o">:</span> <span class="n">apiKey</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">locationKeyName</span><span class="p">()</span><span class="o">:</span> <span class="s">&quot;\(lat),\(lng)&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">radiusKeyName</span><span class="p">()</span><span class="o">:</span> <span class="mi">1500</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">typeKeyName</span><span class="p">()</span><span class="o">:</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">hospitalTypeValueName</span><span class="p">()</span>
</span><span class='line'>                <span class="p">],</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">)</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">let</span> <span class="p">.</span><span class="n">restaurants</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">.</span><span class="n">requestParameters</span><span class="p">(</span><span class="nl">parameters:</span> <span class="p">[</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">keyFileName</span><span class="p">()</span><span class="o">:</span> <span class="n">apiKey</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">locationKeyName</span><span class="p">()</span><span class="o">:</span> <span class="s">&quot;\(lat),\(lng)&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">radiusKeyName</span><span class="p">()</span><span class="o">:</span> <span class="mi">1500</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">typeKeyName</span><span class="p">()</span><span class="o">:</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">restaurantTypeValueName</span><span class="p">()</span>
</span><span class='line'>                <span class="p">],</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ヘッダーの設定</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">headers:</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">String</span><span class="p">]</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="n">hospitals</span><span class="p">,</span> <span class="p">.</span><span class="nl">restaurants:</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">GooglePlacesAPI:</span> <span class="n">GooglePlacesAPIProtocol</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">provider:</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">GooglePlacesAPITarget</span><span class="o">&gt;!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// イニシャライザ</span>
</span><span class='line'>    <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">provider</span> <span class="o">=</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">GooglePlacesAPITarget</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: CRUD operations</span>
</span><span class='line'>    <span class="c1">/// 指定の緯度、経度から一定範囲内のレストランを検索する処理</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="c1">/// - Returns: レストランのプレイス情報</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="p">(</span><span class="n">promise</span><span class="p">,</span> <span class="n">resolver</span><span class="p">)</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span><span class="p">.</span><span class="n">pending</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">provider</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">restaurants</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">lat</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">lng</span><span class="p">))</span> <span class="p">{</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>            <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">let</span> <span class="n">response</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">let</span> <span class="n">decoder</span> <span class="o">=</span> <span class="n">JSONDecoder</span><span class="p">()</span>
</span><span class='line'>                    <span class="n">decoder</span><span class="p">.</span><span class="n">keyDecodingStrategy</span> <span class="o">=</span> <span class="p">.</span><span class="n">convertFromSnakeCase</span>
</span><span class='line'>                    <span class="n">let</span> <span class="n">places</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">Places</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">response</span><span class="p">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">resolver</span><span class="p">.</span><span class="n">fulfill</span><span class="p">(</span><span class="n">places</span><span class="p">.</span><span class="n">results</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">APIError</span><span class="p">.</span><span class="n">decodeError</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">.</span><span class="n">failure</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">APIError</span><span class="p">.</span><span class="n">apiError</span><span class="p">(</span><span class="nl">description:</span> <span class="n">error</span><span class="p">.</span><span class="n">localizedDescription</span><span class="p">))</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>例によって取得したデータを利用しやすくするために <code>Codable</code> を使います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Places.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Location:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">lat:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">lng:</span> <span class="n">Double</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Viewport:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">northeast:</span> <span class="n">Location</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">southwest:</span> <span class="n">Location</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Geometry:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">viewport:</span> <span class="n">Viewport</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">location:</span> <span class="n">Location</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">OpeningHours:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">weekdayText:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">openNow:</span> <span class="n">Bool</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Photos:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">photoReference:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">width:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">height:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">htmlAttributions:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Place:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">placeId:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">icon:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">rating:</span> <span class="n">Double</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">scope:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">vicinity:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">reference:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">priceLevel:</span> <span class="n">Int</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">types:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">geometry:</span> <span class="n">Geometry</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">openingHours:</span> <span class="n">OpeningHours</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">photos:</span> <span class="p">[</span><span class="n">Photos</span><span class="p">]</span><span class="o">?</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Places:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">results:</span> <span class="p">[</span><span class="n">Place</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">status:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">htmlAttributions:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>State</h4>

<p>さて、 <code>ReSwift</code> の <code>State</code> から見ていきましょう。<br/>
<code>State</code> はアプリの状態を表現する役割を担います。<br/>
状態はパラメータの値で正常かどうかを判断できる作りにします。</p>

<p>具体的には、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// AppState.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">ReSwift</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="nl">AppState:</span> <span class="n">StateType</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">mapState</span> <span class="o">=</span> <span class="n">MapState</span><span class="p">(</span><span class="nl">places:</span> <span class="p">[],</span> <span class="nl">error:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="nl">MapState:</span> <span class="n">StateType</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">places:</span> <span class="p">[</span><span class="n">Place</span><span class="p">]</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">error:</span> <span class="n">Error</span><span class="o">?</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>といった感じです。</p>

<ul>
<li>アプリに複数状態が存在する場合を考慮して <code>AppState</code> 内に各状態を持たせます。</li>
<li>それぞれの状態内に成功パターン/失敗パターンを識別できるようにパラメータを持たせます。</li>
</ul>


<h4>Action</h4>

<p><code>Action</code> はまさにアプリにどういった状況を起こさせたいか (つまり、アクション)を意味する役割を担います。<br/>
具体的には、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// AppAction.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">ReSwift</span>
</span><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">MapState</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">struct</span> <span class="nl">RequestRestaurantsAction:</span> <span class="n">Action</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">struct</span> <span class="nl">SuccessRestaurantsAction:</span> <span class="n">Action</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="nl">response:</span> <span class="p">[</span><span class="n">Place</span><span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">struct</span> <span class="nl">APIErrorAction:</span> <span class="n">Action</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="nl">error:</span> <span class="n">Error</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">static</span> <span class="n">func</span> <span class="n">fetchRestaurantsAction</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Store</span><span class="o">&lt;</span><span class="n">AppState</span><span class="o">&gt;</span><span class="p">.</span><span class="n">AsyncActionCreator</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">{</span> <span class="p">(</span><span class="n">state</span><span class="p">,</span> <span class="n">store</span><span class="p">,</span> <span class="n">callback</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">firstly</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">GooglePlacesAPI</span><span class="p">().</span><span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">lat</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">lng</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}.</span><span class="n">done</span> <span class="p">{</span> <span class="n">results</span> <span class="k">in</span>
</span><span class='line'>                <span class="n">callback</span> <span class="p">{</span><span class="n">_</span><span class="p">,</span> <span class="n">_</span> <span class="k">in</span> <span class="n">SuccessRestaurantsAction</span><span class="p">(</span><span class="nl">response:</span> <span class="n">results</span><span class="p">)}</span>
</span><span class='line'>            <span class="p">}.</span><span class="n">catch</span> <span class="p">{</span> <span class="n">error</span> <span class="k">in</span>
</span><span class='line'>                <span class="n">callback</span> <span class="p">{</span><span class="n">_</span><span class="p">,</span> <span class="n">_</span> <span class="k">in</span> <span class="n">APIErrorAction</span><span class="p">(</span><span class="nl">error:</span> <span class="n">error</span><span class="p">)}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>という感じです。<br/>
今回の肝となる非同期通信処理ですが、 <code>ReSwift</code> の <code>AsyncActionCreator</code> を利用しています。<br/>
これを使うことで、非同期通信処理後に適切な <code>Action</code> を返却できるようになっています。</p>

<h4>Reducer</h4>

<p>渡されてきた <code>Action</code> と<code>State</code> から新規 <code>State</code> を作成し、返却する役割を担います。<br/>
状態変化のロジックを担っているとも言えますね。<br/>
具体的には、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// AppReducer.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">ReSwift</span>
</span><span class='line'>
</span><span class='line'><span class="n">func</span> <span class="n">appReducer</span><span class="p">(</span><span class="nl">action:</span> <span class="n">Action</span><span class="p">,</span> <span class="nl">state:</span> <span class="n">AppState</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">AppState</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">state</span> <span class="o">=</span> <span class="n">state</span> <span class="o">??</span> <span class="n">AppState</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">state</span><span class="p">.</span><span class="n">mapState</span> <span class="o">=</span> <span class="n">MapState</span><span class="p">.</span><span class="n">fetchRestaurantsReducer</span><span class="p">(</span><span class="nl">action:</span> <span class="n">action</span><span class="p">,</span> <span class="nl">state:</span> <span class="n">state</span><span class="p">.</span><span class="n">mapState</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">state</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">MapState</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">public</span> <span class="k">static</span> <span class="n">func</span> <span class="n">fetchRestaurantsReducer</span><span class="p">(</span><span class="nl">action:</span> <span class="n">Action</span><span class="p">,</span> <span class="nl">state:</span> <span class="n">MapState</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">MapState</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">state</span> <span class="o">=</span> <span class="n">state</span> <span class="o">??</span> <span class="n">MapState</span><span class="p">(</span><span class="nl">places:</span> <span class="p">[],</span> <span class="nl">error:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">switch</span> <span class="n">action</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">let</span> <span class="n">action</span> <span class="n">as</span> <span class="nl">SuccessRestaurantsAction:</span>
</span><span class='line'>            <span class="n">state</span><span class="p">.</span><span class="n">places</span> <span class="o">=</span> <span class="n">action</span><span class="p">.</span><span class="n">response</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">let</span> <span class="n">action</span> <span class="n">as</span> <span class="nl">APIErrorAction:</span>
</span><span class='line'>            <span class="n">state</span><span class="p">.</span><span class="n">error</span> <span class="o">=</span> <span class="n">action</span><span class="p">.</span><span class="n">error</span>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">state</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようになります。</p>

<ul>
<li>複数状態が必要なアプリに対応できるように <code>appReducer</code> を用意します。</li>
<li>特定の状態でしか利用しない <code>Action</code> が当然出てきますが、そこは <code>switch</code> 文で判断します。</li>
</ul>


<h4>Store</h4>

<p><code>Store</code> は</p>

<ul>
<li>アプリ内で必ず1つの存在 (つまりシングルトン)</li>
<li>アプリの状態を管理する</li>
<li>Stateを更新するためのdispatchを提供する

<ul>
<li>言い換えればdispatch(action)をすることでStoreにStateの変更を知らせられる</li>
</ul>
</li>
<li>Stateの状態を追えるようにsubscribeを提供する

<ul>
<li>言い換えればsubscribe(listener)をすることでlistenerはgetStateを通してStateの状態を取得できる</li>
</ul>
</li>
</ul>


<p>というものです。<br/>
具体的には、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// AppDelegate.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">ReSwift</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Storeの定義</span>
</span><span class='line'><span class="n">let</span> <span class="n">mainStore</span> <span class="o">=</span> <span class="n">Store</span><span class="o">&lt;</span><span class="n">AppState</span><span class="o">&gt;</span><span class="p">(</span>
</span><span class='line'>    <span class="nl">reducer:</span> <span class="n">appReducer</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">state:</span> <span class="nb">nil</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="n">_</span> <span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span>
</span><span class='line'>                     <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="p">[</span><span class="nl">UIApplicationLaunchOptionsKey:</span> <span class="n">Any</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// ここでGoogleマップの設定</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;plist&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">&quot;googleApiKey&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">GMSServices</span><span class="p">.</span><span class="n">provideAPIKey</span><span class="p">(</span><span class="n">apiKey</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>となります。<br/>
ここはお決まりの書き方になります。</p>

<h4>ユーザアクション〜結果反映まで</h4>

<p>最後にユーザがアクションしてから、結果を <code>View</code> として反映する部分の処理を見ていきます。<br/>
基本的には <code>ViewController.swift</code> に書いていきます。</p>

<p>全文を載せると、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'><span class="n">import</span> <span class="n">ReSwift</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: - IBOutlets</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: - Properties</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">locationManager:</span> <span class="n">CLLocationManager</span><span class="o">?</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">let</span> <span class="nl">zoomLevel:</span> <span class="n">Float</span> <span class="o">=</span> <span class="mf">16.0</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">currentLocation:</span> <span class="n">CLLocationCoordinate2D</span><span class="o">?</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">initView:</span> <span class="n">Bool</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>        <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// GoogleMapの初期化</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">isMyLocationEnabled</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">mapType</span> <span class="o">=</span> <span class="n">GMSMapViewType</span><span class="p">.</span><span class="n">normal</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">compassButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">myLocationButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">compassButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 位置情報関連の初期化</span>
</span><span class='line'>        <span class="n">locationManager</span> <span class="o">=</span> <span class="n">CLLocationManager</span><span class="p">()</span>
</span><span class='line'>        <span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">desiredAccuracy</span> <span class="o">=</span> <span class="n">kCLLocationAccuracyBest</span>
</span><span class='line'>        <span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">requestWhenInUseAuthorization</span><span class="p">()</span>
</span><span class='line'>        <span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">startUpdatingLocation</span><span class="p">()</span>
</span><span class='line'>        <span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// subscribe to state changes</span>
</span><span class='line'>        <span class="n">mainStore</span><span class="p">.</span><span class="n">subscribe</span><span class="p">(</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">didReceiveMemoryWarning</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">didReceiveMemoryWarning</span><span class="p">()</span>
</span><span class='line'>        <span class="c1">// Dispose of any resources that can be recreated.</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: - IBActions</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">tappedSearchButton</span><span class="p">(</span><span class="n">_</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">mainStore</span><span class="p">.</span><span class="n">dispatch</span><span class="p">(</span><span class="n">MapState</span><span class="p">.</span><span class="n">fetchRestaurantsAction</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">mapView</span><span class="p">.</span><span class="n">myLocation</span><span class="o">?</span><span class="p">.</span><span class="n">coordinate</span><span class="p">.</span><span class="n">latitude</span> <span class="o">??</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>                                                           <span class="nl">lng:</span> <span class="n">mapView</span><span class="p">.</span><span class="n">myLocation</span><span class="o">?</span><span class="p">.</span><span class="n">coordinate</span><span class="p">.</span><span class="n">longitude</span> <span class="o">??</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: - Other</span>
</span><span class='line'><span class="n">extension</span> <span class="n">ViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// GoogleMapにマーカをプロットする</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="c1">/// - Parameter place: プロットする場所情報</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">func</span> <span class="n">putMarker</span><span class="p">(</span><span class="nl">place:</span> <span class="n">Place</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">marker</span> <span class="o">=</span> <span class="n">GMSMarker</span><span class="p">()</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CLLocationCoordinate2D</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">place</span><span class="p">.</span><span class="n">geometry</span><span class="p">.</span><span class="n">location</span><span class="p">.</span><span class="n">lat</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">place</span><span class="p">.</span><span class="n">geometry</span><span class="p">.</span><span class="n">location</span><span class="p">.</span><span class="n">lng</span><span class="p">)</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">icon</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;RestaurantIcon&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">appearAnimation</span> <span class="o">=</span> <span class="n">GMSMarkerAnimation</span><span class="p">.</span><span class="n">pop</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="n">mapView</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: - StoreSubscriber</span>
</span><span class='line'><span class="n">extension</span> <span class="nl">ViewController:</span> <span class="n">StoreSubscriber</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">typealias</span> <span class="n">StoreSubscriberStateType</span> <span class="o">=</span> <span class="n">AppState</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">newState</span><span class="p">(</span><span class="nl">state:</span> <span class="n">AppState</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// when the state changes, the UI is updated to reflect the current state</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">error</span> <span class="o">=</span> <span class="n">state</span><span class="p">.</span><span class="n">mapState</span><span class="p">.</span><span class="n">error</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">places</span> <span class="o">=</span> <span class="n">state</span><span class="p">.</span><span class="n">mapState</span><span class="p">.</span><span class="n">places</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">places</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">mapView</span><span class="p">.</span><span class="n">clear</span><span class="p">()</span>
</span><span class='line'>                <span class="k">return</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">places</span><span class="p">.</span><span class="n">forEach</span> <span class="p">{</span> <span class="p">(</span><span class="n">place</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>                <span class="n">putMarker</span><span class="p">(</span><span class="nl">place:</span> <span class="n">place</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="s">&quot;error: \(error.localizedDescription)&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: - GMSMapViewDelegate</span>
</span><span class='line'><span class="n">extension</span> <span class="nl">ViewController:</span> <span class="n">GMSMapViewDelegate</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: - CLLocationManagerDelegate</span>
</span><span class='line'><span class="n">extension</span> <span class="nl">ViewController:</span> <span class="n">CLLocationManagerDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">locationManager</span><span class="p">(</span><span class="n">_</span> <span class="nl">manager:</span> <span class="n">CLLocationManager</span><span class="p">,</span> <span class="n">didChangeAuthorization</span> <span class="nl">status:</span> <span class="n">CLAuthorizationStatus</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">status</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">notDetermined:</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="k">restricted</span><span class="p">,</span> <span class="p">.</span><span class="nl">denied:</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">authorizedWhenInUse:</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">locationManager</span><span class="p">(</span><span class="n">_</span> <span class="nl">manager:</span> <span class="n">CLLocationManager</span><span class="p">,</span> <span class="n">didUpdateLocations</span> <span class="nl">locations:</span> <span class="p">[</span><span class="n">CLLocation</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 現在地の更新</span>
</span><span class='line'>        <span class="n">currentLocation</span> <span class="o">=</span> <span class="n">locations</span><span class="p">.</span><span class="n">last</span><span class="o">?</span><span class="p">.</span><span class="n">coordinate</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="o">!</span><span class="n">initView</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 初期描画時のマップ中心位置の移動</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">camera</span> <span class="o">=</span> <span class="n">GMSCameraPosition</span><span class="p">.</span><span class="n">camera</span><span class="p">(</span><span class="nl">withTarget:</span> <span class="n">currentLocation</span><span class="o">!</span><span class="p">,</span> <span class="nl">zoom:</span> <span class="n">zoomLevel</span><span class="p">)</span>
</span><span class='line'>            <span class="n">mapView</span><span class="p">.</span><span class="n">camera</span> <span class="o">=</span> <span class="n">camera</span>
</span><span class='line'>            <span class="n">initView</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">locationManager</span><span class="p">(</span><span class="n">_</span> <span class="nl">manager:</span> <span class="n">CLLocationManager</span><span class="p">,</span> <span class="n">didFailWithError</span> <span class="nl">error:</span> <span class="n">Error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">!</span><span class="n">CLLocationManager</span><span class="p">.</span><span class="n">locationServicesEnabled</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 端末の位置情報がOFFになっている場合</span>
</span><span class='line'>            <span class="c1">// アラートはデフォルトで表示されるので内部で用意はしない</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">currentLocation</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">CLLocationManager</span><span class="p">.</span><span class="n">authorizationStatus</span><span class="p">()</span> <span class="o">!=</span> <span class="n">CLAuthorizationStatus</span><span class="p">.</span><span class="n">authorizedWhenInUse</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// アプリの位置情報許可をOFFにしている場合</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>になります。<br/>
ポイントは、</p>

<ul>
<li>ユーザアクション時に <code>mainStore.dispatch</code> メソッドを実行すること

<ul>
<li>これにより、どんなアクションが発生したのかを <code>Reducer</code> に伝え、 <code>State</code> を再生成することができるようになります。</li>
</ul>
</li>
<li><code>StoreSubscriber</code> プロトコルに対応すること

<ul>
<li>これにより状態が変化した際に、 <code>newState</code> が呼び出されるため、変化後の状態を<code>View</code>に反映させることができるようになります。</li>
</ul>
</li>
</ul>


<p>の2点になります。</p>

<p>今回は、<code>newState</code> 内で<a href="https://developers.google.com/places/?hl=ja">Google Places API</a>で取得した結果をGoogleマップに反映させる処理を書いています。<br/>
( エラーは <code>print</code> 文にしているだけですが&hellip; )</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
<code>ReSwift</code> も役割の明確化および細分化をすることで、チーム開発でのアーキテクチャの属人化を防ぐことができるように思います。<br/>
もちろん学習時間が必要になるなどのハードルは存在しますが、人の入れ替わりが激しい業界では、特に必要となるのではないでしょうか。</p>

<p>筆者も引き続き、いろいろなパターンで <code>ReSwift</code> を試していきたいと思います。
今回利用したサンプルは<a href="https://github.com/grandbig/ReSwiftSample">ReSwiftSample</a>としてアップしていますので、ぜひご覧ください。</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FacebookのGraph API v3から分離されたuser_genderについて見てみる]]></title>
    <link href="http://grandbig.github.io/blog/2018/06/23/facebook-graph-api-v3/"/>
    <updated>2018-06-23T11:39:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/06/23/facebook-graph-api-v3</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>最近、いろいろと個人情報の話が取り沙汰されていますが、Facebookが <code>Graph API v3</code> を発表しましたね！<br/>
Facebookログインを利用して会員登録の簡略化をするなんて、今や当たり前の時代に、個人情報の保護強化のために情報取得のハードルが少々引き上げられました。</p>

<p>また、これまでFacebookログインを利用していたサービスはFacebookの再審査を受けることが義務化されました。<br/>
今回新たに審査が必要となる項目も追加され、Facebook社のより一層の個人情報強化の意志を感じさせますね。<br/>
因みに、新規にパーミションが必要となった項目は、</p>

<ul>
<li><code>user_link</code></li>
<li><code>user_age_range</code></li>
<li><code>user_gender</code></li>
</ul>


<p>の3つになります。<br/>
本記事では、中でも <code>user_gender</code> に焦点を当てて見ていきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>user_genderとは</h3>

<p>フィールド名から分かる通り、値としては、ユーザの <code>性別</code> を取得するものになります。<br/>
これは、新たにパーミッションが必要になった項目ということですが、<br/>
もちろんこれまでも取得できる項目でした。</p>

<p>どうやって取得していたかと言うと、Facebook上でユーザの基本情報としてまとめられていた <code>public_profile</code> に <code>gender</code> として含まれていました。<br/>
v3.0での変更でこれが独立したということになります。</p>

<h3>パーミッション画面での変更</h3>

<p>続いて、<code>public_profile</code> と <code>user_gender</code> を利用した場合でそれぞれユーザに表示するパーミッション画面はどのように変わるのでしょうか？<br/>
実際に見ていきましょう。</p>

<p>まずは、これまでの <code>public_profile</code> を利用した場合の画面は<br/>
<img src="http://grandbig.github.io/images/facebook_graph_api_v3_1.png" alt="public_profileのみ指定した場合のパーミッション画面" /></p>

<p>続いて、 <code>user_gender</code> を指定した場合の画面は<br/>
<img src="http://grandbig.github.io/images/facebook_graph_api_v3_2.png" alt="user_genderも指定した場合のパーミッション画面" /></p>

<p>となります。<br/>
今後どうなるかはわからないものの、今のところは <code>public_profile</code> の中に <code>gender</code> が含まれており、プラスで <code>user_gender</code> も指定できるという状況になっています。</p>

<h3>パーミッション指定の処理</h3>

<p>参考までに今回試したソースコードを記載しておきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// FacebookManager.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">FacebookCore</span>
</span><span class='line'><span class="n">import</span> <span class="n">FacebookLogin</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">enum</span> <span class="nl">Gender:</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">male</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">female</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">FacebookUserProfile:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">email:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">gender:</span> <span class="n">Gender</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="k">enum</span> <span class="nl">CodingKeys:</span> <span class="n">String</span><span class="p">,</span> <span class="n">CodingKey</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="kt">id</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">email</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">gender</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">init</span><span class="p">(</span><span class="n">from</span> <span class="nl">decoder:</span> <span class="n">Decoder</span><span class="p">)</span> <span class="n">throws</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">values</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">container</span><span class="p">(</span><span class="nl">keyedBy:</span> <span class="n">CodingKeys</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="kt">id</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="kt">id</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decodeIfPresent</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">genderString</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">genderString</span> <span class="o">==</span> <span class="s">&quot;male&quot;</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">gender</span> <span class="o">=</span> <span class="p">.</span><span class="n">male</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">gender</span> <span class="o">=</span> <span class="p">.</span><span class="n">female</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">encode</span><span class="p">(</span><span class="n">to</span> <span class="nl">encoder:</span> <span class="n">Encoder</span><span class="p">)</span> <span class="n">throws</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">container</span> <span class="o">=</span> <span class="n">encoder</span><span class="p">.</span><span class="n">container</span><span class="p">(</span><span class="nl">keyedBy:</span> <span class="n">CodingKeys</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>        <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="kt">id</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="kt">id</span><span class="p">)</span>
</span><span class='line'>        <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encodeIfPresent</span><span class="p">(</span><span class="n">email</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">gender</span> <span class="o">==</span> <span class="p">.</span><span class="n">male</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;male&quot;</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;female&quot;</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="n">final</span> <span class="n">class</span> <span class="n">FacebookManager</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">static</span> <span class="n">let</span> <span class="n">shared</span> <span class="o">=</span> <span class="n">FacebookManager</span><span class="p">()</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="nl">FacebookError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">apiError</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">decodeError</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">enum</span> <span class="nl">FacebookPermission:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">email</span> <span class="o">=</span> <span class="s">&quot;email&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">publicProfile</span> <span class="o">=</span> <span class="s">&quot;public_profile&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">userGender</span> <span class="o">=</span> <span class="s">&quot;user_gender&quot;</span>       <span class="c1">// 新規パーミッションを指定</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="n">_</span> <span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="nl">didFinishLaunchingWithOptions:</span> <span class="p">[</span><span class="nl">UIApplicationLaunchOptionsKey:</span> <span class="n">Any</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">SDKApplicationDelegate</span><span class="p">.</span><span class="n">shared</span><span class="p">.</span><span class="n">application</span><span class="p">(</span><span class="n">application</span><span class="p">,</span> <span class="nl">didFinishLaunchingWithOptions:</span> <span class="n">didFinishLaunchingWithOptions</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="n">_</span> <span class="nl">app:</span> <span class="n">UIApplication</span><span class="p">,</span>
</span><span class='line'>                            <span class="n">open</span> <span class="nl">url:</span> <span class="n">URL</span><span class="p">,</span>
</span><span class='line'>                            <span class="nl">options:</span> <span class="p">[</span><span class="nl">UIApplicationOpenURLOptionsKey:</span> <span class="n">Any</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="o">:</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">SDKApplicationDelegate</span><span class="p">.</span><span class="n">shared</span><span class="p">.</span><span class="n">application</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="nl">open:</span> <span class="n">url</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">isLoggedIn</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">AccessToken</span><span class="p">.</span><span class="n">current</span> <span class="o">!=</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">login</span><span class="p">(</span><span class="n">_</span> <span class="nl">viewController:</span> <span class="n">UIViewController</span><span class="p">,</span>
</span><span class='line'>                      <span class="nl">permissions:</span> <span class="p">[</span><span class="n">FacebookPermission</span><span class="p">]</span> <span class="o">=</span> <span class="p">[.</span><span class="n">email</span><span class="p">,</span> <span class="p">.</span><span class="n">publicProfile</span><span class="p">,</span> <span class="p">.</span><span class="n">userGender</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">isLoggedIn</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">logout</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">promise</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="p">{</span> <span class="n">fulfill</span><span class="p">,</span> <span class="n">reject</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">readPermissions</span> <span class="o">=</span> <span class="p">[</span><span class="n">ReadPermission</span><span class="p">]()</span>
</span><span class='line'>            <span class="n">permissions</span><span class="p">.</span><span class="n">forEach</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">readPermissions</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">ReadPermission</span><span class="p">.</span><span class="n">custom</span><span class="p">(</span><span class="n">$0</span><span class="p">.</span><span class="n">rawValue</span><span class="p">))</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">LoginManager</span><span class="p">().</span><span class="n">logIn</span><span class="p">(</span><span class="nl">readPermissions:</span> <span class="n">readPermissions</span><span class="p">,</span>
</span><span class='line'>                                 <span class="nl">viewController:</span> <span class="n">viewController</span><span class="p">,</span>
</span><span class='line'>                                 <span class="nl">completion:</span> <span class="p">{</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>
</span><span class='line'>                                    <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>                                    <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">let</span> <span class="n">accessToken</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                        <span class="n">_</span> <span class="o">=</span> <span class="n">fulfill</span><span class="p">(</span><span class="n">accessToken</span><span class="p">.</span><span class="n">authenticationToken</span><span class="p">)</span>
</span><span class='line'>                                    <span class="k">case</span> <span class="p">.</span><span class="nl">cancelled:</span>
</span><span class='line'>                                        <span class="n">let</span> <span class="n">error</span> <span class="o">=</span> <span class="n">FacebookError</span><span class="p">.</span><span class="n">cancel</span>
</span><span class='line'>                                        <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>                                    <span class="k">case</span> <span class="p">.</span><span class="n">failed</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                        <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>                                    <span class="p">}</span>
</span><span class='line'>            <span class="p">})</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">logout</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">LoginManager</span><span class="p">().</span><span class="n">logOut</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">JSONDecoder</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Any型をdecode可能なメソッドを追加</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">decode</span><span class="o">&lt;</span><span class="nl">T:</span> <span class="n">Decodable</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">type:</span> <span class="n">T</span><span class="p">.</span><span class="n">Type</span><span class="p">,</span>
</span><span class='line'>                                     <span class="n">withJSONObject</span> <span class="nl">object:</span> <span class="n">Any</span><span class="p">,</span>
</span><span class='line'>                                     <span class="n">options</span> <span class="nl">opt:</span> <span class="n">JSONSerialization</span><span class="p">.</span><span class="n">WritingOptions</span> <span class="o">=</span> <span class="p">[])</span> <span class="n">throws</span> <span class="o">-&gt;</span> <span class="n">T</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">data</span> <span class="o">=</span> <span class="n">try</span> <span class="n">JSONSerialization</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">withJSONObject:</span> <span class="n">object</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">try</span> <span class="n">decode</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
今後移行期間がどうなるのか、イマイチ見えない状況ではありますが、取り急ぎ8/1までにFacebookの再審査を受けて大事に備えておくべきでしょう。<br/>
といったところで本日はここまで。</p>

<h4>参考</h4>

<ul>
<li><a href="https://developers.facebook.com/docs/graph-api/changelog/version3.0">Facebook Graph API v3.0</a></li>
<li><a href="https://damelog.com/sns/facebook/facebook-graph-api-v3_0-released-and-app-review-restored/">FACEBOOK GRAPH API V3.0 リリースと同時にログイン審査がリニューアルされた件</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOSで気をつけるGoogle Places APIの使い分け]]></title>
    <link href="http://grandbig.github.io/blog/2018/05/27/google-places-api/"/>
    <updated>2018-05-27T18:58:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/05/27/google-places-api</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は<a href="https://developers.google.com/places/ios-api/?hl=ja">Places API for iOS</a>と<a href="https://developers.google.com/places/?hl=ja">Google Places API</a>を使い分けた話です。</p>

<p><code>Google Places API</code> はデバイスやOSに依らず用意されたAPIですが、 <code>Places API for iOS</code> はネーミングからも分かる通り <code>iOS</code> のために用意された <code>API</code> という位置づけになります。<br/>
通常であれば、「 <code>Places API for iOS</code> を使えば良いのでは？」と思われるかもしれませんが、<br/>
筆者がプロダクト開発時に実現したかった内容がたまたまそぐわなかったので <code>Google Places API</code> を利用するに至ったわけです。</p>

<p>では早速見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>周辺の場所情報を取得する</h3>

<p>現在の場所を取得するのであれば、Googleが<a href="https://developers.google.com/places/ios-api/start?hl=ja">スタートガイド</a>で説明しているように、<br/>
<code>GMSPlacesClient</code> の <code>currentPlaceWithCallback</code> メソッドを利用すれば可能です。</p>

<p>しかし、特定の場所を起点に周辺の場所情報を取得する場合は、<code>Google Places API</code> を利用する方が汎用性があります。<br/>
<code>Places API for iOS</code> にも <code>Place Picker</code> が用意されていますが、以下理由より用途が限定的に感じられました。</p>

<ul>
<li>UI/UXが限定されている</li>
<li>特定の属性のものだけ検索することに向いていない</li>
</ul>


<p>そこで筆者は、「周辺の病院を検索する」ケースでは <code>Google Places API</code> を利用することにしました。<br/>
以下に具体的な実装を記載します。<br/>
通信ライブラリとして <code>Moya</code> を非同期処理のために <code>PromiseKit</code> を利用します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// HospitalAPI.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">Moya</span>
</span><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">GooglePlaces</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="n">HospitalAPITarget</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">hospitals</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="nl">APIError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">apiError</span><span class="p">(</span><span class="nl">description:</span> <span class="n">String</span><span class="p">)</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">decodeError</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="nl">GooglePlacesError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">notFoundError</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">HospitalAPITarget:</span> <span class="n">TargetType</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// API Key</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">apiKey:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;plist&quot;</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;key.plistが見つかりません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;key.plistの中身が想定通りではありません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">&quot;googleApiKey&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;Google APIのKeyが設定されていません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">apiKey</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ベースURLを文字列で定義</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">_baseURL:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">hospitals:</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">url</span><span class="p">.</span><span class="n">googlePlacesApiPlaceUrl</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">baseURL:</span> <span class="n">URL</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">URL</span><span class="p">(</span><span class="nl">string:</span> <span class="n">_baseURL</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enumの値に対応したパスを指定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">path:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">hospitals:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enumの値に対応したHTTPメソッドを指定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">method:</span> <span class="n">Moya</span><span class="p">.</span><span class="n">Method</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">hospitals:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">.</span><span class="n">get</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// スタブデータの設定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">sampleData:</span> <span class="n">Data</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">hospitals:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;Stub data&quot;</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">using:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">.</span><span class="n">utf8</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// パラメータの設定</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">task:</span> <span class="n">Task</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">let</span> <span class="p">.</span><span class="n">hospitals</span><span class="p">(</span><span class="n">lat</span><span class="p">,</span> <span class="n">lng</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">.</span><span class="n">requestParameters</span><span class="p">(</span><span class="nl">parameters:</span> <span class="p">[</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">keyFileName</span><span class="p">()</span><span class="o">:</span> <span class="n">apiKey</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">locationKeyName</span><span class="p">()</span><span class="o">:</span> <span class="s">&quot;\(lat),\(lng)&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">radiusKeyName</span><span class="p">()</span><span class="o">:</span> <span class="mi">1500</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">typeKeyName</span><span class="p">()</span><span class="o">:</span> <span class="s">&quot;hospital&quot;</span>
</span><span class='line'>                <span class="p">],</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ヘッダーの設定</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">headers:</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">String</span><span class="p">]</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">hospitals:</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">HospitalAPI:</span> <span class="n">HospitalProtocol</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">provider:</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">HospitalAPITarget</span><span class="o">&gt;!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// イニシャライザ</span>
</span><span class='line'>    <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">provider</span> <span class="o">=</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">HospitalAPITarget</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: CRUD operations</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// 指定の緯度、経度から一定範囲内の病院を検索する処理</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="c1">/// - Returns: 病院のプレイス情報</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchHospitals</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="p">(</span><span class="n">promise</span><span class="p">,</span> <span class="n">resolver</span><span class="p">)</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span><span class="p">.</span><span class="n">pending</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">provider</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">hospitals</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">lat</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">lng</span><span class="p">))</span> <span class="p">{</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>            <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">let</span> <span class="n">response</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">let</span> <span class="n">decoder</span> <span class="o">=</span> <span class="n">JSONDecoder</span><span class="p">()</span>
</span><span class='line'>                    <span class="n">decoder</span><span class="p">.</span><span class="n">keyDecodingStrategy</span> <span class="o">=</span> <span class="p">.</span><span class="n">convertFromSnakeCase</span>
</span><span class='line'>                    <span class="n">let</span> <span class="n">places</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">Places</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">response</span><span class="p">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">resolver</span><span class="p">.</span><span class="n">fulfill</span><span class="p">(</span><span class="n">places</span><span class="p">.</span><span class="n">results</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">APIError</span><span class="p">.</span><span class="n">decodeError</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">.</span><span class="n">failure</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">APIError</span><span class="p">.</span><span class="n">apiError</span><span class="p">(</span><span class="nl">description:</span> <span class="n">error</span><span class="p">.</span><span class="n">localizedDescription</span><span class="p">))</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>因みに、上記 <code>fetchHospitals</code> メソッド内で利用している <code>Place</code> の定義は以下です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Place.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Location:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">lat:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">lng:</span> <span class="n">Double</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Viewport:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">northeast:</span> <span class="n">Location</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">southwest:</span> <span class="n">Location</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Geometry:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">viewport:</span> <span class="n">Viewport</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">location:</span> <span class="n">Location</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">OpeningHours:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">weekdayText:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">openNow:</span> <span class="n">Bool</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Photos:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">photoReference:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">width:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">height:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">htmlAttributions:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Place:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">placeId:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">icon:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">rating:</span> <span class="n">Double</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">scope:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">vicinity:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">reference:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">priceLevel:</span> <span class="n">Int</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">types:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">geometry:</span> <span class="n">Geometry</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">openingHours:</span> <span class="n">OpeningHours</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">photos:</span> <span class="p">[</span><span class="n">Photos</span><span class="p">]</span><span class="o">?</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Places:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">results:</span> <span class="p">[</span><span class="n">Place</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">status:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">htmlAttributions:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>場所の画像を取得する</h3>

<p>Webクライアントから場所の画像を取得する場合は先程APIを叩いて取得した結果の <code>photos</code> からAPIを叩く流れになります。<br/>
しかしながら、iOSでは画像取得用のメソッドが用意されています。<br/>
このメソッドは <code>プレイスID</code> さえ指定すれば簡単に取得できるため、<br/>
ここは適材適所で <code>Places API for iOS</code> の <code>lookUpPhoto</code> および <code>loadPlacePhoto</code> を利用した方が良いでしょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// HospitalAPI.swift</span>
</span><span class='line'><span class="n">func</span> <span class="nf">fetchPhoto</span><span class="p">(</span><span class="nl">placeId:</span> <span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">UIImage</span><span class="o">?&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="p">(</span><span class="n">promise</span><span class="p">,</span> <span class="n">resolver</span><span class="p">)</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">UIImage</span><span class="o">?&gt;</span><span class="p">.</span><span class="n">pending</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">GMSPlacesClient</span><span class="p">.</span><span class="n">shared</span><span class="p">().</span><span class="n">lookUpPhotos</span><span class="p">(</span><span class="nl">forPlaceID:</span> <span class="n">placeId</span><span class="p">)</span> <span class="p">{</span> <span class="p">(</span><span class="n">photos</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">error</span> <span class="o">=</span> <span class="n">error</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">firstPhoto</span> <span class="o">=</span> <span class="n">photos</span><span class="o">?</span><span class="p">.</span><span class="n">results</span><span class="p">.</span><span class="n">first</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">GooglePlacesError</span><span class="p">.</span><span class="n">notFoundError</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">GMSPlacesClient</span><span class="p">.</span><span class="n">shared</span><span class="p">().</span><span class="n">loadPlacePhoto</span><span class="p">(</span><span class="n">firstPhoto</span><span class="p">,</span> <span class="nl">callback:</span> <span class="p">{</span> <span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">let</span> <span class="n">error</span> <span class="o">=</span> <span class="n">error</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">resolver</span><span class="p">.</span><span class="n">fulfill</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>
</span><span class='line'>        <span class="p">})</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>今回筆者が改めて学んだのは、iOSアプリを開発するからといって、<code>Places API for iOS</code> だけに焦点を絞るのではなく、<br/>
『結局、何がしたくて、そのためにどういった情報を取得したいのか』
をきちんど整理した上で適切な手段を用いるということです。</p>

<p>Googleが提供しているAPIは勉強になりますね。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ぐるなびレストラン検索APIで困ったCodable]]></title>
    <link href="http://grandbig.github.io/blog/2018/05/03/gurunavi-api-codable/"/>
    <updated>2018-05-03T00:37:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/05/03/gurunavi-api-codable</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>さて、今回は <code>Codable</code> で困った話です。<br/>
<a href="http://api.gnavi.co.jp/api/manual/restsearch/">ぐるなびレストラン検索API</a>を利用する機会がありまして、<br/>
どうせなら <code>Codable</code> を使ってキレイに書こうと思ったが&hellip;という話になります。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>ぐるなびレストラン検索APIのレスポンスについて</h3>

<p>ほとんどの場合は何も考えずに <code>Codable</code> が適用できたのですが、<code>image_url</code>だけ困りました。<br/>
と言うのも返却されるレスポンスに以下の違いがあったためです。</p>

<p>実際にAPIを叩いて頂くと&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 値がある場合</span>
</span><span class='line'><span class="n">image_url</span> <span class="p">{</span>
</span><span class='line'>    <span class="nl">shop_image1:</span> <span class="n">http</span><span class="err">\</span><span class="o">:</span><span class="err">\</span><span class="o">/</span><span class="err">\</span><span class="o">/</span><span class="n">xxxxxxx</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">shop_image2:</span> <span class="n">http</span><span class="err">\</span><span class="o">:</span><span class="err">\</span><span class="o">/</span><span class="err">\</span><span class="o">/</span><span class="n">xxxxxxx</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">qrcode:</span> <span class="n">http</span><span class="err">\</span><span class="o">:</span><span class="err">\</span><span class="o">/</span><span class="err">\</span><span class="o">/</span><span class="n">xxxxxxx</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 値がない場合</span>
</span><span class='line'><span class="n">image_url</span> <span class="p">{</span>
</span><span class='line'>    <span class="nl">shop_image1:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nl">shop_image2:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nl">qrcode:</span> <span class="n">http</span><span class="err">\</span><span class="o">:</span><span class="err">\</span><span class="o">/</span><span class="err">\</span><span class="o">/</span><span class="n">xxxxxxx</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>といった感じになっていることがわかると思います。</p>

<h3>Codableをどこまで利用するべきか</h3>

<p>筆者が下した結論としては、全てを <code>Codable</code> だけで賄うのは難しいということです。<br/>
なぜなら <code>Codable</code> は <code>Any</code> 型を扱えないからです。<br/>
ではどうすれば良いかと言うと&hellip;</p>

<ul>
<li><code>SwiftyJSON</code>を使う</li>
<li><code>Codable</code> と <code>SwiftyJSON</code> を使う</li>
</ul>


<p>ことが考えられるかと思います。</p>

<p>せっかくなので、<code>Codable</code> と <code>SwiftyJSON</code> を両方使ってみた場合を見ていきましょう。</p>

<p>まず<code>Codable</code>の定義です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Restaurant:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">nameKana:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">address:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">url:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">tel:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">urlMobile:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">shopImage1:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">shopImage2:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Restaurants:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">rest:</span> <span class="p">[</span><span class="n">Restaurant</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">totalHitCount:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">hitPerPage:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">pageOffset:</span> <span class="n">String</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、<code>SwiftyJSON</code>をどのように使ったかというと&hellip;<br/>
(以下、処理の抜粋です。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="n">requestURL</span><span class="p">,</span> <span class="nl">method:</span> <span class="p">.</span><span class="n">get</span><span class="p">,</span> <span class="nl">parameters:</span> <span class="n">parameters</span><span class="p">,</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">,</span> <span class="nl">headers:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="n">response</span> <span class="p">{</span> <span class="n">response</span> <span class="k">in</span>
</span><span class='line'>        <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">result</span> <span class="o">=</span> <span class="n">Restaurants</span><span class="p">(</span><span class="nl">rest:</span> <span class="p">[],</span> <span class="nl">totalHitCount:</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="nl">hitPerPage:</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="nl">pageOffset:</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">guard</span> <span class="n">let</span> <span class="n">data</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">data</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">rest</span> <span class="o">=</span> <span class="n">JSON</span><span class="p">(</span><span class="n">data</span><span class="p">)[</span><span class="s">&quot;rest&quot;</span><span class="p">]</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">decoder</span> <span class="o">=</span> <span class="n">JSONDecoder</span><span class="p">()</span>
</span><span class='line'>            <span class="n">decoder</span><span class="p">.</span><span class="n">keyDecodingStrategy</span> <span class="o">=</span> <span class="p">.</span><span class="n">convertFromSnakeCase</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">restaurants</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">Restaurants</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>            <span class="n">guard</span> <span class="n">let</span> <span class="n">array</span> <span class="o">=</span> <span class="n">rest</span><span class="p">.</span><span class="n">array</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">completion</span><span class="p">(</span><span class="n">restaurants</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">elem</span> <span class="k">in</span> <span class="n">array</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">for</span> <span class="n">restaurant</span> <span class="k">in</span> <span class="n">restaurants</span><span class="p">.</span><span class="n">rest</span> <span class="n">where</span> <span class="n">restaurant</span><span class="p">.</span><span class="kt">id</span> <span class="o">==</span> <span class="n">elem</span><span class="p">[</span><span class="s">&quot;id&quot;</span><span class="p">].</span><span class="n">string</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">var</span> <span class="n">convertedRestaurant</span> <span class="o">=</span> <span class="n">restaurant</span>
</span><span class='line'>                    <span class="n">convertedRestaurant</span><span class="p">.</span><span class="n">shopImage1</span> <span class="o">=</span> <span class="n">elem</span><span class="p">[</span><span class="s">&quot;image_url&quot;</span><span class="p">][</span><span class="s">&quot;shop_image1&quot;</span><span class="p">].</span><span class="n">string</span>
</span><span class='line'>                    <span class="n">convertedRestaurant</span><span class="p">.</span><span class="n">shopImage2</span> <span class="o">=</span> <span class="n">elem</span><span class="p">[</span><span class="s">&quot;image_url&quot;</span><span class="p">][</span><span class="s">&quot;shop_image2&quot;</span><span class="p">].</span><span class="n">string</span>
</span><span class='line'>                    <span class="n">result</span><span class="p">.</span><span class="n">rest</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">convertedRestaurant</span><span class="p">)</span>
</span><span class='line'>                    <span class="k">break</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">completion</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;error&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ただ、これは<code>for</code>文をぶん回して照らし合わせて<code>Codable</code>の形に充てがいたいがために書いているので、処理効率が良いかは別の話ですね&hellip;<br/>
APIで取得できた件数が少なければ大した話ではありませんが&hellip;。<br/>
(大量件数が取得されるケースでは、むしろ少数に減らすことができないか検討すべきでしょう。)</p>

<h3>まとめ</h3>

<p>さて、今回は<code>Codable</code>を利用しようと思って困った話を書いてみました。<br/>
今回のAPIの返却値は特殊な感じもするので、今後Swiftが対応していくようになるとは思えないのですが、<br/>
もしかしたらもう少し書きやすくなることもあるかもしれません。</p>

<p>逆に、iOSアプリ向けにAPIを新規開発するときは、上記のような事情も踏まえて開発すると困ることが少ないのではと思います。</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crashlyticsが作成するエラーファイルを見てみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2018/04/29/crashlytics/"/>
    <updated>2018-04-29T17:44:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/04/29/crashlytics</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は<a href="https://fabric.io/home">Fabric</a>のメイン機能である <code>Crashlytics</code> について紹介したいと思います。<br/>
筆者が初めて <code>Crashlytics</code> を利用したのは、もう数年前になるでしょうか。<br/>
それこそ、当時は <code>Fabric</code> という名称ではなく、本当にただの <code>Crashlytics</code> というサービス名だったんですよね。</p>

<p>あの頃は、クラッシュレポートを溜める独自サービスが大量生産されていたのではないでしょうか？<br/>
そんな市場に風穴を開けたのが、 <code>Crashlytics</code> でした。<br/>
なんてったって、無料なんですから、使わない手はなかったわけです。<br/>
更に今や <code>Firebase</code> だったり、<code>fastlane</code> だったりと連携しちゃうわけですからね。</p>

<p>前置きはこのくらいにして、<br/>
今回は <code>Crashlytics</code> の <code>crash()</code> や <code>recordError()</code> について少々調べたことを書き留めておきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Crashlyticsの導入</h3>

<p>まずは、<code>Crashlytics</code>の導入ですね。<br/>
<a href="https://fabric.io/kits/ios/crashlytics/install">公式ページ</a>に従って進めれば簡単に準備ができることでしょう。<br/>
注意点としては、<code>Fabric</code> のダッシュボードでクラッシュレポート数や内容を見るために、<code>dSYM</code>ファイルをアップロードする必要があるということくらいです。</p>

<p>その手順を見ていきましょう。</p>

<p>① Xcode > PROJECT or TARGET > Build Settings > Build Options > Debug Information Formatの設定を変更する</p>

<p>開発版では<code>Debug</code>モードで<code>Run</code>していることもあると思うので、<br/>
その場合は下図のように <code>DWARF with dSYM File</code> に変更しましょう。</p>

<p><img src="http://grandbig.github.io/images/crashlytics_5.png" alt="Debug Information FormatをDWARF with dSYM Fileに変更する" /></p>

<p>② Xcode > Product > Archive を実行する</p>

<p>③ dSYMをDownloadする</p>

<p>Organizer Windowが自動で表示されるため、dSYMファイルをダウンロードしましょう。<br/>
Archive Informationの『Download dSYMs&hellip;』を選択するか、<br/>
もしくは下図のように該当アプリを右クリックして『Show in Finder』を選択して直接Downloadしましょう。</p>

<p><img src="http://grandbig.github.io/images/crashlytics_6.png" alt="Show in Finderを選択する" /></p>

<p>④ Show in Findeで開いたフォルダのdSYMsフォルダをzip化しましょう。</p>

<p><img src="http://grandbig.github.io/images/crashlytics_7.png" alt="dSYMsフォルダをzip化する" /></p>

<p>⑤ dSYMs.zipをFabric管理画面からUploadしましょう。</p>

<p>Settings > APPs > 該当アプリ > Missing DSYMs からDrag&amp;Dropでアップロードできます。</p>

<p><img src="http://grandbig.github.io/images/crashlytics_8.png" alt="dSYMs.zipのアップロード" /></p>

<p>これでクラッシュ後に、アプリを再起動して送信されたレポートを<code>Fabric</code>管理画面から確認することができます。</p>

<h3>crash()で生成されるファイル</h3>

<p><code>Crashlytics</code>で最も利用されているであろうクラッシュ時のレポート送信ですが、<br/>
一体、何を送っているのでしょうか？</p>

<p>今回は調査のために、わざとクラッシュさせて、アプリ内の『どこに』『何が』保存されているのか見てみました。</p>

<h4>crash()メソッドの呼び出し</h4>

<p>以下のようにボタンタップしたら、クラッシュするようにしてみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">tappedCrashButton</span><span class="p">(</span><span class="n">_</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">Crashlytics</span><span class="p">.</span><span class="n">sharedInstance</span><span class="p">().</span><span class="n">crash</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>クラッシュで生成されるファイルの確認方法</h4>

<p>クラッシュ後の生成ファイルの確認方法は以下です。</p>

<p>① アプリを起動してボタンタップでクラッシュさせます。<br/>
このとき重要なのが、『デバッグ状態にはせずにクラッシュさせる』ということです。<br/>
(どうもXcodeに接続したデバッグ状態だと、うまく記録されないようです。)</p>

<p>② 端末をMacに繋ぐ</p>

<p>③ Xcode > Window > Devices and Simulators を選択する<br/>
これにより以下のようなWindowが表示されます。<br/>
<img src="http://grandbig.github.io/images/crashlytics_1.png" alt="Devices and Simulators Window" /></p>

<p>④ Downloadしたいアプリ内ファイルを選択して「Download Container&hellip;」を選択する<br/>
<img src="http://grandbig.github.io/images/crashlytics_2.png" alt="Download Container...を選択する" /></p>

<p>⑤ 自動でDownload先フォルダが表示されるので、該当ファイルを右クリックして、「パッケージの内容を表示」を選択する<br/>
<img src="http://grandbig.github.io/images/crashlytics_3.png" alt="Downloadファイルの内容を表示する" /></p>

<p>⑥ クラッシュログを確認する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">xxxxxx</span><span class="p">.</span><span class="n">xcappdata</span><span class="o">/</span><span class="n">AppData</span><span class="o">/</span><span class="n">Library</span><span class="o">/</span><span class="n">Caches</span><span class="o">/</span><span class="n">com</span><span class="p">.</span><span class="n">crashlytics</span><span class="p">.</span><span class="n">data</span><span class="o">/&lt;</span><span class="n">BundleID</span><span class="o">&gt;/</span><span class="n">v3</span><span class="o">/</span><span class="n">active</span><span class="o">/</span><span class="n">xxxxxxxxxxx</span><span class="o">/</span><span class="n">match_exception</span><span class="p">.</span><span class="n">clsrecord</span>
</span></code></pre></td></tr></table></div></figure>


<p>がそれに該当します。</p>

<p><img src="http://grandbig.github.io/images/crashlytics_4.png" alt="クラッシュログの格納場所" /></p>

<h4>クラッシュログの中身</h4>

<p>中身を見てみると、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;mach_exception&quot;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;exception&quot;</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;codes&quot;</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">4332784292</span><span class="p">],</span>
</span><span class='line'>    <span class="s">&quot;name&quot;</span><span class="o">:</span><span class="s">&quot;EXC_BREAKPOINT&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;code_name&quot;</span><span class="o">:</span><span class="n">null</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;original_ports&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;time&quot;</span><span class="o">:</span><span class="mi">1525070032</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s">&quot;threads&quot;</span><span class="o">:</span><span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;registers&quot;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;x0&quot;</span><span class="o">:</span><span class="mi">7851893440</span><span class="p">,</span><span class="s">&quot;x1&quot;</span><span class="o">:</span><span class="mi">4337440564</span><span class="p">,</span><span class="s">&quot;x2&quot;</span><span class="o">:</span><span class="mi">4431287584</span><span class="p">,</span><span class="s">&quot;x3&quot;</span><span class="o">:</span><span class="mi">7651498240</span><span class="p">,</span><span class="s">&quot;x4&quot;</span><span class="o">:</span><span class="mi">7651498240</span><span class="p">,</span><span class="s">&quot;x5&quot;</span><span class="o">:</span><span class="mi">7651498240</span><span class="p">,</span><span class="s">&quot;x6&quot;</span><span class="o">:</span><span class="mi">7516198016</span><span class="p">,</span><span class="s">&quot;x7&quot;</span><span class="o">:</span><span class="mi">5305</span><span class="p">,</span><span class="s">&quot;x8&quot;</span><span class="o">:</span><span class="mi">7851893440</span><span class="p">,</span><span class="s">&quot;x9&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x10&quot;</span><span class="o">:</span><span class="mi">80378702350618752</span><span class="p">,</span><span class="s">&quot;x11&quot;</span><span class="o">:</span><span class="mi">18714625</span><span class="p">,</span><span class="s">&quot;x12&quot;</span><span class="o">:</span><span class="mi">18714368</span><span class="p">,</span><span class="s">&quot;x13&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x14&quot;</span><span class="o">:</span><span class="mi">18714625</span><span class="p">,</span><span class="s">&quot;x15&quot;</span><span class="o">:</span><span class="mi">18714816</span><span class="p">,</span><span class="s">&quot;x16&quot;</span><span class="o">:</span><span class="mi">6457744324</span><span class="p">,</span><span class="s">&quot;x17&quot;</span><span class="o">:</span><span class="mi">4332784292</span><span class="p">,</span><span class="s">&quot;x18&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x19&quot;</span><span class="o">:</span><span class="mi">7651498240</span><span class="p">,</span><span class="s">&quot;x20&quot;</span><span class="o">:</span><span class="mi">4431355264</span><span class="p">,</span><span class="s">&quot;x21&quot;</span><span class="o">:</span><span class="mi">4337440648</span><span class="p">,</span><span class="s">&quot;x22&quot;</span><span class="o">:</span><span class="mi">4431355264</span><span class="p">,</span><span class="s">&quot;x23&quot;</span><span class="o">:</span><span class="mi">4431355264</span><span class="p">,</span><span class="s">&quot;x24&quot;</span><span class="o">:</span><span class="mi">7516197984</span><span class="p">,</span><span class="s">&quot;x25&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x26&quot;</span><span class="o">:</span><span class="mi">6639092750</span><span class="p">,</span><span class="s">&quot;x27&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s">&quot;x28&quot;</span><span class="o">:</span><span class="mi">7854100944</span><span class="p">,</span><span class="s">&quot;fp&quot;</span><span class="o">:</span><span class="mi">6134339024</span><span class="p">,</span><span class="s">&quot;sp&quot;</span><span class="o">:</span><span class="mi">6134338992</span><span class="p">,</span><span class="s">&quot;lr&quot;</span><span class="o">:</span><span class="mi">4332705516</span><span class="p">,</span><span class="s">&quot;pc&quot;</span><span class="o">:</span><span class="mi">4332784292</span><span class="p">,</span><span class="s">&quot;cpsr&quot;</span><span class="o">:</span><span class="mi">1610612736</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;stacktrace&quot;</span><span class="o">:</span><span class="p">[</span><span class="mi">4332784292</span><span class="p">,</span><span class="mi">4332705516</span><span class="p">,</span><span class="mi">4332705636</span><span class="p">,</span><span class="mi">6626567880</span><span class="p">,</span><span class="mi">6627752100</span><span class="p">,</span><span class="mi">6626592636</span><span class="p">,</span><span class="mi">6627860956</span><span class="p">,</span><span class="mi">6627105352</span><span class="p">,</span><span class="mi">6627059960</span><span class="p">,</span><span class="mi">6627054136</span><span class="p">,</span><span class="mi">6635318284</span><span class="p">,</span><span class="mi">6635327928</span><span class="p">,</span><span class="mi">6635328792</span><span class="p">,</span><span class="mi">6635299416</span><span class="p">,</span><span class="mi">6461387780</span><span class="p">,</span><span class="mi">6461385772</span><span class="p">,</span><span class="mi">6461376412</span><span class="p">,</span><span class="mi">6460460456</span><span class="p">,</span><span class="mi">6493892640</span><span class="p">,</span><span class="mi">6628104076</span><span class="p">,</span><span class="mi">4332687252</span><span class="p">,</span><span class="mi">6454763456</span><span class="p">],</span>
</span><span class='line'>  <span class="s">&quot;crashed&quot;</span><span class="o">:</span><span class="n">true</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s">&quot;registers&quot;</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>      <span class="s">&quot;x0&quot;</span><span class="o">:</span><span class="mi">256</span><span class="p">,</span><span class="s">&quot;x1&quot;</span><span class="o">:</span><span class="mi">6136048512</span><span class="p">,</span><span class="s">&quot;x2&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s">&quot;x3&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x4&quot;</span><span class="o">:</span><span class="mi">9991</span><span class="p">,</span><span class="s">&quot;x5&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x6&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x7&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x8&quot;</span><span class="o">:</span><span class="mi">7852716416</span><span class="p">,</span><span class="s">&quot;x9&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s">&quot;x10&quot;</span><span class="o">:</span><span class="mi">7852716472</span><span class="p">,</span><span class="s">&quot;x11&quot;</span><span class="o">:</span><span class="mi">236223201281</span><span class="p">,</span><span class="s">&quot;x12&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x13&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x14&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s">&quot;x15&quot;</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="s">&quot;x16&quot;</span><span class="o">:</span><span class="mi">368</span><span class="p">,</span><span class="s">&quot;x17&quot;</span><span class="o">:</span><span class="mi">48</span><span class="p">,</span><span class="s">&quot;x18&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x19&quot;</span><span class="o">:</span><span class="mi">6136049664</span><span class="p">,</span><span class="s">&quot;x20&quot;</span><span class="o">:</span><span class="mi">7852716416</span><span class="p">,</span><span class="s">&quot;x21&quot;</span><span class="o">:</span><span class="mi">33</span><span class="p">,</span><span class="s">&quot;x22&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s">&quot;x23&quot;</span><span class="o">:</span><span class="mi">7303651328</span><span class="p">,</span><span class="s">&quot;x24&quot;</span><span class="o">:</span><span class="mi">7303651328</span><span class="p">,</span><span class="s">&quot;x25&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s">&quot;x26&quot;</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="s">&quot;x27&quot;</span><span class="o">:</span><span class="mi">2164260864</span><span class="p">,</span><span class="s">&quot;x28&quot;</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="s">&quot;fp&quot;</span><span class="o">:</span><span class="mi">6136048352</span><span class="p">,</span><span class="s">&quot;sp&quot;</span><span class="o">:</span><span class="mi">6136048192</span><span class="p">,</span><span class="s">&quot;lr&quot;</span><span class="o">:</span><span class="mi">6457704116</span><span class="p">,</span><span class="s">&quot;pc&quot;</span><span class="o">:</span><span class="mi">6456008068</span><span class="p">,</span><span class="s">&quot;cpsr&quot;</span><span class="o">:</span><span class="mi">1073741824</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s">&quot;stacktrace&quot;</span><span class="o">:</span><span class="p">[</span><span class="mi">6456008068</span><span class="p">,</span><span class="mi">6457704116</span><span class="p">,</span><span class="mi">6457703176</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;runtime&quot;</span><span class="o">:</span><span class="p">{</span><span class="s">&quot;objc_selector&quot;</span><span class="o">:</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;crash_info_entries&quot;</span><span class="o">:</span><span class="p">[]}}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;dispatch_queue_names&quot;</span><span class="o">:</span><span class="p">[</span><span class="s">&quot;com.apple.main-thread&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">]}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;thread_names&quot;</span><span class="o">:</span><span class="p">[</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;com.apple.uikit.eventfetch-thread&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;com.twitter.crashlytics.ios.MachExceptionServer&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">,</span><span class="s">&quot;com.google.Maps.LabelingBehavior&quot;</span><span class="p">,</span><span class="s">&quot;com.apple.NSURLConnectionLoader&quot;</span><span class="p">,</span><span class="s">&quot;&quot;</span><span class="p">]}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;process_stats&quot;</span><span class="o">:</span><span class="p">{</span><span class="s">&quot;active&quot;</span><span class="o">:</span><span class="mi">1085800448</span><span class="p">,</span><span class="s">&quot;inactive&quot;</span><span class="o">:</span><span class="mi">460079104</span><span class="p">,</span><span class="s">&quot;wired&quot;</span><span class="o">:</span><span class="mi">669319168</span><span class="p">,</span><span class="s">&quot;freeMem&quot;</span><span class="o">:</span><span class="mi">116162560</span><span class="p">,</span><span class="s">&quot;free_mem&quot;</span><span class="o">:</span><span class="mi">116162560</span><span class="p">,</span><span class="s">&quot;virtual&quot;</span><span class="o">:</span><span class="mi">2060877824</span><span class="p">,</span><span class="s">&quot;resident&quot;</span><span class="o">:</span><span class="mi">1085800448</span><span class="p">,</span><span class="s">&quot;user_time&quot;</span><span class="o">:</span><span class="mi">337647</span><span class="p">,</span><span class="s">&quot;sys_time&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">}}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;storage&quot;</span><span class="o">:</span><span class="p">{</span><span class="s">&quot;free&quot;</span><span class="o">:</span><span class="mi">206087524352</span><span class="p">,</span><span class="s">&quot;total&quot;</span><span class="o">:</span><span class="mi">255937040384</span><span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようになっています。<br/>
これがいい具合に <code>Fabric</code> 管理画面に表示されるわけですね。</p>

<h3>recordError()で生成されるファイル</h3>

<p>クラッシュではないけども、原因調査のためにレポート送信したい時があると思います。<br/>
そんなときは <code>recordError()</code> メソッドを利用します。</p>

<h4>recordError()メソッドの呼び出し</h4>

<p>以下のようにボタンをタップしたら、レポートを送信するようにしてみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">tappedCrashButton</span><span class="p">(</span><span class="n">_</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">error</span> <span class="o">=</span> <span class="n">NSError</span><span class="p">(</span><span class="nl">domain:</span> <span class="s">&quot;takahiro test&quot;</span><span class="p">,</span> <span class="nl">code:</span> <span class="mi">1001</span><span class="p">,</span> <span class="nl">userInfo:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">Crashlytics</span><span class="p">.</span><span class="n">sharedInstance</span><span class="p">().</span><span class="n">recordError</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>recordError()で生成されるファイルの確認方法</h4>

<p><code>recordError()</code> 実行後の生成ファイル確認方法は、基本的にはクラッシュ時と同じです。<br/>
ただし、クラッシュ時に生成されるファイルとファイル名が異なります。<br/>
<code>recordError()</code> では <code>error_a.clsrecord</code> といったファイルが生成されます。</p>

<h4>recordError()で記録したファイルの中身</h4>

<p>記録内容は以下の通りです。<br/>
何を格納するかで中身はもう少し変わりそうですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">{</span><span class="s">&quot;error&quot;</span><span class="o">:</span><span class="p">{</span><span class="s">&quot;domain&quot;</span><span class="o">:</span><span class="s">&quot;74616b616869726f2074657374&quot;</span><span class="p">,</span><span class="s">&quot;code&quot;</span><span class="o">:</span><span class="mi">1001</span><span class="p">,</span><span class="s">&quot;time&quot;</span><span class="o">:</span><span class="mi">1524979041</span><span class="p">,</span><span class="s">&quot;stacktrace&quot;</span><span class="o">:</span><span class="p">[</span><span class="mi">4299168744</span><span class="p">,</span><span class="mi">4299051336</span><span class="p">,</span><span class="mi">4298970328</span><span class="p">,</span><span class="mi">4298970672</span><span class="p">,</span><span class="mi">6639789768</span><span class="p">,</span><span class="mi">6640973988</span><span class="p">,</span><span class="mi">6639814524</span><span class="p">,</span><span class="mi">6641082844</span><span class="p">,</span><span class="mi">6640327240</span><span class="p">,</span><span class="mi">6640281848</span><span class="p">,</span><span class="mi">6640276024</span><span class="p">,</span><span class="mi">6648540172</span><span class="p">,</span><span class="mi">6648549816</span><span class="p">,</span><span class="mi">6648550680</span><span class="p">,</span><span class="mi">6648521304</span><span class="p">,</span><span class="mi">6474609668</span><span class="p">,</span><span class="mi">6474607660</span><span class="p">,</span><span class="mi">6474598300</span><span class="p">,</span><span class="mi">6473682344</span><span class="p">,</span><span class="mi">6507114528</span><span class="p">,</span><span class="mi">6641325964</span><span class="p">,</span><span class="mi">4298951872</span><span class="p">,</span><span class="mi">6467985344</span><span class="p">]}}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;error&quot;</span><span class="o">:</span><span class="p">{</span><span class="s">&quot;domain&quot;</span><span class="o">:</span><span class="s">&quot;74616b616869726f2074657374&quot;</span><span class="p">,</span><span class="s">&quot;code&quot;</span><span class="o">:</span><span class="mi">1001</span><span class="p">,</span><span class="s">&quot;time&quot;</span><span class="o">:</span><span class="mi">1524979043</span><span class="p">,</span><span class="s">&quot;stacktrace&quot;</span><span class="o">:</span><span class="p">[</span><span class="mi">4299168744</span><span class="p">,</span><span class="mi">4299051336</span><span class="p">,</span><span class="mi">4298970328</span><span class="p">,</span><span class="mi">4298970672</span><span class="p">,</span><span class="mi">6639789768</span><span class="p">,</span><span class="mi">6640973988</span><span class="p">,</span><span class="mi">6639814524</span><span class="p">,</span><span class="mi">6641082844</span><span class="p">,</span><span class="mi">6640327240</span><span class="p">,</span><span class="mi">6640281848</span><span class="p">,</span><span class="mi">6640276024</span><span class="p">,</span><span class="mi">6648540172</span><span class="p">,</span><span class="mi">6648549816</span><span class="p">,</span><span class="mi">6648521304</span><span class="p">,</span><span class="mi">6474609668</span><span class="p">,</span><span class="mi">6474607660</span><span class="p">,</span><span class="mi">6474598300</span><span class="p">,</span><span class="mi">6473682344</span><span class="p">,</span><span class="mi">6507114528</span><span class="p">,</span><span class="mi">6641325964</span><span class="p">,</span><span class="mi">4298951872</span><span class="p">,</span><span class="mi">6467985344</span><span class="p">]}}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;error&quot;</span><span class="o">:</span><span class="p">{</span><span class="s">&quot;domain&quot;</span><span class="o">:</span><span class="s">&quot;74616b616869726f2074657374&quot;</span><span class="p">,</span><span class="s">&quot;code&quot;</span><span class="o">:</span><span class="mi">1001</span><span class="p">,</span><span class="s">&quot;time&quot;</span><span class="o">:</span><span class="mi">1524979046</span><span class="p">,</span><span class="s">&quot;stacktrace&quot;</span><span class="o">:</span><span class="p">[</span><span class="mi">4299168744</span><span class="p">,</span><span class="mi">4299051336</span><span class="p">,</span><span class="mi">4298970328</span><span class="p">,</span><span class="mi">4298970672</span><span class="p">,</span><span class="mi">6639789768</span><span class="p">,</span><span class="mi">6640973988</span><span class="p">,</span><span class="mi">6639814524</span><span class="p">,</span><span class="mi">6641082844</span><span class="p">,</span><span class="mi">6640327240</span><span class="p">,</span><span class="mi">6640281848</span><span class="p">,</span><span class="mi">6640276024</span><span class="p">,</span><span class="mi">6648540172</span><span class="p">,</span><span class="mi">6648549816</span><span class="p">,</span><span class="mi">6648521304</span><span class="p">,</span><span class="mi">6474609668</span><span class="p">,</span><span class="mi">6474607660</span><span class="p">,</span><span class="mi">6474598300</span><span class="p">,</span><span class="mi">6473682344</span><span class="p">,</span><span class="mi">6507114528</span><span class="p">,</span><span class="mi">6641325964</span><span class="p">,</span><span class="mi">4298951872</span><span class="p">,</span><span class="mi">6467985344</span><span class="p">]}}</span>
</span><span class='line'><span class="p">{</span><span class="s">&quot;error&quot;</span><span class="o">:</span><span class="p">{</span><span class="s">&quot;domain&quot;</span><span class="o">:</span><span class="s">&quot;74616b616869726f2074657374&quot;</span><span class="p">,</span><span class="s">&quot;code&quot;</span><span class="o">:</span><span class="mi">1001</span><span class="p">,</span><span class="s">&quot;time&quot;</span><span class="o">:</span><span class="mi">1524979048</span><span class="p">,</span><span class="s">&quot;stacktrace&quot;</span><span class="o">:</span><span class="p">[</span><span class="mi">4299168744</span><span class="p">,</span><span class="mi">4299051336</span><span class="p">,</span><span class="mi">4298970328</span><span class="p">,</span><span class="mi">4298970672</span><span class="p">,</span><span class="mi">6639789768</span><span class="p">,</span><span class="mi">6640973988</span><span class="p">,</span><span class="mi">6639814524</span><span class="p">,</span><span class="mi">6641082844</span><span class="p">,</span><span class="mi">6640327240</span><span class="p">,</span><span class="mi">6640281848</span><span class="p">,</span><span class="mi">6640276024</span><span class="p">,</span><span class="mi">6648540172</span><span class="p">,</span><span class="mi">6648549816</span><span class="p">,</span><span class="mi">6648521304</span><span class="p">,</span><span class="mi">6474609668</span><span class="p">,</span><span class="mi">6474607660</span><span class="p">,</span><span class="mi">6474598300</span><span class="p">,</span><span class="mi">6473682344</span><span class="p">,</span><span class="mi">6507114528</span><span class="p">,</span><span class="mi">6641325964</span><span class="p">,</span><span class="mi">4298951872</span><span class="p">,</span><span class="mi">6467985344</span><span class="p">]}}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>recordError()の注意点</h4>

<p>今回、<code>recordError()</code>を利用していて気づいた点が以下の通りです。</p>

<ul>
<li>短時間に複数回タップしてもアプリ内のファイルにエラーログとして記録されない</li>
<li>アプリ内に記録されたエラーログが全て<code>Fabric</code>管理画面に記録されるわけではない</li>
</ul>


<p>どういったフィルタがかかっているのかまではわからないのですが、なんでもかんでも記録されるわけではないようです&hellip;</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
今回たまたま中身を探ってみる機会があったので見てみましたが、きっと普段は気にしなくて良い内容なのだと思います。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PromiseKitを使ってみよう！(2)]]></title>
    <link href="http://grandbig.github.io/blog/2018/04/24/swift-promisekit-2/"/>
    <updated>2018-04-24T23:51:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/04/24/swift-promisekit-2</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は久しぶりに<a href="https://github.com/mxcl/PromiseKit">PromiseKit</a>について書きたいと思います。<br/>
今から約2年前に<a href="http://grandbig.github.io/blog/2016/04/09/c/">PromiseKitを使ってみよう！</a>で少し触れていたのですが、<br/>
最近業務で扱うことも増えてきたので改めて書き留めておこうと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Promiseとは</h3>

<p><code>PromiseKit</code> に記載されている内容を訳すと(若干、意訳してますが&hellip;)、</p>

<ul>
<li>シンプルな非同期プログラミングを実現できる</li>
<li>上記によって、開発者がより重要な課題に集中することができる</li>
<li>学習ハードルが低いため、マスターすることが簡単である</li>
<li>可読性の高いコードが実現できるため、チーム開発にも向いている</li>
</ul>


<p>といった感じです。<br/>
これを見る限り、非常に期待できますよね。<br/>
では、具体的な使い方を見ていきましょう。</p>

<h3>アラートでの利用例</h3>

<p><code>UIAlertViewController</code> を利用した時に、通常は以下のように <code>completion</code> を引数に持って実装するかと思います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">internal</span> <span class="n">func</span> <span class="nf">showConfirm</span><span class="p">(</span><span class="nl">title:</span> <span class="n">String</span><span class="p">,</span>
</span><span class='line'>                          <span class="nl">message:</span> <span class="n">String</span><span class="p">,</span>
</span><span class='line'>                          <span class="nl">okCompletion:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">(()</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">),</span>
</span><span class='line'>                          <span class="nl">cancelCompletion:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">(()</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">alert</span> <span class="o">=</span> <span class="n">UIAlertController</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">title:</span> <span class="n">title</span><span class="p">,</span> <span class="nl">message:</span> <span class="n">message</span><span class="p">,</span> <span class="nl">preferredStyle:</span> <span class="n">UIAlertControllerStyle</span><span class="p">.</span><span class="n">alert</span><span class="p">)</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">okAction</span> <span class="o">=</span> <span class="n">UIAlertAction</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">title:</span> <span class="s">&quot;OK&quot;</span><span class="p">,</span> <span class="nl">style:</span> <span class="n">UIAlertActionStyle</span><span class="p">.</span><span class="k">default</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
</span><span class='line'>        <span class="n">okCompletion</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">cancelAction</span> <span class="o">=</span> <span class="n">UIAlertAction</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">title:</span> <span class="s">&quot;キャンセル&quot;</span><span class="p">,</span> <span class="nl">style:</span> <span class="n">UIAlertActionStyle</span><span class="p">.</span><span class="n">cancel</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
</span><span class='line'>        <span class="n">cancelCompletion</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">alert</span><span class="p">.</span><span class="n">addAction</span><span class="p">(</span><span class="n">okAction</span><span class="p">)</span>
</span><span class='line'>    <span class="n">alert</span><span class="p">.</span><span class="n">addAction</span><span class="p">(</span><span class="n">cancelAction</span><span class="p">)</span>
</span><span class='line'>    <span class="n">present</span><span class="p">(</span><span class="n">alert</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">,</span> <span class="nl">completion:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これだと引数が多くなってしまいますし、呼び出し側でも下記のように書くことになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">showConfirm</span><span class="p">(</span><span class="nl">title:</span> <span class="s">&quot;確認&quot;</span><span class="p">,</span> <span class="nl">message:</span> <span class="s">&quot;OKとキャンセルどちらをタップしますか&quot;</span><span class="p">,</span> <span class="nl">okCompletion:</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// OKボタンをクリックした場合に呼び出される</span>
</span><span class='line'><span class="p">})</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// キャンセルボタンをクリックした場合に呼び出される</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを <code>PromiseKit</code> を使って書くとどうなるでしょうか？<br/>
まずは、アラートのメソッドは下記のように書けます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="nl">AlertError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="n">func</span> <span class="n">showConfirm</span><span class="p">(</span><span class="nl">title:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">message:</span> <span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="p">(</span><span class="n">promise</span><span class="p">,</span> <span class="n">resolver</span><span class="p">)</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">&gt;</span><span class="p">.</span><span class="n">pending</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="n">alert</span> <span class="o">=</span> <span class="n">UIAlertController</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">title:</span> <span class="n">title</span><span class="p">,</span> <span class="nl">message:</span> <span class="n">message</span><span class="p">,</span> <span class="nl">preferredStyle:</span> <span class="n">UIAlertControllerStyle</span><span class="p">.</span><span class="n">alert</span><span class="p">)</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">okAction</span> <span class="o">=</span> <span class="n">UIAlertAction</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">title:</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">ok</span><span class="p">(),</span> <span class="nl">style:</span> <span class="n">UIAlertActionStyle</span><span class="p">.</span><span class="k">default</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
</span><span class='line'>        <span class="n">resolver</span><span class="p">.</span><span class="n">fulfill</span><span class="p">(</span><span class="n">Void</span><span class="p">())</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">cancelAction</span> <span class="o">=</span> <span class="n">UIAlertAction</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">title:</span> <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">cancel</span><span class="p">(),</span> <span class="nl">style:</span> <span class="n">UIAlertActionStyle</span><span class="p">.</span><span class="n">cancel</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
</span><span class='line'>        <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">AlertError</span><span class="p">.</span><span class="n">cancel</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">alert</span><span class="p">.</span><span class="n">addAction</span><span class="p">(</span><span class="n">okAction</span><span class="p">)</span>
</span><span class='line'>    <span class="n">alert</span><span class="p">.</span><span class="n">addAction</span><span class="p">(</span><span class="n">cancelAction</span><span class="p">)</span>
</span><span class='line'>    <span class="n">present</span><span class="p">(</span><span class="n">alert</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">,</span> <span class="nl">completion:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>呼び出し側では、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">firstly</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">showConfirm</span><span class="p">(</span><span class="nl">title:</span> <span class="s">&quot;確認&quot;</span><span class="p">,</span> <span class="nl">message:</span> <span class="s">&quot;OKとキャンセルどちらをタップしますか&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}.</span><span class="n">done</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
</span><span class='line'>    <span class="c1">// OKをタップした場合に呼び出される処理</span>
</span><span class='line'><span class="p">}.</span><span class="n">catch</span> <span class="p">{</span> <span class="p">[</span><span class="n">weak</span> <span class="n">self</span><span class="p">]</span> <span class="n">error</span> <span class="k">in</span>
</span><span class='line'>    <span class="c1">// キャンセルをタップした場合に呼び出される処理</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>と書くことができ、非常にわかりやすく後続の処理を書くことができます。</p>

<h3>API呼び出しの利用例</h3>

<p>続いて、API呼び出しの場合の利用例を見ていきましょう。<br/>
今回API通信処理では <a href="https://github.com/Moya/Moya">Moya</a> を利用します。<br/>
また、叩くAPIは <a href="https://developers.google.com/places/?hl=ja">Google Places API</a> を利用します。</p>

<p>まずは <code>Moya</code> の書き方ですが、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">Moya</span>
</span><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// APIエラーの定義</span>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="nl">APIError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">apiError</span><span class="p">(</span><span class="nl">description:</span> <span class="n">String</span><span class="p">)</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">decodeError</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">internal</span> <span class="k">enum</span> <span class="n">SampleAPITarget</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">places</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">SampleAPITarget:</span> <span class="n">TargetType</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// API Key</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">apiKey:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 以下はGoogleのAPIキーをkey.plistで保持していると仮定した処理です。</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;plist&quot;</span><span class="p">)</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;key.plistが見つかりません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;key.plistの中身が想定通りではありません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">&quot;googleApiKey&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">fatalError</span><span class="p">(</span><span class="s">&quot;Google APIのKeyが設定されていません&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">apiKey</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ベースURLを文字列で定義</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">_baseURL:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;https://maps.googleapis.com/maps/api/place/nearbysearch/json&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">baseURL:</span> <span class="n">URL</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">URL</span><span class="p">(</span><span class="nl">string:</span> <span class="n">_baseURL</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enumの値に対応したパスを指定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">path:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">places:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// enumの値に対応したHTTPメソッドを指定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">method:</span> <span class="n">Moya</span><span class="p">.</span><span class="n">Method</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">places:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">.</span><span class="n">get</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// スタブデータの設定</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">sampleData:</span> <span class="n">Data</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">places:</span>
</span><span class='line'>            <span class="k">return</span> <span class="s">&quot;Stub data&quot;</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">using:</span> <span class="n">String</span><span class="p">.</span><span class="n">Encoding</span><span class="p">.</span><span class="n">utf8</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// パラメータの設定</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">task:</span> <span class="n">Task</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="n">places</span><span class="p">(</span><span class="n">let</span> <span class="n">lat</span><span class="p">,</span> <span class="n">let</span> <span class="n">lng</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">.</span><span class="n">requestParameters</span><span class="p">(</span><span class="nl">parameters:</span> <span class="p">[</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">keyFileName</span><span class="p">()</span><span class="o">:</span> <span class="n">apiKey</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">locationKeyName</span><span class="p">()</span><span class="o">:</span> <span class="s">&quot;\(lat),\(lng)&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">R</span><span class="p">.</span><span class="n">string</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="n">radiusKeyName</span><span class="p">()</span><span class="o">:</span> <span class="mi">500</span>
</span><span class='line'>                <span class="p">],</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ヘッダーの設定</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">headers:</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">String</span><span class="p">]</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">switch</span> <span class="n">self</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="p">.</span><span class="nl">places:</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">SampleAPI</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">provider:</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">SampleAPITarget</span><span class="o">&gt;!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// イニシャライザ</span>
</span><span class='line'>    <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">provider</span> <span class="o">=</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">SampleAPITarget</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように書きます。<br/>
( <code>Moya</code> はUnitテストが書きやすいので良いんですよね〜という話はまた後日&hellip; )</p>

<p>では、本題の <code>PromiseKit</code> を用いたAPI通信処理です。<br/>
先程の <code>SampleAPI</code> クラスにメソッドを追加してみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="n">SampleAPI</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">provider:</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">SampleAPITarget</span><span class="o">&gt;!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// イニシャライザ</span>
</span><span class='line'>    <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">provider</span> <span class="o">=</span> <span class="n">MoyaProvider</span><span class="o">&lt;</span><span class="n">SampleAPITarget</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Placeの定義は</span>
</span><span class='line'>    <span class="c1">// https://grandbig.github.io/blog/2018/04/23/codable-swift4-1/</span>
</span><span class='line'>    <span class="c1">// の『オマケ：Google Places APIでCodableを利用する』を参照のこと</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchPlaces</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">Double</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="p">(</span><span class="n">promise</span><span class="p">,</span> <span class="n">resolver</span><span class="p">)</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="p">[</span><span class="n">Place</span><span class="p">]</span><span class="o">&gt;</span><span class="p">.</span><span class="n">pending</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">provider</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">places</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">lat</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">lng</span><span class="p">))</span> <span class="p">{</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>            <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">let</span> <span class="n">response</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">let</span> <span class="n">decoder</span> <span class="o">=</span> <span class="n">JSONDecoder</span><span class="p">()</span>
</span><span class='line'>                    <span class="n">decoder</span><span class="p">.</span><span class="n">keyDecodingStrategy</span> <span class="o">=</span> <span class="p">.</span><span class="n">convertFromSnakeCase</span>
</span><span class='line'>                    <span class="n">let</span> <span class="n">places</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">Places</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">response</span><span class="p">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                    <span class="n">resolver</span><span class="p">.</span><span class="n">fulfill</span><span class="p">(</span><span class="n">places</span><span class="p">.</span><span class="n">results</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">APIError</span><span class="p">.</span><span class="n">decodeError</span><span class="p">)</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="k">case</span> <span class="p">.</span><span class="n">failure</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                <span class="n">resolver</span><span class="p">.</span><span class="n">reject</span><span class="p">(</span><span class="n">APIError</span><span class="p">.</span><span class="n">apiError</span><span class="p">(</span><span class="nl">description:</span> <span class="n">error</span><span class="p">.</span><span class="n">localizedDescription</span><span class="p">))</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のように定義できます。<br/>
これを呼び出すときは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">var</span> <span class="n">worker</span> <span class="o">=</span> <span class="n">SampleAPI</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">firstly</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">worker</span><span class="p">.</span><span class="n">fetchPlaces</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">longitude</span><span class="p">)</span>
</span><span class='line'><span class="p">}.</span><span class="n">done</span> <span class="p">{</span> <span class="p">[</span><span class="n">weak</span> <span class="n">self</span><span class="p">]</span> <span class="n">results</span> <span class="k">in</span>
</span><span class='line'>    <span class="n">guard</span> <span class="n">let</span> <span class="n">strongSelf</span> <span class="o">=</span> <span class="n">self</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="n">results</span><span class="p">)</span>
</span><span class='line'><span class="p">}.</span><span class="n">catch</span> <span class="p">{</span> <span class="p">[</span><span class="n">weak</span> <span class="n">self</span><span class="p">]</span> <span class="n">error</span> <span class="k">in</span>
</span><span class='line'>    <span class="n">guard</span> <span class="n">let</span> <span class="n">strongSelf</span> <span class="o">=</span> <span class="n">self</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">print</span><span class="p">(</span><span class="n">error</span><span class="p">.</span><span class="n">localizedDescription</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように書くことができます。<br/>
こちらも縦に浅いネストで読むことができるため、可読性が高いと言えますね。</p>

<h3>PromiseKitの公式Readme</h3>

<p><code>PromiseKit</code> のドキュメントは非常に丁寧なので、これを読むだけでも理解を相当深められると思います。</p>

<ul>
<li><a href="https://github.com/mxcl/PromiseKit/blob/master/Documentation/GettingStarted.md">GettingStarted</a></li>
<li><a href="https://github.com/mxcl/PromiseKit/blob/master/Documentation/CommonPatterns.md">CommonPatterns</a></li>
</ul>


<p>を読んでおけばOKかと。<br/>
(上記の話も別機会でかければと思います。)</p>

<h3>まとめ</h3>

<p>さて、如何でしたでしょうか？<br/>
筆者は割りと <code>completion</code> で書くのが好きだったのですが、 <code>PromiseKit</code> に慣れていくと、その良さにどんどん気づいていくことができました。<br/>
リトライ処理は遅延実行も簡単に対応できたりするので、ぜひ使ってみることをオススメします。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[レバテック キャリアにて本ブログが紹介されました！]]></title>
    <link href="http://grandbig.github.io/blog/2018/04/23/levtech-blog/"/>
    <updated>2018-04-23T02:39:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/04/23/levtech-blog</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>先日、<a href="http://leverages.jp/">レバレジーズ株式会社</a> 様より『レバテックキャリア』の『Swift』に関する記事にて、本ブログを紹介したいとご連絡頂きました。<br/>
ブログを始めて4年半、こういったお誘いを頂くことは初めてで、正直全く想定していませんでした。</p>

<p>今回は、紹介記事を逆に紹介すると共に、当時のことを深掘りしながら振り返ってみたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>紹介記事について</h3>

<p>今回掲載された紹介記事は<a href="https://career.levtech.jp/guide/knowhow/article/406/">プログラミング学習の参考に！パワフルかつ直感的な言語&#8221;Swift&#8221;に関する記事特集</a>です。<br/>
この記事のテーマは『これからSwiftを用いたiOSアプリ開発を志す人達へのお役立ち情報を提供すること』と筆者は捉えました。<br/>
その中で本ブログは <strong>『(5) Swiftを使ってアプリを作ろう！！』</strong> で紹介されています。</p>

<p>記事の内容としては、<a href="https://grandbig.github.io/blog/2014/09/29/developing-ibeacon-app-by-using-swift/">Swiftを使って、iBeaconのCentralアプリを作ろう！！</a>で、<br/>
当時、筆者がObjective-CをメインにiOSアプリを開発していた頃にSwiftを勉強しようと思い立った時のものです。</p>

<h3>当時の状況</h3>

<p>あの頃はSwiftも登場したばかりで、iOSアプリ開発の現場ではObjective-Cが主流でした。<br/>
( 会社の業務ではSwiftを扱うことはありませんでした。 )<br/>
と同時に、筆者は正直なところ、</p>

<ul>
<li>これからはSwiftがiOSアプリのメイン言語として受け入れられていくかもしれない&hellip;</li>
<li>Objective-Cと全然違う言語っぽいので、パット見、書き方がよくわからない&hellip;</li>
<li>これまでの知識を全て捨てて0からiOSエンジニアを目指さなくてはならないのだろうか&hellip;</li>
</ul>


<p>と戦々恐々としていました。</p>

<p>そんな気持ちがあるからこそ、早めにキャッチアップした方が良いだろうということでSwiftの勉強を始めたのだと思います。<br/>
勉強の題材としては、当時、業務で触れる機会の多かったiBeaconを選択しました。<br/>
勉強の目的を達成するための最良な選択は、現場に近い題材を扱うことだと思ったためです。</p>

<h3>Swift思考へシフトしてわかったこと</h3>

<p>続いて、Objective-CからSwiftに脳をシフトして苦労したこと、良かったことなどについて振り返りたいと思います。</p>

<h4>苦労したこと</h4>

<p>筆者がSwiftの勉強を開始して特に苦労した点は以下でした。</p>

<ul>
<li><strong>Optional型</strong> と <strong>Optional型のアンラップ</strong> の理解</li>
<li>様々な文法の省略記法 (クロージャなど) の理解</li>
</ul>


<p>今思えば、その魅力には絶賛せざるを得ないのですが、なにせ当初はObjective-C脳だったので、苦労しました。<br/>
打開策はただひたすら、その魅力や意味を理解するためにサンプルを書き続けたことだと思います。</p>

<h4>良かったこと</h4>

<p>Swiftを勉強して特に良かったと感じることは以下でしょうか。</p>

<ul>
<li>Java8やKotlinでのOptionalの理解が早い</li>
<li>様々な現場でSwiftの書けるiOSエンジニアが求められているが、そこにも入っていける</li>
</ul>


<p>SpringBootでのサーバサイド開発でJava8を利用することがあったり、<br/>
アプリ開発時は往々にしてiOSとAndroidを並行して進めることが多いので、Androidでどんな感じに書いているのか見に行くのが楽だったりしました。</p>

<p>もちろんiOS開発単体での素晴らしさはあると思いますが、派生して行けるのが強みなのかなと思ったりします。</p>

<h4>現在のiOSアプリ開発の現場</h4>

<p>今、私が所属している現場ではバリバリSwiftを書いています。<br/>
Objective-Cも当然ありますが、私の業務で言うと、ソースコードをたまに見るくらいですかね。</p>

<p>因みに、Swiftを利用していると一言で言っても、以下のように状況が分かれている場合もあるようです。</p>

<ul>
<li>Swift2.xを継続利用している</li>
<li>Swift3.xを継続利用している</li>
<li>Swift4を継続利用している</li>
<li>Swift4.1に対応できている</li>
</ul>


<p>この辺りもObjective-C時代には気にしなくても良かったところですね。<br/>
特にSwift2.xからSwift3.xへの移行はコストもかかるため、どっぷりSwift化してしまったプロダクトは困っていることでしょう&hellip;<br/>
圧倒的にSwift3およびSwift4以降の方がコーディングが楽なので、Swift2.xは辛そう&hellip;</p>

<h3>まとめ</h3>

<p>さて、今回は思わぬ本ブログの紹介依頼を起点に、当時を振り返ってみました。<br/>
1つ改めて思い出したことは、時代の流れに乗って、常に新しいことを勉強することは大切だということです。<br/>
忙しくてなかなかブログを更新できないこともありましたが、やっぱり『継続は力なり』ですね。</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift4.1で利便性が向上したCodable]]></title>
    <link href="http://grandbig.github.io/blog/2018/04/23/codable-swift4-1/"/>
    <updated>2018-04-23T00:00:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/04/23/codable-swift4-1</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回はSwift4.1でさらに利便性が向上した <code>Codable</code> について紹介したいと思います。<br/>
Swift4で登場した <code>Codable</code> ですが、何がより便利になったかというと、 <strong>スネークケース</strong> から <strong>キャメルケース</strong> への変換処理です。</p>

<p>早速、実例を交えて何が変わったのか見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>スネークケースからキャメルケースへの変換処理</h3>

<p>まずは、説明のために扱うAPIについて説明したいと思います。</p>

<h4>サンプルとして利用するAPIについて</h4>

<p>今回は、 <a href="https://developers.google.com/places/web-service/?hl=ja">Google Places API</a>を元に説明します。<br/>
<code>Google Places API</code> で返却されるレスポンスの一例は以下の通りです。</p>

<p><img src="http://grandbig.github.io/images/swift4_1_codable.png" alt="Google Places APIのレスポンスの一部" /></p>

<h4>Swift4での対応方法</h4>

<p>これまでのSwift4では以下のようにスネークケースからキャメルケースへの対応をしていました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Place:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">placeId:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="k">enum</span> <span class="nl">CodingKeys:</span> <span class="n">String</span><span class="p">,</span> <span class="n">CodingKey</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="kt">id</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">placeId</span> <span class="o">=</span> <span class="s">&quot;place_id&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">name</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のように、自身で <code>CodingKey</code> プロトコルに準拠した <code>CodingKeys</code> を定義していました。</p>

<h4>Swift4.1での対応方法</h4>

<p>スネークケースからキャメルケースへの変換はほぼほぼ確実に発生しうる命名規則と考えられるので対応したのでしょうか？<br/>
Swift4.1では実に簡単に対応できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Place:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">placeId:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Swift4.1では <code>CodingKeys</code> 内で設定する必要がありません。<br/>
サーバレスポンスの変換前に以下の1行を追加するだけで自動で判断してくれるようになりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Moyaを利用したAPIレスポンスを扱う例</span>
</span><span class='line'><span class="c1">// 今回はMoyaが説明のメインではないため、深くは説明しない</span>
</span><span class='line'><span class="n">provider</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">places</span><span class="p">(</span><span class="nl">lat:</span> <span class="n">lat</span><span class="p">,</span> <span class="nl">lng:</span> <span class="n">lng</span><span class="p">))</span> <span class="p">{</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>    <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">let</span> <span class="n">response</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>        <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">decoder</span> <span class="o">=</span> <span class="n">JSONDecoder</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1">// 下記を追加</span>
</span><span class='line'>            <span class="n">decoder</span><span class="p">.</span><span class="n">keyDecodingStrategy</span> <span class="o">=</span> <span class="p">.</span><span class="n">convertFromSnakeCase</span>
</span><span class='line'>            <span class="c1">// 上記を追加</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">let</span> <span class="n">places</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">Places</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">response</span><span class="p">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;places: \(places)&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="s">&quot;error: 変換エラー&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="k">case</span> <span class="p">.</span><span class="n">failure</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="s">&quot;error: \(error)&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>オマケ：Google Places APIでCodableを利用する</h3>

<p>今回説明するにあたって定義した <code>Google Places API</code> 用の <code>Codable</code> を折角なので書いておきたいと思います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Location:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">lat:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">lng:</span> <span class="n">Double</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Viewport:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">northeast:</span> <span class="n">Location</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">southwest:</span> <span class="n">Location</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Geometry:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">viewport:</span> <span class="n">Viewport</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">location:</span> <span class="n">Location</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">OpeningHours:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">weekdayText:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">openNow:</span> <span class="n">Bool</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Photos:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">photoReference:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">width:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">height:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">htmlAttributions:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Place:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">placeId:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">icon:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">rating:</span> <span class="n">Double</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">scope:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">vicinity:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">reference:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">priceLevel:</span> <span class="n">Int</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">types:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">geometry:</span> <span class="n">Geometry</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">openingHours:</span> <span class="n">OpeningHours</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">photos:</span> <span class="p">[</span><span class="n">Photos</span><span class="p">]</span><span class="o">?</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">Places:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">places:</span> <span class="p">[</span><span class="n">Place</span><span class="p">]</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">status:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">htmlAttributions:</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="k">enum</span> <span class="nl">CodingKeys:</span> <span class="n">String</span><span class="p">,</span> <span class="n">CodingKey</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">places</span> <span class="o">=</span> <span class="s">&quot;results&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">status</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">htmlAttributions</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
オープンソース化された効果なのか、Swiftも現場で必要とされる使われ方にどんどん適応していっている感じがしますね。<br/>
今後に更なる期待を寄せつつ、本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新年度を迎えたからこそ考えよう『ブランチルール』]]></title>
    <link href="http://grandbig.github.io/blog/2018/04/07/git-flow/"/>
    <updated>2018-04-07T14:00:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/04/07/git-flow</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>さて、2018年も4月を迎え、新年度が始まりました。<br/>
このタイミングで新チーム体制となる職場も多いことでしょう。<br/>
筆者も例外ではなく、新たなプロダクト方針の下、開発フローを整える必要がありました。<br/>
そんな中、必ず考えなくてはならないことの1つとして <strong>ブランチルール</strong> があるかと思います。</p>

<p>今回はその <strong>ブランチルール</strong> に特化した記事を書き留めていきます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>なぜブランチルールを考えるのか</h3>

<p>そもそも『なぜ <strong>ブランチルール</strong> を考えなくてはいけないのか？』と疑問に思う方もいるでしょう。<br/>
例えば、開発者一人でアプリケーションの開発業務をするのであれば、以下でも特に問題ないかもしれません。</p>

<ul>
<li><code>master</code> ブランチから任意の名称のブランチを切る</li>
<li>切ったブランチで完成するまで作り続ける</li>
<li>作り終わったら <code>master</code> にマージする</li>
</ul>


<p>しかし、そこに <strong>『新たなメンバーの参画による引き継ぎ業務』</strong> が入ったらどうなるでしょうか？</p>

<p>『アプリケーションの内容だけ引き継いで、ブランチルールは引き継がなくても良い』<br/>
(と言うか、ブランチルールなんてないようなものなので引き継げない&hellip;)<br/>
と簡単に切り離せるものでしょうか？</p>

<p>業務でこれまでの経緯を知る必要が出てきた時に、恐らくそれは成り立たないことでしょう。<br/>
であるならば、例え一人での開発だったとしても <strong>ブランチルール</strong> を明確にしておいて損はないと思います。</p>

<p>さらに、『複数人で案件を並行させながら開発する』必要が出てきた場合には最早議論の余地はないでしょう。<br/>
もしもそこに <strong>ブランチルール</strong> が存在しなかったとしたら、代わりにそこには必ず <strong>障害</strong> が存在していると思うべきでしょう。</p>

<h3>一般的なブランチルール</h3>

<p>前段はこのくらいにして、一般的なブランチルールを見ていきましょう。</p>

<h4>git-flow</h4>

<p>まずは何と言っても有名なのが <strong>git-flow</strong> でしょう。<br/>
これは<a href="http://nvie.com/about/">Vincent Driessen</a>氏が提唱しているブランチルール(ブランチモデル)です。</p>

<p><img src="http://grandbig.github.io/images/git-flow.png" alt="git-flow model" /><br/>
※ <a href="http://nvie.com/posts/a-successful-git-branching-model/">A successful Git branching model</a> より抜粋</p>

<p>各ブランチは以下の役割を持っています。</p>

<p><img src="http://grandbig.github.io/images/git-flow-2.png" alt="git-flowの各ブランチの役割" /></p>

<p><strong>git-flow</strong> の良いところは、</p>

<ul>
<li>長期間かかる案件の開発に向いている</li>
<li>各ブランチの役割が1つ1つ明確に分かれており、(ルールを覚えれば)作業に迷わない</li>
</ul>


<p>だと思っています。</p>

<h4>github-flow</h4>

<p>続いてこちらも超有名 <strong>github-flow</strong> ですね。<br/>
これは <strong>git-flow</strong> のような複雑性は皆無と言っても過言ではないくらいシンプルな <strong>ブランチルール</strong> です。</p>

<p><img src="http://grandbig.github.io/images/git-flow-3.png" alt="github-flow" /></p>

<p>各ブランチは以下の役割を持っています。</p>

<p><img src="http://grandbig.github.io/images/git-flow-4.png" alt="github-flowの各ブランチの役割" /></p>

<p><strong>github-flow</strong> の良いところは、</p>

<ul>
<li>リリースサイクルの早い開発に向いている</li>
<li>シンプルなブランチ運用であるため、作業に迷わない</li>
</ul>


<h3>開発現場で必ず生まれる既存ブランチルールのオマージュ</h3>

<p><strong>git-flow</strong> や <strong>github-flow</strong> など優秀な <strong>ブランチルール</strong> があることがわかりました。<br/>
が、しかし、開発現場ではなかなかそのままの <strong>ブランチルール</strong> を利用するということが意外にもないのではないでしょうか。</p>

<p>その理由の1つとして、『プロダクトフェーズへの <strong>ブランチルール</strong> の依存』が考えられます。<br/>
以下、具体的に求められうる事象を取り上げます。</p>

<ul>
<li>ライバルを追う立場のプロダクトは、勝ち手の見えている大規模機能を早く提供する必要がある

<ul>
<li>並行して大規模な追加機能を開発することが求められる</li>
<li>並行して小さな改善と大規模な追加機能を開発することが求められる
リリースサイクルの長さが明らかに異なる案件が混ざっている</li>
</ul>
</li>
</ul>


<p>こういった現場の状況に耐えうる <strong>ブランチルール</strong> はどういったものが考えられるでしょうか？<br/>
例えば&hellip;</p>

<ul>
<li><code>feature/案件名/master</code> ブランチを作成し、それらには <code>develop</code> と同じ役割を与える<br/>
<code>feature/案件名/master</code> から機能追加単位で <code>feature/案件名/xxxx</code> ブランチを切って開発を進める</li>
<li><code>develop</code> ブランチを用意せず、<code>feature</code> ブランチは <code>release</code> ブランチにマージする</li>
</ul>


<p>など様々な手段があるかもしれません。<br/>
上記はあくまでも一例ですが、各開発現場にとって最適な <strong>ブランチルール</strong> は必ず存在するはずです。<br/>
オマージュする/しないが善悪なのではなく、プロダクトを推進する上での善悪で判断することで、メンバーの納得感を得ることもできるでしょう。</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
最近、「ブランチルールを考えて、相談して、図示化して&hellip;」ということが多かったので、少し整理してみました。<br/>
筆者の現場でも必ずブラッシュアップが発生すると思っているので、また考え方が変わったらブログに書いていこうと思います。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ストレングス・ファインダー2.0で自分の強みを把握してみた]]></title>
    <link href="http://grandbig.github.io/blog/2018/03/26/strength-finder-v2/"/>
    <updated>2018-03-26T23:06:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/03/26/strength-finder-v2</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>筆者が初めて <strong>ストレングス・ファインダー</strong> に出会ったのは社会人3年目に差し掛かる頃だったと思います。<br/>
研修で自身の強みを知るために、 <strong>ストレングス・ファインダー</strong> を活用したことが、つい最近のように思い出されます。<br/>
ただし、当時は、興味半分&amp;面白半分といった感情でしかなく、そこまで真剣に自身の強みを考えてはいませんでした。</p>

<p>それから月日は流れ&hellip;<br/>
なんと、 <a href="https://www.amazon.co.jp/%E3%81%95%E3%81%82%E3%80%81%E6%89%8D%E8%83%BD-%E3%81%98%E3%81%B6%E3%82%93-%E3%81%AB%E7%9B%AE%E8%A6%9A%E3%82%81%E3%82%88%E3%81%86-%E6%96%B0%E7%89%88-%E3%82%B9%E3%83%88%E3%83%AC%E3%83%B3%E3%82%B0%E3%82%B9%E3%83%BB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%B3%E3%83%80%E3%83%BC2-0/dp/4532321433">ストレングス・ファインダー2.0</a> が発売されました。<br/>
「これはやらねば！！」ということで、久々に自身の強みを出してみました。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>34の強みリスト</h3>

<p>早速、 <strong>ストレングス・ファインダー2.0</strong> のアンケートに答えて、34の強みを出してみました。<br/>
※34全ての強みを知るには書籍購入に加えて$69支払う必要があります。</p>

<p><img src="http://grandbig.github.io/images/strength_finder_v2.png" alt="34の強み" /></p>

<p>上記を見ると、</p>

<ul>
<li><strong>実行力</strong> のほとんどが上位</li>
<li><strong>影響力</strong> のほとんどが下位</li>
<li><strong>人間関係構築力</strong> が真ん中に集まっている</li>
<li><strong>戦略的思考力</strong> は全体的に散らばっている</li>
</ul>


<p>ことがわかります。<br/>
また、34の強みの中でのTOP5は</p>

<ol>
<li>達成欲</li>
<li>学習欲</li>
<li>慎重さ</li>
<li>内省</li>
<li>調和性</li>
</ol>


<p>となっています。<br/>
これはストレングス・ファインダーの書籍に書かれた説明を読むと『しっくりくるとしか言いようがないくらい』しっくり来ています笑</p>

<p>例えば、</p>

<ol>
<li>達成欲<br/>
昔からなんだかんだ言って、忙しいこと自体は嫌いじゃない。</li>
<li>学習欲<br/>
自己研鑽が大好き。結構、本を読む。</li>
<li>慎重さ<br/>
最近、リーダー業務が多く、決断を下すことが増えてきたからかも。</li>
<li>内省<br/>
脳内フル回転を人知れずよくしている。集中しすぎて降車駅を過ぎることもしばしば&hellip;</li>
<li>調和性<br/>
基本的に衝突が嫌いなので、どうすれば納得感を持った整理できるか追いかけがち</li>
</ol>


<p>みたいな感じです。</p>

<h3>便利なストレングス・ファインダーアプリ</h3>

<p>確か、4〜5年前はなかったと思うのですが、今はWEBだけではなく、アプリでも自身の強みを簡単に確認することができます。<br/>
<a href="https://itunes.apple.com/jp/app/cliftonstrengths/id650833234?mt=8">CliftonStrengths™</a>をぜひ使ってみましょう。</p>

<p><img src="http://grandbig.github.io/images/strength_finder_v2_2.PNG" alt="CliftonStrengths™ アプリ" /></p>

<h3>まとめ</h3>

<p>さて、今回は趣向を変えて、自身の強みを見てみました。<br/>
折角の機会なので、更に <strong>ストレングス・ファインダー</strong> を読み込んで、自分の強みをどう活かしていくと良いのか理論的に考えられるようになれればと思っています。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITextField 豆知識]]></title>
    <link href="http://grandbig.github.io/blog/2018/02/24/uitextfield-mame-knowledge/"/>
    <updated>2018-02-24T15:56:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/02/24/uitextfield-mame-knowledge</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>最近、<code>UITextField</code> を何かとカスタマイズすることが多いので、忘れないように豆知識的に残しておこうと思います。</p>

<p>アジェンダ<br/>
① <code>UITextField</code> の色変更<br/>
② <code>UITextField</code> のマージン変更<br/>
③ <code>UITextField</code> の <code>Attribute</code> 対応</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3><code>UITextField</code>の色変更</h3>

<p><code>UITextField</code>を以下のように定義しているとします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">textField:</span> <span class="n">UITextField</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure>


<h4>入力した文字色の変更</h4>

<p>以下のようにすれば、テキストカラーを赤色に変更できます。<br/>
<code>textField.textColor = UIColor.red</code></p>

<h4>文字入力時のキャレットの変更</h4>

<p>以下のようにすれば、キャレット色を赤色に変更できます。<br/>
<code>textField.tintColor = UIColor.red</code></p>

<h4><code>Placeholder</code> の色の変更</h4>

<p>以下のようにすれば、<code>Placeholder</code>の色を赤色に変更できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">textField</span><span class="p">.</span><span class="n">attributedPlaceholder</span> <span class="o">=</span> <span class="n">NSAttributedString</span><span class="p">(</span><span class="nl">string:</span> <span class="n">textField</span><span class="p">.</span><span class="n">placeholder</span> <span class="o">??</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="nl">attributes:</span> <span class="p">[</span><span class="n">NSAttributedStringKey</span><span class="p">.</span><span class="nl">foregroundColor:</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">red</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<h3><code>UITextField</code>のマージン変更</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="nl">x:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">width:</span> <span class="mi">16</span><span class="p">,</span> <span class="nl">height:</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'><span class="n">textField</span><span class="p">.</span><span class="n">leftView</span> <span class="o">=</span> <span class="n">UIView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">frame</span><span class="p">)</span>
</span><span class='line'><span class="n">textField</span><span class="p">.</span><span class="n">leftViewMode</span> <span class="o">=</span> <span class="p">.</span><span class="n">always</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>textRect</code>, <code>editingRect</code>, <code>placeholderRect</code> を <code>override</code> する方法もありますが、<br/>
上記であれば、1つの処理で入力後/入力中/Placeholder全てに適用されます。</p>

<p><img src="http://grandbig.github.io/images/uitextfield_custom.png" alt="UITextFieldにマージンを追加" /></p>

<h3><code>Attribute</code> 対応</h3>

<p>例えば、文字入力後にボタンを押下した後にバリデーションチェックをかけたいことがあるかもしれません。<br/>
バリデーションチェックの結果、違反文字の色を変更する必要がある場合は以下のように <code>attributedText</code> に変更内容を反映させます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="nf">setupAttributedString</span><span class="p">(</span><span class="nl">textField:</span> <span class="n">UITextField</span><span class="p">,</span> <span class="nl">attributeText:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">color:</span> <span class="n">UIColor</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">guard</span> <span class="n">let</span> <span class="n">text</span> <span class="o">=</span> <span class="n">textField</span><span class="p">.</span><span class="n">text</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">let</span> <span class="n">attributedString</span> <span class="o">=</span> <span class="n">NSMutableAttributedString</span><span class="p">(</span><span class="nl">string:</span> <span class="n">text</span><span class="p">)</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">colorRange</span> <span class="o">=</span> <span class="p">(</span><span class="n">text</span> <span class="n">as</span> <span class="n">NSString</span><span class="p">).</span><span class="n">range</span><span class="p">(</span><span class="nl">of:</span> <span class="n">attributeText</span><span class="p">)</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">font</span> <span class="o">=</span> <span class="n">UIFont</span><span class="p">.</span><span class="n">systemFont</span><span class="p">(</span><span class="nl">ofSize:</span> <span class="n">textField</span><span class="p">.</span><span class="n">font</span><span class="o">!</span><span class="p">.</span><span class="n">pointSize</span><span class="p">)</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">fontRange</span> <span class="o">=</span> <span class="n">NSRange</span><span class="p">(</span><span class="nl">location:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">length:</span> <span class="n">text</span><span class="p">.</span><span class="n">count</span><span class="p">)</span>
</span><span class='line'>  <span class="n">attributedString</span><span class="p">.</span><span class="n">addAttribute</span><span class="p">(.</span><span class="n">foregroundColor</span><span class="p">,</span> <span class="nl">value:</span> <span class="n">color</span><span class="p">,</span> <span class="nl">range:</span> <span class="n">colorRange</span><span class="p">)</span>
</span><span class='line'>  <span class="n">attributedString</span><span class="p">.</span><span class="n">addAttribute</span><span class="p">(.</span><span class="n">font</span><span class="p">,</span> <span class="nl">value:</span> <span class="n">font</span><span class="p">,</span> <span class="nl">range:</span> <span class="n">fontRange</span><span class="p">)</span>
</span><span class='line'>  <span class="n">textField</span><span class="p">.</span><span class="n">attributedText</span> <span class="o">=</span> <span class="n">attributedString</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/uitextfield_custom_2.png" alt="UITextFieldにAttributeを追加" /></p>

<h3>まとめ</h3>

<p>意外に <code>UITextField</code> のカスタマイズってするんですよね〜<br/>
今後も利用するシーンが多いと思うので覚えておかなきゃ。<br/>
本日は以上。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableViewで任意のスクロール位置に移動させる方法]]></title>
    <link href="http://grandbig.github.io/blog/2018/01/28/tableview-scroll/"/>
    <updated>2018-01-28T21:01:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2018/01/28/tableview-scroll</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>最近、開発していて微妙にハマった <code>UITableView</code> を <code>reloadData</code> 後に、スクロール位置を移動させる方法についてメモしておきたいと思います。<br/>
<code>UITableView</code> で一覧表示をするアプリを開発している際に、<br/>
新規データに更新後、スクロール位置を変更したい場合があるかと思います。<br/>
その方法について書いていきます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>スクロール位置を変更させる方法</h3>

<p>ざっとググってみるだけで幾つか方法が見つかると思います。</p>

<p>例えば&hellip;</p>

<ul>
<li><code>self.tableView.contentOffset = CGPoint(x: 0, y: -self.tableView.contentInset.top)</code> を設定する</li>
<li><code>self.tableView.scrollRectToVisible(CGRect(x: 0, y: 0, width: 1, height: 1), animated: false)</code> を設定する</li>
<li><code>self.tableView.scrollToRow(at: indexPath, at: UITableViewScrollPosition.top, animated: false)</code> を設定する</li>
</ul>


<p>これらを以下のように実行してみても想定通りにスクロール位置が動いてくれません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">/// UITableViewのデータ更新処理</span>
</span><span class='line'><span class="c1">///</span>
</span><span class='line'><span class="c1">/// - Parameters:</span>
</span><span class='line'><span class="c1">///   - data: 更新したいデータ</span>
</span><span class='line'><span class="n">func</span> <span class="nf">configure</span><span class="p">(</span><span class="nl">data:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// データ更新処理など実行 (今回は省略)</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">reloadData</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">let</span> <span class="n">indexPath</span> <span class="o">=</span> <span class="n">IndexPath</span><span class="p">(</span><span class="nl">row:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">section:</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">scrollToRow</span><span class="p">(</span><span class="nl">at:</span> <span class="n">indexPath</span><span class="p">,</span> <span class="nl">at:</span> <span class="n">UITableViewScrollPosition</span><span class="p">.</span><span class="n">top</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">false</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは <code>reloadData()</code> が実行されて、描画が完了する前に次の <code>scrollToRow</code> が実行されているからだと思われます。</p>

<p>これをどうやって解決すれば良いかと言うと&hellip;<br/>
データ更新後の <code>UITableView</code> が描画された後にスクロール位置が変わるように、タイミングをずらしてやる必要があります。<br/>
こんな感じで&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">/// UITableViewのデータ更新処理</span>
</span><span class='line'><span class="c1">///</span>
</span><span class='line'><span class="c1">/// - Parameters:</span>
</span><span class='line'><span class="c1">///   - data: 更新したいデータ</span>
</span><span class='line'><span class="n">func</span> <span class="nf">configure</span><span class="p">(</span><span class="nl">data:</span> <span class="p">[</span><span class="n">Int</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// データ更新処理など実行 (今回は省略)</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">reloadData</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">indexPath</span> <span class="o">=</span> <span class="n">IndexPath</span><span class="p">(</span><span class="nl">row:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">section:</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">scrollToRow</span><span class="p">(</span><span class="nl">at:</span> <span class="n">indexPath</span><span class="p">,</span> <span class="nl">at:</span> <span class="n">UITableViewScrollPosition</span><span class="p">.</span><span class="n">top</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">false</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>恐らく <code>reloadData</code> 実行指示の中にメインスレッドで実行する処理がキューとして溜められているはずです。<br/>
その後に実行される <code>scrollToRow</code> を <code>DispatchQueue.main.async</code> 内で実行することで、メインスレッドのキューに処理を追加しています。<br/>
こうすれば <code>reloadData</code> が終わった後に <code>UI</code> 処理を続けて実行できるというわけですね。</p>

<h3>まとめ</h3>

<p>今回の考え方は他の処理でも利用できるところがある気がするので覚えておいて損はないはず！<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS10とiOS11で比較するUIStackViewのhiddenとConstraintエラー]]></title>
    <link href="http://grandbig.github.io/blog/2017/12/10/ios11-stackview-hidden/"/>
    <updated>2017-12-10T00:00:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/12/10/ios11-stackview-hidden</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>この記事は<a href="https://qiita.com/advent-calendar/2017/ios2">iOS2 Advent Calendar 2017</a>の10日目の記事です。</p>

<p>本記事では今年発表されたiOS11で改善された <code>UIStackView</code> 周りの <code>Constraint</code> 対応について紹介したいと思います。<br/>
<code>UIStackView</code> はiOS8以前に、開発者が <code>AutoLayout</code> を駆使して <code>View</code> と <code>View</code> 間のマージンやパディングを設定していた状況を一変させました。<br/>
そんな便利な存在である一方で使い方に慣れるまでに時間がかかったり、なぜかうまくいかないと悩んだりすることもしばしばあることと思います。</p>

<p>その中でも厄介だったのが、 <code>UIStackView</code> の子要素に <code>UIStackView</code> があり、元の <code>UIStackView</code> を非表示にすると <code>Constraint</code> エラーが発生するパターンです。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>iOS10で発生するConstraintエラー</h3>

<p>例えば、下図のような構成の <code>View</code> を作成する必要があったとします。</p>

<p><img src="http://grandbig.github.io/images/ios11_stackview_1.png" alt="Constraintエラーが発生するパターン" /></p>

<p>このレイアウトは、</p>

<ul>
<li><code>width</code> と <code>height</code> が 固定幅の <code>UIView</code> 3つを子要素として持つ <code>Child Stack View</code></li>
<li>その <code>Child Stack View</code> と <code>UIButton</code> を子要素に持つ <code>Parent Stack View</code></li>
</ul>


<p>で構成されています。<br/>
このような <code>UIStackView</code> の子要素に <code>UIStackView</code> を持つレイアウトを実装し、<br/>
何らかの条件で『表示/非表示』を切り替える仕様があったとします。<br/>
※今回のサンプルでは、<code>SHOW or HIDE</code> ボタンをタップ時に表示/非表示を切り替えるように実装するとします。</p>

<p>その場合、非表示にしたタイミングで、iOS10では下記の <code>Constraint</code> エラーが発生します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">LayoutConstraints</span><span class="p">]</span> <span class="n">Unable</span> <span class="n">to</span> <span class="n">simultaneously</span> <span class="n">satisfy</span> <span class="n">constraints</span><span class="p">.</span>
</span><span class='line'>  <span class="n">Probably</span> <span class="n">at</span> <span class="n">least</span> <span class="n">one</span> <span class="n">of</span> <span class="n">the</span> <span class="n">constraints</span> <span class="k">in</span> <span class="n">the</span> <span class="n">following</span> <span class="n">list</span> <span class="n">is</span> <span class="n">one</span> <span class="n">you</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">want</span><span class="p">.</span>
</span><span class='line'>  <span class="n">Try</span> <span class="nl">this:</span>
</span><span class='line'>      <span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="n">look</span> <span class="n">at</span> <span class="n">each</span> <span class="n">constraint</span> <span class="n">and</span> <span class="n">try</span> <span class="n">to</span> <span class="n">figure</span> <span class="n">out</span> <span class="n">which</span> <span class="n">you</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">expect</span><span class="p">;</span>
</span><span class='line'>      <span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="n">find</span> <span class="n">the</span> <span class="n">code</span> <span class="n">that</span> <span class="n">added</span> <span class="n">the</span> <span class="n">unwanted</span> <span class="n">constraint</span> <span class="n">or</span> <span class="n">constraints</span> <span class="n">and</span> <span class="n">fix</span> <span class="n">it</span><span class="p">.</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x618000095a90 UIView:0x7ffc6dc04350.height == 44   (active)&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x610000097020 &#39;UISV-canvas-connection&#39; UIStackView:0x7ffc6de08680.top == UIView:0x7ffc6df0b170.top   (active)&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x610000097980 &#39;UISV-canvas-connection&#39; V:[UIView:0x7ffc6dc04350]-(0)-|   (active, names: &#39;|&#39;:UIStackView:0x7ffc6de08680 )&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x6080000944b0 &#39;UISV-hiding&#39; UIStackView:0x7ffc6de08680.height == 0   (active)&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x6100000979d0 &#39;UISV-spacing&#39; V:[UIView:0x7ffc6df0b170]-(16)-[UIView:0x7ffc6dc088c0]   (active)&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x610000097a20 &#39;UISV-spacing&#39; V:[UIView:0x7ffc6dc088c0]-(16)-[UIView:0x7ffc6dc04350]   (active)&gt;&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">Will</span> <span class="n">attempt</span> <span class="n">to</span> <span class="n">recover</span> <span class="n">by</span> <span class="n">breaking</span> <span class="n">constraint</span>
</span><span class='line'><span class="o">&lt;</span><span class="nl">NSLayoutConstraint:</span><span class="mh">0x618000095a90</span> <span class="nl">UIView:</span><span class="mh">0x7ffc6dc04350</span><span class="p">.</span><span class="n">height</span> <span class="o">==</span> <span class="mi">44</span>   <span class="p">(</span><span class="n">active</span><span class="p">)</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">Make</span> <span class="n">a</span> <span class="n">symbolic</span> <span class="n">breakpoint</span> <span class="n">at</span> <span class="n">UIViewAlertForUnsatisfiableConstraints</span> <span class="n">to</span> <span class="n">catch</span> <span class="n">this</span> <span class="k">in</span> <span class="n">the</span> <span class="n">debugger</span><span class="p">.</span>
</span><span class='line'><span class="n">The</span> <span class="n">methods</span> <span class="k">in</span> <span class="n">the</span> <span class="n">UIConstraintBasedLayoutDebugging</span> <span class="n">category</span> <span class="n">on</span> <span class="n">UIView</span> <span class="n">listed</span> <span class="k">in</span> <span class="o">&lt;</span><span class="n">UIKit</span><span class="o">/</span><span class="n">UIView</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span> <span class="n">may</span> <span class="n">also</span> <span class="n">be</span> <span class="n">helpful</span><span class="p">.</span>
</span><span class='line'><span class="mi">2017</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">09</span> <span class="mi">16</span><span class="o">:</span><span class="mi">46</span><span class="o">:</span><span class="mf">15.542896</span><span class="o">+</span><span class="mi">0900</span> <span class="n">FacebookManagerSample</span><span class="p">[</span><span class="mi">94864</span><span class="o">:</span><span class="mi">5445545</span><span class="p">]</span> <span class="p">[</span><span class="n">LayoutConstraints</span><span class="p">]</span> <span class="n">Unable</span> <span class="n">to</span> <span class="n">simultaneously</span> <span class="n">satisfy</span> <span class="n">constraints</span><span class="p">.</span>
</span><span class='line'>  <span class="n">Probably</span> <span class="n">at</span> <span class="n">least</span> <span class="n">one</span> <span class="n">of</span> <span class="n">the</span> <span class="n">constraints</span> <span class="k">in</span> <span class="n">the</span> <span class="n">following</span> <span class="n">list</span> <span class="n">is</span> <span class="n">one</span> <span class="n">you</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">want</span><span class="p">.</span>
</span><span class='line'>  <span class="n">Try</span> <span class="nl">this:</span>
</span><span class='line'>      <span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="n">look</span> <span class="n">at</span> <span class="n">each</span> <span class="n">constraint</span> <span class="n">and</span> <span class="n">try</span> <span class="n">to</span> <span class="n">figure</span> <span class="n">out</span> <span class="n">which</span> <span class="n">you</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">expect</span><span class="p">;</span>
</span><span class='line'>      <span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="n">find</span> <span class="n">the</span> <span class="n">code</span> <span class="n">that</span> <span class="n">added</span> <span class="n">the</span> <span class="n">unwanted</span> <span class="n">constraint</span> <span class="n">or</span> <span class="n">constraints</span> <span class="n">and</span> <span class="n">fix</span> <span class="n">it</span><span class="p">.</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x610000097020 &#39;UISV-canvas-connection&#39; UIStackView:0x7ffc6de08680.top == UIView:0x7ffc6df0b170.top   (active)&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x610000097980 &#39;UISV-canvas-connection&#39; V:[UIView:0x7ffc6dc04350]-(0)-|   (active, names: &#39;|&#39;:UIStackView:0x7ffc6de08680 )&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x6080000944b0 &#39;UISV-hiding&#39; UIStackView:0x7ffc6de08680.height == 0   (active)&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x6100000979d0 &#39;UISV-spacing&#39; V:[UIView:0x7ffc6df0b170]-(16)-[UIView:0x7ffc6dc088c0]   (active)&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s">&quot;&lt;NSLayoutConstraint:0x610000097a20 &#39;UISV-spacing&#39; V:[UIView:0x7ffc6dc088c0]-(16)-[UIView:0x7ffc6dc04350]   (active)&gt;&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">Will</span> <span class="n">attempt</span> <span class="n">to</span> <span class="n">recover</span> <span class="n">by</span> <span class="n">breaking</span> <span class="n">constraint</span>
</span><span class='line'><span class="o">&lt;</span><span class="nl">NSLayoutConstraint:</span><span class="mh">0x610000097a20</span> <span class="err">&#39;</span><span class="n">UISV</span><span class="o">-</span><span class="n">spacing</span><span class="err">&#39;</span> <span class="nl">V:</span><span class="p">[</span><span class="nl">UIView:</span><span class="mh">0x7ffc6dc088c0</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span><span class="o">-</span><span class="p">[</span><span class="nl">UIView:</span><span class="mh">0x7ffc6dc04350</span><span class="p">]</span>   <span class="p">(</span><span class="n">active</span><span class="p">)</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">Make</span> <span class="n">a</span> <span class="n">symbolic</span> <span class="n">breakpoint</span> <span class="n">at</span> <span class="n">UIViewAlertForUnsatisfiableConstraints</span> <span class="n">to</span> <span class="n">catch</span> <span class="n">this</span> <span class="k">in</span> <span class="n">the</span> <span class="n">debugger</span><span class="p">.</span>
</span><span class='line'><span class="n">The</span> <span class="n">methods</span> <span class="k">in</span> <span class="n">the</span> <span class="n">UIConstraintBasedLayoutDebugging</span> <span class="n">category</span> <span class="n">on</span> <span class="n">UIView</span> <span class="n">listed</span> <span class="k">in</span> <span class="o">&lt;</span><span class="n">UIKit</span><span class="o">/</span><span class="n">UIView</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span> <span class="n">may</span> <span class="n">also</span> <span class="n">be</span> <span class="n">helpful</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>これには2つの要因があります。</p>

<ol>
<li>子要素の <code>UIView</code> の <code>height</code> が <code>44pt</code> 固定にも関わらず、 <code>UIStackView</code> が非表示 ( = <code>height</code> が <code>0pt</code> ) になる</li>
<li><code>UIStackView</code> 内の子要素同士は <code>16pt</code> ごとに間隔を空ける指定をしているにも関わらず、 <code>UIStackView</code> が非表示 ( = <code>height</code> が <code>0pt</code> )になる</li>
</ol>


<p>上記2要素を解決すれば <code>Constraint</code> エラーを解消することができます。</p>

<h3>iOS10でConstraintエラーを解消する方法</h3>

<p>では、具体的に <code>Constraint</code> エラーを解消してみましょう。</p>

<h4>1つ目の原因の解決方法</h4>

<p>先程上げた要因の1点目は <code>Storyboard</code> 上で解決可能です。</p>

<p><img src="http://grandbig.github.io/images/ios11_stackview_2.png" alt="Storyboard上でConstraintの指定を変更する" /></p>

<p>親の <code>UIStackView</code> が非表示になることで、子要素の <code>UIView</code> が <code>0pt</code> になる可能性があるので、<code>Constraint</code> の <code>Priority</code> を <code>999</code> 以下にします。<br/>
これは、デフォルトの <code>Priority</code> が <code>1000</code> だからです。</p>

<h4>2つ目の原因の解決方法</h4>

<p>続いて要点の2点目の解決方法です。<br/>
<code>Child Stack View</code> が非表示になることで、3つの子要素の <code>UIView</code> も強制的に非表示になってしまいます。<br/>
しかし、 <code>Child Stack View</code> は3つの子要素である <code>UIView</code> に <code>16pt</code> の間隔を空けるように指定しています。<br/>
これを解消するためには、親要素が非表示になるときに合わせて子要素も非表示にする必要があります。<br/>
※あくまでも <code>UIStackView</code> 内に <code>UIStackView</code> を持つ場合に発生し、 <code>UIStackView</code> 単体の場合は発生しません。</p>

<p>具体的に実装した解決方法は以下です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: - IBOutlets</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">private</span> <span class="n">var</span> <span class="nl">stackView:</span> <span class="n">UIStackView</span><span class="o">!</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">private</span> <span class="n">var</span> <span class="nl">childrenView1:</span> <span class="n">UIView</span><span class="o">!</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">private</span> <span class="n">var</span> <span class="nl">childrenView2:</span> <span class="n">UIView</span><span class="o">!</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">private</span> <span class="n">var</span> <span class="nl">childrenView3:</span> <span class="n">UIView</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: - Properties</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="n">isHidden</span> <span class="o">=</span> <span class="n">false</span>  <span class="c1">// 現在の表示・非表示の状態を保持</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>        <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">didReceiveMemoryWarning</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">didReceiveMemoryWarning</span><span class="p">()</span>
</span><span class='line'>        <span class="c1">// Dispose of any resources that can be recreated.</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: - IBActions</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">private</span> <span class="n">func</span> <span class="n">onTappedButton</span><span class="p">(</span><span class="n">_</span> <span class="nl">sender:</span> <span class="n">UIButton</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ボタンタップ時に表示・非表示の切り替え</span>
</span><span class='line'>        <span class="n">showOrHideSubView</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">ViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">showOrHideSubView</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">isHidden</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 表示する場合</span>
</span><span class='line'>            <span class="c1">// 自身を表示</span>
</span><span class='line'>            <span class="n">stackView</span><span class="p">.</span><span class="n">isHidden</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>            <span class="c1">// 子要素を表示</span>
</span><span class='line'>            <span class="n">stackView</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">forEach</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">$0</span><span class="p">.</span><span class="n">isHidden</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="c1">// 表示・非表示状態の更新</span>
</span><span class='line'>            <span class="n">isHidden</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// 非表示にする場合</span>
</span><span class='line'>        <span class="c1">// 自身を非表示</span>
</span><span class='line'>        <span class="n">stackView</span><span class="p">.</span><span class="n">isHidden</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="c1">// 子要素を非表示</span>
</span><span class='line'>        <span class="n">stackView</span><span class="p">.</span><span class="n">subviews</span><span class="p">.</span><span class="n">forEach</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">$0</span><span class="p">.</span><span class="n">isHidden</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// 表示・非表示状態の更新</span>
</span><span class='line'>        <span class="n">isHidden</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記2点の改修を加えた上でiOS10で実行すると <code>Constraint</code> エラーが発生していないことがわかると思います。</p>

<h3>iOS11でどうなるか&hellip;</h3>

<p>ではでは、iOS11ではどうなっているのかというと&hellip;<br/>
なんとiOS10で必要だった2つの手段を取らずとも自動的に <code>Constraint</code> エラーが解決されています！！<br/>
いちいち <code>@999</code> つけたり、 <code>subViews</code> を <code>hidden</code> にしなくて良いのは手間がかからず非常に助かりますね！</p>

<h3>まとめ</h3>

<p>如何でしたでしょうか？<br/>
少々短めな紹介記事になってしまいましたが、地味ながら開発者が喜ぶ改善がされているiOSは改めて素晴らしいですね。<br/>
これからもバシバシ <code>UIStackView</code> を利用する気になってきますね！<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook APIで試すCodable]]></title>
    <link href="http://grandbig.github.io/blog/2017/12/03/facebook-and-codable/"/>
    <updated>2017-12-03T15:30:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/12/03/facebook-and-codable</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>こちらは <a href="https://qiita.com/advent-calendar/2017/swift2">Swift その2 Advent Calendar 2017</a> の3日目の記事です。<br/>
今年の後半戦から久々に業務にてiOSアプリを開発することが決まっていたため、実に1年半ぶりにSwiftを扱うことになりました。</p>

<p>Swift4を積極的に利用していた際に、便利と名高い <code>Codable</code> に触れる機会があったため、<br/>
本記事では実際に使ってみた <code>Codable</code> の例を書きたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Codableとは</h3>

<p>これまで <code>JSON</code> をパースするためには、<br/>
<code>JSONSerialization</code> や <code>SwiftyJSON</code> などのOSSライブラリを利用して値を取り出す形で書いていたことと思います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// これまでの例</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="n">SwiftyJSON</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// レスポンスデータ用の構造体</span>
</span><span class='line'><span class="k">struct</span> <span class="n">Restaurant</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// データ取得クラス</span>
</span><span class='line'><span class="n">class</span> <span class="n">HogeHoge</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchData</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// 省略 (API等でデータを取得)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">let</span> <span class="n">json</span> <span class="o">=</span> <span class="n">try</span> <span class="n">JSON</span><span class="p">(</span><span class="nl">data:</span> <span class="n">response</span><span class="p">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// APIから返却されたjsonデータが以下だったとします。</span>
</span><span class='line'>          <span class="c1">// {</span>
</span><span class='line'>          <span class="c1">//    &quot;id&quot;: &quot;1&quot;</span>
</span><span class='line'>          <span class="c1">//    &quot;name&quot;: &quot;hogehoge&quot;</span>
</span><span class='line'>          <span class="c1">//    &quot;latitude&quot;: &quot;37&quot;</span>
</span><span class='line'>          <span class="c1">//    &quot;longitude&quot;: &quot;135&quot;</span>
</span><span class='line'>          <span class="c1">// }</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">let</span> <span class="kt">id</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;id&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;ID不明&quot;</span>
</span><span class='line'>          <span class="n">let</span> <span class="n">name</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;name&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;ショップ名不明&quot;</span>
</span><span class='line'>          <span class="n">let</span> <span class="n">latitude</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;latitude&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;0&quot;</span>
</span><span class='line'>          <span class="n">let</span> <span class="n">longitude</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;longitude&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;0&quot;</span>
</span><span class='line'>          <span class="n">let</span> <span class="n">restaurant</span> <span class="o">=</span> <span class="n">Restaurant</span><span class="p">(</span><span class="kt">id</span><span class="o">:</span> <span class="kt">id</span><span class="p">,</span> <span class="nl">name:</span> <span class="n">name</span><span class="p">,</span> <span class="nl">latitude:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">longitude</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>          <span class="p">...</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のように、 <code>SwiftyJSON</code> を利用して <code>JSON</code> 化したオブジェクトから、<br/>
<code>let id = json["id"].string</code> や <code>let name = json["name"].string</code> のように返却レスポンスである <code>Restaurant</code> に自身でマッピングする必要がありました。
これがなんと、 <code>Codable</code> を利用することで、毎回のように書いていたマッピング処理が簡素化されるようです。</p>

<h3>実際の利用例</h3>

<p>今回はFacebookログインによる認証処理が機能の1つとして必要でした。<br/>
また、Facebookの <code>Graph API</code> を叩いて幾つかのプロフィール情報を取得するのですが、<br/>
その中で <code>gender</code> の項目のみ「Facebookが返却する値」と「こちらのシステムが担保する <code>gender</code> の値」が異なっていました。</p>

<p>形式の違いは以下の通りです。<br/>
まずは、Facebookが返却するgenderの値です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">男性の場合</span> <span class="err">→</span> <span class="s">&quot;male&quot;</span>
</span><span class='line'><span class="err">女性の場合</span> <span class="err">→</span> <span class="s">&quot;female&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて必要だった形式です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">男性の場合</span> <span class="err">→</span> <span class="mi">0</span>
</span><span class='line'><span class="err">女性の場合</span> <span class="err">→</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>もちろん上記違いがあったとしても <code>Codable</code> は利用可能ですので、実際に書いてみました。<br/>
※ Facebookログインを利用するための前準備は <a href="http://grandbig.github.io/blog/2016/05/14/facebook-login-for-swift/">SwiftでFacebookログインを始めよう！</a> を参考にしてください。</p>

<h4>システム固有の性別のEnumの定義</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 性別のEnum定義</span>
</span><span class='line'><span class="n">public</span> <span class="k">enum</span> <span class="nl">Gender:</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">male</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">female</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Codableに準拠する構造体の定義</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Facebookから取得するユーザ情報の構造体 (Codableに準拠)</span>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">FacebookUserProfile:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>     <span class="c1">// FacebookID</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">email:</span> <span class="n">String</span><span class="o">?</span> <span class="c1">// Facebookに登録されているメールアドレス</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">gender:</span> <span class="n">Gender</span> <span class="c1">// Facebookに登録されている性別</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// APIとアプリ間でありがちなプロパティ名の違いをココで吸収できる</span>
</span><span class='line'>    <span class="c1">// 今回は全て同じなので問題なし</span>
</span><span class='line'>    <span class="n">private</span> <span class="k">enum</span> <span class="nl">CodingKeys:</span> <span class="n">String</span><span class="p">,</span> <span class="n">CodingKey</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="kt">id</span> <span class="o">=</span> <span class="s">&quot;id&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">email</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">gender</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// デコード処理をカスタマイズ</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">init</span><span class="p">(</span><span class="n">from</span> <span class="nl">decoder:</span> <span class="n">Decoder</span><span class="p">)</span> <span class="n">throws</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">values</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">container</span><span class="p">(</span><span class="nl">keyedBy:</span> <span class="n">CodingKeys</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="kt">id</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="kt">id</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decodeIfPresent</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// APIから取得した性別の値をこちらのシステムの形式に変更する</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">genderString</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">genderString</span> <span class="o">==</span> <span class="s">&quot;male&quot;</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">gender</span> <span class="o">=</span> <span class="p">.</span><span class="n">male</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">gender</span> <span class="o">=</span> <span class="p">.</span><span class="n">female</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// エンコード処理をカスタマイズ</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">encode</span><span class="p">(</span><span class="n">to</span> <span class="nl">encoder:</span> <span class="n">Encoder</span><span class="p">)</span> <span class="n">throws</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">container</span> <span class="o">=</span> <span class="n">encoder</span><span class="p">.</span><span class="n">container</span><span class="p">(</span><span class="nl">keyedBy:</span> <span class="n">CodingKeys</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>        <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="kt">id</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="kt">id</span><span class="p">)</span>
</span><span class='line'>        <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encodeIfPresent</span><span class="p">(</span><span class="n">email</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// システム固有の形式をAPIから取得した形式に戻す</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">gender</span> <span class="o">==</span> <span class="p">.</span><span class="n">male</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;male&quot;</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;female&quot;</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>JSONDecoderの拡張定義</h4>

<p>少々困ったのが、Facebookの <code>Graph API</code> から返却される <code>response</code> を <code>data</code> 型に変換するメソッドが予め用意されていないことでした。<br/>
毎回、 <code>JSONSerialization</code> を利用する処理を1行加えるのも手間なので、以下のように拡張メソッドを用意することにしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">extension</span> <span class="n">JSONDecoder</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Any型をdecode可能なメソッドを追加</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">decode</span><span class="o">&lt;</span><span class="nl">T:</span> <span class="n">Decodable</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">type:</span> <span class="n">T</span><span class="p">.</span><span class="n">Type</span><span class="p">,</span>
</span><span class='line'>                                     <span class="n">withJSONObject</span> <span class="nl">object:</span> <span class="n">Any</span><span class="p">,</span>
</span><span class='line'>                                     <span class="n">options</span> <span class="nl">opt:</span> <span class="n">JSONSerialization</span><span class="p">.</span><span class="n">WritingOptions</span> <span class="o">=</span> <span class="p">[])</span> <span class="n">throws</span> <span class="o">-&gt;</span> <span class="n">T</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">data</span> <span class="o">=</span> <span class="n">try</span> <span class="n">JSONSerialization</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">withJSONObject:</span> <span class="n">object</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">try</span> <span class="n">decode</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Facebook Graph APIによるプロフィール情報取得処理</h4>

<p>準備は整ったので、実際に <code>Graph API</code> を叩く部分の処理を実装します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">FacebookCore</span>
</span><span class='line'><span class="n">import</span> <span class="n">FacebookLogin</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="n">final</span> <span class="n">class</span> <span class="n">FacebookManager</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">static</span> <span class="n">let</span> <span class="n">shared</span> <span class="o">=</span> <span class="n">FacebookManager</span><span class="p">()</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="nl">FacebookError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">cancel</span>       <span class="c1">// Facebook認証をキャンセルした場合</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">apiError</span>     <span class="c1">// APIからエラーが返却された場合</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">decodeError</span>  <span class="c1">// デコード処理に失敗した場合</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">enum</span> <span class="nl">FacebookUserField:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="kt">id</span> <span class="o">=</span> <span class="s">&quot;id&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">email</span> <span class="o">=</span> <span class="s">&quot;email&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">gender</span> <span class="o">=</span> <span class="s">&quot;gender&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// Facebookからユーザのプロフィール情報を取得する</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="c1">/// - Parameter facebookUserFields: 取得するプロフィール情報の指定</span>
</span><span class='line'>    <span class="c1">/// - Returns: ユーザのプロフィール情報</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">getUserProfile</span><span class="p">(</span><span class="nl">facebookUserFields:</span> <span class="p">[</span><span class="n">FacebookUserField</span><span class="p">]</span> <span class="o">=</span> <span class="p">[.</span><span class="kt">id</span><span class="p">,</span> <span class="p">.</span><span class="n">email</span><span class="p">,</span> <span class="p">.</span><span class="n">gender</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">FacebookUserProfile</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">promise</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">FacebookUserProfile</span><span class="o">&gt;</span> <span class="p">{</span> <span class="n">fulfill</span><span class="p">,</span> <span class="n">reject</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">facebookUserFields</span><span class="p">.</span><span class="n">map</span> <span class="p">{</span> <span class="n">$0</span><span class="p">.</span><span class="n">rawValue</span> <span class="p">}</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">field</span> <span class="o">=</span> <span class="n">fields</span><span class="p">.</span><span class="n">joined</span><span class="p">(</span><span class="nl">separator:</span> <span class="s">&quot;,&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">GraphRequest</span><span class="p">(</span><span class="nl">graphPath:</span> <span class="s">&quot;me&quot;</span><span class="p">,</span>
</span><span class='line'>                         <span class="nl">parameters:</span> <span class="p">[</span><span class="s">&quot;fields&quot;</span><span class="o">:</span> <span class="n">field</span><span class="p">],</span>
</span><span class='line'>                         <span class="nl">accessToken:</span> <span class="n">AccessToken</span><span class="p">.</span><span class="n">current</span><span class="p">,</span>
</span><span class='line'>                         <span class="nl">httpMethod:</span> <span class="p">.</span><span class="n">GET</span><span class="p">,</span>
</span><span class='line'>                         <span class="nl">apiVersion:</span> <span class="p">.</span><span class="n">defaultVersion</span><span class="p">).</span><span class="n">start</span> <span class="p">{</span> <span class="n">response</span><span class="p">,</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>
</span><span class='line'>                            <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>                            <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">let</span> <span class="n">response</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                                    <span class="n">let</span> <span class="n">decoder</span> <span class="o">=</span> <span class="n">JSONDecoder</span><span class="p">()</span>
</span><span class='line'>                                    <span class="n">let</span> <span class="n">profile</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">FacebookUserProfile</span><span class="p">.</span><span class="n">self</span><span class="p">,</span>
</span><span class='line'>                                                                     <span class="nl">withJSONObject:</span> <span class="n">response</span><span class="p">.</span><span class="n">dictionaryValue</span> <span class="n">as</span> <span class="n">Any</span><span class="p">)</span>
</span><span class='line'>                                    <span class="n">_</span> <span class="o">=</span> <span class="n">fulfill</span><span class="p">(</span><span class="n">profile</span><span class="p">)</span>
</span><span class='line'>                                <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                                    <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">FacebookError</span><span class="p">.</span><span class="n">decodeError</span><span class="p">)</span>
</span><span class='line'>                                <span class="p">}</span>
</span><span class='line'>                            <span class="k">case</span> <span class="p">.</span><span class="n">failed</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                <span class="n">print</span><span class="p">(</span><span class="n">error</span><span class="p">.</span><span class="n">localizedDescription</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">FacebookError</span><span class="p">.</span><span class="n">apiError</span><span class="p">)</span>
</span><span class='line'>                            <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記の通り、 <code>let profile = try decoder.decode(...)</code> だけで済んでいますね。<br/>
今回は1つのメソッドしか書いていませんが同様のレスポンスを持つ複数メソッドを定義する必要がある場合などにより効力を発揮しそうな気がします。</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
<code>Codable</code> は今後更なる進化も予定されていると聞きますし、楽しみな機能の1つですね。<br/>
筆者も引き続き積極的にSwift4の機能を利用していきたいと思います。</p>

<p>最後にソースコード全体を載せておきます。<br/>
(説明上、関係のないところは割愛していたので&hellip;)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">PromiseKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">FacebookCore</span>
</span><span class='line'><span class="n">import</span> <span class="n">FacebookLogin</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">enum</span> <span class="nl">Gender:</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">male</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">female</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">struct</span> <span class="nl">FacebookUserProfile:</span> <span class="n">Codable</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">email:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">gender:</span> <span class="n">Gender</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="k">enum</span> <span class="nl">CodingKeys:</span> <span class="n">String</span><span class="p">,</span> <span class="n">CodingKey</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="kt">id</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">email</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">gender</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">init</span><span class="p">(</span><span class="n">from</span> <span class="nl">decoder:</span> <span class="n">Decoder</span><span class="p">)</span> <span class="n">throws</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">values</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">container</span><span class="p">(</span><span class="nl">keyedBy:</span> <span class="n">CodingKeys</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="kt">id</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="kt">id</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decodeIfPresent</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">genderString</span> <span class="o">=</span> <span class="n">try</span> <span class="n">values</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">genderString</span> <span class="o">==</span> <span class="s">&quot;male&quot;</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">gender</span> <span class="o">=</span> <span class="p">.</span><span class="n">male</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">gender</span> <span class="o">=</span> <span class="p">.</span><span class="n">female</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">encode</span><span class="p">(</span><span class="n">to</span> <span class="nl">encoder:</span> <span class="n">Encoder</span><span class="p">)</span> <span class="n">throws</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">container</span> <span class="o">=</span> <span class="n">encoder</span><span class="p">.</span><span class="n">container</span><span class="p">(</span><span class="nl">keyedBy:</span> <span class="n">CodingKeys</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>        <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="kt">id</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="kt">id</span><span class="p">)</span>
</span><span class='line'>        <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encodeIfPresent</span><span class="p">(</span><span class="n">email</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">email</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">gender</span> <span class="o">==</span> <span class="p">.</span><span class="n">male</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;male&quot;</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">try</span> <span class="n">container</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;female&quot;</span><span class="p">,</span> <span class="nl">forKey:</span> <span class="p">.</span><span class="n">gender</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="n">final</span> <span class="n">class</span> <span class="n">FacebookManager</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">static</span> <span class="n">let</span> <span class="n">shared</span> <span class="o">=</span> <span class="n">FacebookManager</span><span class="p">()</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="nl">FacebookError:</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">cancel</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">apiError</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">decodeError</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">enum</span> <span class="nl">FacebookPermission:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">email</span> <span class="o">=</span> <span class="s">&quot;email&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">publicProfile</span> <span class="o">=</span> <span class="s">&quot;public_profile&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="k">enum</span> <span class="nl">FacebookUserField:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="kt">id</span> <span class="o">=</span> <span class="s">&quot;id&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">email</span> <span class="o">=</span> <span class="s">&quot;email&quot;</span>
</span><span class='line'>        <span class="k">case</span> <span class="n">gender</span> <span class="o">=</span> <span class="s">&quot;gender&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="n">_</span> <span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="nl">didFinishLaunchingWithOptions:</span> <span class="p">[</span><span class="nl">UIApplicationLaunchOptionsKey:</span> <span class="n">Any</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">SDKApplicationDelegate</span><span class="p">.</span><span class="n">shared</span><span class="p">.</span><span class="n">application</span><span class="p">(</span><span class="n">application</span><span class="p">,</span> <span class="nl">didFinishLaunchingWithOptions:</span> <span class="n">didFinishLaunchingWithOptions</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="n">_</span> <span class="nl">app:</span> <span class="n">UIApplication</span><span class="p">,</span>
</span><span class='line'>                            <span class="n">open</span> <span class="nl">url:</span> <span class="n">URL</span><span class="p">,</span>
</span><span class='line'>                            <span class="nl">options:</span> <span class="p">[</span><span class="nl">UIApplicationOpenURLOptionsKey:</span> <span class="n">Any</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="o">:</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">SDKApplicationDelegate</span><span class="p">.</span><span class="n">shared</span><span class="p">.</span><span class="n">application</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="nl">open:</span> <span class="n">url</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">isLoggedIn</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">AccessToken</span><span class="p">.</span><span class="n">current</span> <span class="o">!=</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">login</span><span class="p">(</span><span class="n">_</span> <span class="nl">viewController:</span> <span class="n">UIViewController</span><span class="p">,</span>
</span><span class='line'>                      <span class="nl">permissions:</span> <span class="p">[</span><span class="n">FacebookPermission</span><span class="p">]</span> <span class="o">=</span> <span class="p">[.</span><span class="n">email</span><span class="p">,</span> <span class="p">.</span><span class="n">publicProfile</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">isLoggedIn</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">logout</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">promise</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="p">{</span> <span class="n">fulfill</span><span class="p">,</span> <span class="n">reject</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">readPermissions</span> <span class="o">=</span> <span class="p">[</span><span class="n">ReadPermission</span><span class="p">]()</span>
</span><span class='line'>            <span class="n">permissions</span><span class="p">.</span><span class="n">forEach</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">readPermissions</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">ReadPermission</span><span class="p">.</span><span class="n">custom</span><span class="p">(</span><span class="n">$0</span><span class="p">.</span><span class="n">rawValue</span><span class="p">))</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">LoginManager</span><span class="p">().</span><span class="n">logIn</span><span class="p">(</span><span class="nl">readPermissions:</span> <span class="n">readPermissions</span><span class="p">,</span>
</span><span class='line'>                                 <span class="nl">viewController:</span> <span class="n">viewController</span><span class="p">,</span>
</span><span class='line'>                                 <span class="nl">completion:</span> <span class="p">{</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>
</span><span class='line'>                                    <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>                                    <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">_</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">let</span> <span class="n">accessToken</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                        <span class="n">_</span> <span class="o">=</span> <span class="n">fulfill</span><span class="p">(</span><span class="n">accessToken</span><span class="p">.</span><span class="n">authenticationToken</span><span class="p">)</span>
</span><span class='line'>                                    <span class="k">case</span> <span class="p">.</span><span class="nl">cancelled:</span>
</span><span class='line'>                                        <span class="n">let</span> <span class="n">error</span> <span class="o">=</span> <span class="n">FacebookError</span><span class="p">.</span><span class="n">cancel</span>
</span><span class='line'>                                        <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>                                    <span class="k">case</span> <span class="p">.</span><span class="n">failed</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                        <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>                                    <span class="p">}</span>
</span><span class='line'>            <span class="p">})</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">logout</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">LoginManager</span><span class="p">().</span><span class="n">logOut</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// Facebookからユーザのプロフィール情報を取得する</span>
</span><span class='line'>    <span class="c1">///</span>
</span><span class='line'>    <span class="c1">/// - Parameter facebookUserFields: 取得するプロフィール情報の指定</span>
</span><span class='line'>    <span class="c1">/// - Returns: ユーザのプロフィール情報</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">getUserProfile</span><span class="p">(</span><span class="nl">facebookUserFields:</span> <span class="p">[</span><span class="n">FacebookUserField</span><span class="p">]</span> <span class="o">=</span> <span class="p">[.</span><span class="kt">id</span><span class="p">,</span> <span class="p">.</span><span class="n">email</span><span class="p">,</span> <span class="p">.</span><span class="n">gender</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">FacebookUserProfile</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">promise</span> <span class="o">=</span> <span class="n">Promise</span><span class="o">&lt;</span><span class="n">FacebookUserProfile</span><span class="o">&gt;</span> <span class="p">{</span> <span class="n">fulfill</span><span class="p">,</span> <span class="n">reject</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">fields</span> <span class="o">=</span> <span class="n">facebookUserFields</span><span class="p">.</span><span class="n">map</span> <span class="p">{</span> <span class="n">$0</span><span class="p">.</span><span class="n">rawValue</span> <span class="p">}</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">field</span> <span class="o">=</span> <span class="n">fields</span><span class="p">.</span><span class="n">joined</span><span class="p">(</span><span class="nl">separator:</span> <span class="s">&quot;,&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">GraphRequest</span><span class="p">(</span><span class="nl">graphPath:</span> <span class="s">&quot;me&quot;</span><span class="p">,</span>
</span><span class='line'>                         <span class="nl">parameters:</span> <span class="p">[</span><span class="s">&quot;fields&quot;</span><span class="o">:</span> <span class="n">field</span><span class="p">],</span>
</span><span class='line'>                         <span class="nl">accessToken:</span> <span class="n">AccessToken</span><span class="p">.</span><span class="n">current</span><span class="p">,</span>
</span><span class='line'>                         <span class="nl">httpMethod:</span> <span class="p">.</span><span class="n">GET</span><span class="p">,</span>
</span><span class='line'>                         <span class="nl">apiVersion:</span> <span class="p">.</span><span class="n">defaultVersion</span><span class="p">).</span><span class="n">start</span> <span class="p">{</span> <span class="n">response</span><span class="p">,</span> <span class="n">result</span> <span class="k">in</span>
</span><span class='line'>
</span><span class='line'>                            <span class="k">switch</span> <span class="n">result</span> <span class="p">{</span>
</span><span class='line'>                            <span class="k">case</span> <span class="p">.</span><span class="n">success</span><span class="p">(</span><span class="n">let</span> <span class="n">response</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                                    <span class="n">let</span> <span class="n">decoder</span> <span class="o">=</span> <span class="n">JSONDecoder</span><span class="p">()</span>
</span><span class='line'>                                    <span class="n">let</span> <span class="n">profile</span> <span class="o">=</span> <span class="n">try</span> <span class="n">decoder</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">FacebookUserProfile</span><span class="p">.</span><span class="n">self</span><span class="p">,</span>
</span><span class='line'>                                                                     <span class="nl">withJSONObject:</span> <span class="n">response</span><span class="p">.</span><span class="n">dictionaryValue</span> <span class="n">as</span> <span class="n">Any</span><span class="p">)</span>
</span><span class='line'>                                    <span class="n">_</span> <span class="o">=</span> <span class="n">fulfill</span><span class="p">(</span><span class="n">profile</span><span class="p">)</span>
</span><span class='line'>                                <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                                    <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">FacebookError</span><span class="p">.</span><span class="n">decodeError</span><span class="p">)</span>
</span><span class='line'>                                <span class="p">}</span>
</span><span class='line'>                            <span class="k">case</span> <span class="p">.</span><span class="n">failed</span><span class="p">(</span><span class="n">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>                                <span class="n">print</span><span class="p">(</span><span class="n">error</span><span class="p">.</span><span class="n">localizedDescription</span><span class="p">)</span>
</span><span class='line'>                                <span class="n">_</span> <span class="o">=</span> <span class="n">reject</span><span class="p">(</span><span class="n">FacebookError</span><span class="p">.</span><span class="n">apiError</span><span class="p">)</span>
</span><span class='line'>                            <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">promise</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">JSONDecoder</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Any型をdecode可能なメソッドを追加</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">func</span> <span class="n">decode</span><span class="o">&lt;</span><span class="nl">T:</span> <span class="n">Decodable</span><span class="o">&gt;</span><span class="p">(</span><span class="n">_</span> <span class="nl">type:</span> <span class="n">T</span><span class="p">.</span><span class="n">Type</span><span class="p">,</span>
</span><span class='line'>                                     <span class="n">withJSONObject</span> <span class="nl">object:</span> <span class="n">Any</span><span class="p">,</span>
</span><span class='line'>                                     <span class="n">options</span> <span class="nl">opt:</span> <span class="n">JSONSerialization</span><span class="p">.</span><span class="n">WritingOptions</span> <span class="o">=</span> <span class="p">[])</span> <span class="n">throws</span> <span class="o">-&gt;</span> <span class="n">T</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">data</span> <span class="o">=</span> <span class="n">try</span> <span class="n">JSONSerialization</span><span class="p">.</span><span class="n">data</span><span class="p">(</span><span class="nl">withJSONObject:</span> <span class="n">object</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">opt</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">try</span> <span class="n">decode</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">from:</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[今更だけど試してみようUniversalLink]]></title>
    <link href="http://grandbig.github.io/blog/2017/12/02/universallink/"/>
    <updated>2017-12-02T18:16:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/12/02/universallink</id>
    <content type="html"><![CDATA[<h3>UniversalLinkとは</h3>

<p>UniversalLinkとはiOS9と共に登場したカスタムURLスキームに代わるアプリ起動支援の仕組みです。<br/>
例えばどんなことができるかというと&hellip;</p>

<p>アプリの宣伝用のLPへのURLリンクをタップした時にアプリがインストール済みであれば、<br/>
Safariを開かずにアプリを起動する</p>

<p>といったことができます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>どういったシーンで利用できるかというと&hellip;</p>

<ul>
<li>既にインストール済みのアプリであれば、宣伝用ページではなくアプリに飛ばしたい</li>
<li>会員登録時に仮メールを送信して、メール内リンクをタップしたらアプリを起動させたい</li>
<li>キャンペーン期間中のみ、特定のリンクを踏むと、アイテムやクーポンがもらえる</li>
</ul>


<p>などが考えられます。</p>

<h3>UniversalLinkの設定方法</h3>

<p>では、具体的にどうすればUniversalLinkが利用できるのでしょうか。</p>

<h4>Apple Developer Program上での設定</h4>

<p>Xcode上で設定すれば、Apple Developer Programから設定する必要はないとの記事も見かけましたが、<br/>
未確認であること、いずれにしても必須設定であることから説明します。</p>

<p>① Apple Developer Programにアクセス<br/>
② <code>Certificates, Identifiers &amp; Profiles</code> > <code>Identifier</code> > <code>App IDs</code> を選択<br/>
③ 利用する <code>App IDs</code> を編集して <code>Associated Domains</code> を <code>Enabled</code> に変更</p>

<p><img src="http://grandbig.github.io/images/universallink_1.png" alt="Apple Developer Program上の設定" /></p>

<p>たったこれだけの設定でOKです。</p>

<h4>Xcode上での設定</h4>

<p>ここからはアプリ側の設定を説明します。<br/>
と言っても難しいことはありません。</p>

<p>① 先程の手順で設定した <code>App IDs</code> が <code>Bundle Identifier</code> に設定されたプロジェクトを作成<br/>
② <code>Capabilities</code> > <code>Associated Domains</code> を <code>ON</code> に変更<br/>
③ <code>Domains</code> に飛ばしたいドメインを追加</p>

<p><img src="http://grandbig.github.io/images/universallink_2.png" alt="Xcode上の設定" /></p>

<p>このとき、 <code>Steps</code> の2行が <code>✔</code> 状態になっているかどうかも重要なポイントです。</p>

<p>たったのこれだけの設定でOKです。</p>

<h4>サーバサイドの設定</h4>

<p>最後にサーバサイドで必要な設定について説明します。<br/>
サーバサイドの環境や設定次第では少々苦労することがあるかもしれません。</p>

<p>① <code>apple-app-site-association</code> ファイルを作成する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;applinks&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;apps&quot;</span><span class="o">:</span> <span class="p">[],</span>
</span><span class='line'>      <span class="s2">&quot;details&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;appID&quot;</span><span class="o">:</span><span class="s2">&quot;xxxxxx.com.hogehoge.AppSample&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;paths&quot;</span><span class="o">:</span><span class="p">[</span> <span class="s2">&quot;*&quot;</span> <span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記で重要なポイントは&hellip;</p>

<ul>
<li><code>json</code> 形式だが、拡張子に <code>json</code> はつけない</li>
<li><code>apps</code> は必ず <code>[]</code> で中身は何も書かない</li>
<li><code>appIDs</code> は <strong><Team ID>.<Bundle Identifier></strong> の形式で書く</li>
<li><code>paths</code> はアクセス時に飛ばしたいパスの詳細設定を書く ( <code>"*"</code> は全て飛ばします )</li>
</ul>


<p>になります。<br/>
<code>Team ID</code> は <code>Apple Developer Program</code> 上から確認できます。</p>

<p><img src="http://grandbig.github.io/images/universallink_3.png" alt="Team IDの記載場所" /></p>

<p>② 作成したファイルを <code>https</code> サーバのドキュメントルートに配置する<br/>
<code>http</code> サーバの場合は <code>apple-app-site-association</code> をTLS証明書で署名する必要がありますが、今回は割愛します。</p>

<p>ドキュメントルートはWebサーバの設定ファイルから確認することができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Apacheの場合</span>
</span><span class='line'><span class="c1">// httpd.conf</span>
</span><span class='line'>
</span><span class='line'><span class="nx">DocumentRoot</span> <span class="o">/</span><span class="nx">home</span><span class="o">/</span><span class="nx">user</span><span class="o">/</span><span class="nx">www</span><span class="o">/</span><span class="nx">html</span>
</span></code></pre></td></tr></table></div></figure>


<p>例えば、上記のように設定されているのであれば、 <code>/home/user/www/html</code> 配下に <code>apple-app-site-association</code> ファイルを置きましょう。</p>

<p>③ Webサーバの設定を確認する<br/>
UniversalLinkの機能を利用するにはWebサーバが下記設定になっている必要があります。</p>

<ul>
<li><code>apple-app-site-association</code> ファイルにリダイレクトすることなくアクセスできる</li>
<li>署名していない場合は <code>Content-type</code> に <code>application/json</code> を指定する<br/>
署名している場合は <code>Content-type</code> を <code>application/pkcs7-mime</code> に設定する</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Apacheの場合</span>
</span><span class='line'><span class="c1">// httpd.conf</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="err">リダイレクトによるアクセス防止</span>
</span><span class='line'><span class="nx">RewriteRule</span> <span class="o">^</span><span class="err">/apple-app-site-association - [L]</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">Content</span><span class="o">-</span><span class="nx">type</span><span class="err">の設定</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">Directory</span> <span class="o">/</span><span class="nx">home</span><span class="o">/</span><span class="nx">user</span><span class="o">/</span><span class="nx">www</span><span class="o">/</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">Files</span> <span class="nx">apple</span><span class="o">-</span><span class="nx">app</span><span class="o">-</span><span class="nx">site</span><span class="o">-</span><span class="nx">association</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="nx">Header</span> <span class="nx">set</span> <span class="nx">Content</span><span class="o">-</span><span class="nx">type</span> <span class="s2">&quot;application/json&quot;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/Files&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/Directory&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここまでできれば完成です。</p>

<h3>設定完了後の動作確認方法</h3>

<p>さて、動作確認には以下2つの方法があります。</p>

<p>前提として、起動させたいアプリをインストールする必要があります。</p>

<p>【動作確認方法】<br/>
① Safariで直接URLにアクセス後、ページを上から下にスワイプすると、アプリの表示バーが出て来るので、それをタップする<br/>
② メール等に記載されたURLをタップする</p>

<p>①または②の方法でアプリが起動すればUniversalLinkの設定は完了したと言えます。<br/>
※Appleが提供している公式ツールもあるのですが、テスト環境用サーバだとアクセスを制限している可能性があるので、上記方法が良いかなと思っています。</p>

<h3>まとめ</h3>

<p>さて、iOS11が登場して1ヶ月ほど経過しているにも関わらず、今更ながらUniversalLinkの設定方法について書いてみました。<br/>
自分でいざ設定しようとすると案外ハマりどころがあったりするので、対応する機会がある方はぜひ試しに対応してみることをオススメします。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneXのステータスバーの高さ]]></title>
    <link href="http://grandbig.github.io/blog/2017/11/27/iphonex-statusbar/"/>
    <updated>2017-11-27T01:50:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/11/27/iphonex-statusbar</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今日は、今月発売されたiPhoneXについてのメモ書きです。<br/>
iPhoneXはホームボタンがなくなり、全画面がディスプレイになっています。<br/>
ということはステータスバーの高さも変わっているんじゃないかという話です。</p>

<!-- more -->


<h3>iPhoneXのステータスバーの高さ</h3>

<p>iPhoneXで画面キャプチャを取ってみると下図のようになります。</p>

<p><img src="http://grandbig.github.io/images/iphonex_statusbar_1.png" alt="iPhoneXの画面キャプチャ" /></p>

<p>これは確実にステータスバーの高さが変わっているに違いないということで調べてみました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="nl">statusBarHeight:</span> <span class="n">CGFloat</span> <span class="o">=</span> <span class="n">UIApplication</span><span class="p">.</span><span class="n">shared</span><span class="p">.</span><span class="n">statusBarFrame</span><span class="p">.</span><span class="n">height</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="s">&quot;statusBarの高さ: \(statusBarHeight)&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は以下の通りです。</p>

<p>iPhone8: 20.0pt<br/>
iPhoneX: 44.0pt</p>

<p>ステータスバーを扱う際にはご注意を&hellip;</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clean Swiftを勉強してみよう！(3)]]></title>
    <link href="http://grandbig.github.io/blog/2017/10/09/clean-swift-3/"/>
    <updated>2017-10-09T22:23:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/10/09/clean-swift-3</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p><a href="https://grandbig.github.io/blog/2017/10/08/clean-swift-2/">前回</a>に引き続き、<a href="https://clean-swift.com/">Clean Swift</a>の実例サンプルについて書いていきたいと思います。<br/>
今回は、下記要件をアプリに追加して見ていきます。</p>

<p><img src="http://grandbig.github.io/images/clean-swift-3_1.png" alt="アプリ追加要件" /></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>アプリの追加要件</h3>

<p>追加要件は以下です。</p>

<ul>
<li>マップのマーカをタップした後に表示されるInfoWindowをタップすると、レストラン情報ページに遷移する</li>
</ul>


<h3>フォルダ構成</h3>

<p>1つ画面を追加することになったため、今回のフォルダ構成としては下記になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">CleanFoodLogger</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Views</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">ViewController</span><span class="o">+</span><span class="nx">Alert</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Models</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="nx">Restaurant</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">CustomGMSMarker</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Workers</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">HotpepperWorker</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Services</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">HotpepperAPI</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Scenes</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="nx">MapView</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">View</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">CustomInfoWindow</span><span class="p">.</span><span class="nx">xib</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">│</span>    <span class="err">└──</span> <span class="nx">CustomInfoWindow</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">MapViewController</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">MapInteractor</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">MapModels</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">MapPresenter</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">MapRouter</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">└──</span> <span class="nx">MapWorker</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="nx">RestaurantInformation</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">RestaurantInformationViewController</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">RestaurantInformationInteractor</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">RestaurantInformationModels</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">RestaurantInformationPresenter</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">├──</span> <span class="nx">RestaurantInformationRouter</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">│</span>    <span class="err">└──</span> <span class="nx">RestaurantInformationWorker</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">AppDelegate</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Main</span><span class="p">.</span><span class="nx">storyboard</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Assets</span><span class="p">.</span><span class="nx">xcassets</span>
</span><span class='line'><span class="err">└──</span> <span class="nx">key</span><span class="p">.</span><span class="nx">plist</span>
</span></code></pre></td></tr></table></div></figure>


<h3>アプリの実装</h3>

<p>レストラン情報ページに遷移する機能に関しては下図のようなデータフローになります。</p>

<p><img src="http://grandbig.github.io/images/clean-swift_4.png" alt="データフロー" /></p>

<h4>RestaurantInformation</h4>

<p>今回追加したファイルはこのフォルダ配下のみになるので、ここのみ説明します。</p>

<h5>RestaurantInformationModels.swift</h5>

<p><code>Model</code> は非常にシンプルです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">enum</span> <span class="n">RestaurantInformation</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="n">Load</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Request</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Response</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">url:</span> <span class="n">String</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">ViewModel</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">url:</span> <span class="n">String</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>Load</code>

<ul>
<li>レストラン情報を読み込む際に利用します</li>
</ul>
</li>
</ul>


<h5>RestaurantInformationInteractor.swift</h5>

<p><code>ViewController</code> から受けた依頼を必要があれば <code>Worker</code> を経由して実行し、 <code>Presenter</code> にデータを渡します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">RestaurantInformationBusinessLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">loadRestaurantInformation</span><span class="p">(</span><span class="nl">request:</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">RestaurantInformationDataStore</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">urlString:</span> <span class="n">String</span> <span class="p">{</span> <span class="n">get</span> <span class="n">set</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">RestaurantInformationInteractor:</span> <span class="n">RestaurantInformationBusinessLogic</span><span class="p">,</span> <span class="n">RestaurantInformationDataStore</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">presenter:</span> <span class="n">RestaurantInformationPresentationLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">worker:</span> <span class="n">RestaurantInformationWorker</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">urlString:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Load restaurant information</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">loadRestaurantInformation</span><span class="p">(</span><span class="nl">request:</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">url:</span> <span class="n">urlString</span><span class="p">)</span>
</span><span class='line'>        <span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentRestaurantInformation</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>loadRestaurantInformation</code>

<ul>
<li>レストラン情報ページのURLが格納された <code>urlString</code> を <code>Presenter</code> に渡します</li>
</ul>
</li>
</ul>


<h5>RestaurantInformationPresenter.swift</h5>

<p><code>Interactor</code> から受け取ったデータを表示形式に変換して、<code>ViewController</code> に描画指示を出します。<br/>
今回は <code>Interactor</code> で保持した <code>urlString</code> を取得したかっただけなので、処理の出し分け等はなく、シンプルになっています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">RestaurantInformationPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentRestaurantInformation</span><span class="p">(</span><span class="nl">response:</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">RestaurantInformationPresenter:</span> <span class="n">RestaurantInformationPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">weak</span> <span class="n">var</span> <span class="nl">viewController:</span> <span class="n">RestaurantInformationDisplayLogic</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Present restaurant information</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentRestaurantInformation</span><span class="p">(</span><span class="nl">response:</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">viewModel</span> <span class="o">=</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">(</span><span class="nl">url:</span> <span class="n">response</span><span class="p">.</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>        <span class="n">viewController</span><span class="o">?</span><span class="p">.</span><span class="n">displayRestaurantInformation</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">viewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>RestaurantInformationViewController.swift</h5>

<p>そして <code>ViewController</code> について説明します。<br/>
下記で</p>

<ul>
<li><code>Interactor</code> に具体的な処理内容(表示ロジック)を問い合わせる</li>
<li><code>Presenter</code> からの指示を受けて、最適な <code>View</code> を描画する</li>
</ul>


<p>を実現しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">WebKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="nl">RestaurantInformationDisplayLogic:</span> <span class="n">class</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">displayRestaurantInformation</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">RestaurantInformationViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">RestaurantInformationDisplayLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">interactor:</span> <span class="n">RestaurantInformationBusinessLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">router:</span> <span class="p">(</span><span class="n">NSObjectProtocol</span> <span class="o">&amp;</span> <span class="n">RestaurantInformationRoutingLogic</span> <span class="o">&amp;</span> <span class="n">RestaurantInformationDataPassing</span><span class="p">)</span><span class="o">?</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">webView:</span> <span class="n">WKWebView</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Object lifecycle</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">init</span><span class="p">(</span><span class="n">nibName</span> <span class="nl">nibNameOrNil:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="n">bundle</span> <span class="nl">nibBundleOrNil:</span> <span class="n">Bundle</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">nibName:</span> <span class="n">nibNameOrNil</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">nibBundleOrNil</span><span class="p">)</span>
</span><span class='line'>        <span class="n">setup</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">required</span> <span class="n">init</span><span class="o">?</span><span class="p">(</span><span class="n">coder</span> <span class="nl">aDecoder:</span> <span class="n">NSCoder</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">coder:</span> <span class="n">aDecoder</span><span class="p">)</span>
</span><span class='line'>        <span class="n">setup</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Setup</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="n">func</span> <span class="n">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">viewController</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">interactor</span> <span class="o">=</span> <span class="n">RestaurantInformationInteractor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">presenter</span> <span class="o">=</span> <span class="n">RestaurantInformationPresenter</span><span class="p">()</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">router</span> <span class="o">=</span> <span class="n">RestaurantInformationRouter</span><span class="p">()</span>
</span><span class='line'>        <span class="n">viewController</span><span class="p">.</span><span class="n">interactor</span> <span class="o">=</span> <span class="n">interactor</span>
</span><span class='line'>        <span class="n">viewController</span><span class="p">.</span><span class="n">router</span> <span class="o">=</span> <span class="n">router</span>
</span><span class='line'>        <span class="n">interactor</span><span class="p">.</span><span class="n">presenter</span> <span class="o">=</span> <span class="n">presenter</span>
</span><span class='line'>        <span class="n">presenter</span><span class="p">.</span><span class="n">viewController</span> <span class="o">=</span> <span class="n">viewController</span>
</span><span class='line'>        <span class="n">router</span><span class="p">.</span><span class="n">viewController</span> <span class="o">=</span> <span class="n">viewController</span>
</span><span class='line'>        <span class="n">router</span><span class="p">.</span><span class="n">dataStore</span> <span class="o">=</span> <span class="n">interactor</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Routing</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">prepare</span><span class="p">(</span><span class="k">for</span> <span class="nl">segue:</span> <span class="n">UIStoryboardSegue</span><span class="p">,</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">scene</span> <span class="o">=</span> <span class="n">segue</span><span class="p">.</span><span class="n">identifier</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">selector</span> <span class="o">=</span> <span class="n">NSSelectorFromString</span><span class="p">(</span><span class="s">&quot;routeTo\(scene)WithSegue:&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">let</span> <span class="n">router</span> <span class="o">=</span> <span class="n">router</span><span class="p">,</span> <span class="n">router</span><span class="p">.</span><span class="n">responds</span><span class="p">(</span><span class="nl">to:</span> <span class="n">selector</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">router</span><span class="p">.</span><span class="n">perform</span><span class="p">(</span><span class="n">selector</span><span class="p">,</span> <span class="nl">with:</span> <span class="n">segue</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: View lifecycle</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">&quot;RestaurantInformation&quot;</span>
</span><span class='line'>        <span class="n">configuraWebView</span><span class="p">()</span>
</span><span class='line'>        <span class="n">loadRestaurantInformation</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Configuration</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="n">func</span> <span class="n">configuraWebView</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">webConfiguration</span> <span class="o">=</span> <span class="n">WKWebViewConfiguration</span><span class="p">()</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="nl">x:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">width:</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="nl">height:</span> <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">height</span><span class="p">)</span>
</span><span class='line'>        <span class="n">webView</span> <span class="o">=</span> <span class="n">WKWebView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">frame</span><span class="p">,</span> <span class="nl">configuration:</span> <span class="n">webConfiguration</span><span class="p">)</span>
</span><span class='line'>        <span class="n">webView</span><span class="p">.</span><span class="n">uiDelegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>        <span class="n">webView</span><span class="p">.</span><span class="n">navigationDelegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">webView</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Load restaurant information</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">loadRestaurantInformation</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">request</span> <span class="o">=</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">Request</span><span class="p">()</span>
</span><span class='line'>        <span class="n">interactor</span><span class="o">?</span><span class="p">.</span><span class="n">loadRestaurantInformation</span><span class="p">(</span><span class="nl">request:</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">displayRestaurantInformation</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">RestaurantInformation</span><span class="p">.</span><span class="n">Load</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">url</span> <span class="o">=</span> <span class="n">URL</span><span class="p">(</span><span class="nl">string:</span> <span class="n">viewModel</span><span class="p">.</span><span class="n">url</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">urlRequest</span> <span class="o">=</span> <span class="n">URLRequest</span><span class="p">(</span><span class="nl">url:</span> <span class="n">url</span><span class="p">)</span>
</span><span class='line'>            <span class="n">webView</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">urlRequest</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">RestaurantInformationViewController:</span> <span class="n">WKUIDelegate</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">RestaurantInformationViewController:</span> <span class="n">WKNavigationDelegate</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>loadRestaurantInformation()</code>

<ul>
<li>レストラン情報の読み込みを <code>Interactor</code> に依頼しています</li>
</ul>
</li>
<li><code>displayRestaurantInformation(viewModel: RestaurantInformation.Load.ViewModel)</code>

<ul>
<li><code>Presenter</code> から受けた指示に従って描画を実行しています</li>
<li>ここでは指定URLを用いてWebページを表示しています</li>
</ul>
</li>
</ul>


<p>今回は <code>RestaurantInformationRouter.swift</code> および <code>RestaurantInformationWorker.swift</code> については特に具体的な処理がないため説明は省略します。</p>

<h4>MapView</h4>

<p>マップ上に表示されるInfoWindowをタップしないと、レストラン情報ページに遷移できない要件であるため、 <code>MapView</code> 配下も少々変更が必要です。<br/>
この変更をもって、<code>RestaurantInformationInteractor</code> 内で値の入った <code>urlString</code> を扱うことになります。</p>

<p>関係各所の変更内容も簡単に書いておきます。</p>

<h5>Models</h5>

<p>まずは <code>Models/Restaurant.swift</code> です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="nl">Restaurant:</span> <span class="n">Equatable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">category:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">imageURL:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">restaurantURL:</span> <span class="n">String</span> <span class="c1">// 追記</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて <code>Models/CustomGMSMarker.swift</code> です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">CustomGMSMarker:</span> <span class="n">GMSMarker</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">category:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">imageURL:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">restaurantURL:</span> <span class="n">String</span><span class="o">!</span> <span class="c1">// 追記</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// 初期化</span>
</span><span class='line'>    <span class="n">override</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>HotpepperAPI.swift</h5>

<p>構造体である <code>Restaurant</code> に変更が入ったので、 <code>Services/HotpepperAPI.swift</code> にも修正が必要になります。<br/>
(返却値である <code>Restaurant</code> を生成する部分で <code>restaurantURL</code> を追加する必要があるためです。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">Alamofire</span>
</span><span class='line'><span class="n">import</span> <span class="n">SwiftyJSON</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">HotpepperAPI:</span> <span class="n">HotpepperProtocol</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">completionHandler:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">([</span><span class="n">Restaurant</span><span class="p">],</span> <span class="n">HotpepperError</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">parameters</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;key&quot;</span><span class="o">:</span> <span class="n">self</span><span class="p">.</span><span class="n">apiKey</span><span class="p">,</span> <span class="s">&quot;format&quot;</span><span class="o">:</span> <span class="s">&quot;json&quot;</span><span class="p">,</span> <span class="s">&quot;lat&quot;</span><span class="o">:</span> <span class="n">latitude</span><span class="p">,</span> <span class="s">&quot;lng&quot;</span><span class="o">:</span> <span class="n">longitude</span><span class="p">,</span> <span class="s">&quot;range&quot;</span><span class="o">:</span> <span class="mi">3</span><span class="p">]</span> <span class="n">as</span> <span class="p">[</span><span class="n">String</span> <span class="o">:</span> <span class="n">Any</span><span class="p">]</span>
</span><span class='line'>      <span class="n">Alamofire</span><span class="p">.</span><span class="n">SessionManager</span><span class="p">.</span><span class="k">default</span><span class="p">.</span><span class="n">requestWithoutCache</span><span class="p">(</span><span class="n">baseURL</span><span class="p">,</span> <span class="nl">method:</span> <span class="p">.</span><span class="n">get</span><span class="p">,</span> <span class="nl">parameters:</span> <span class="n">parameters</span><span class="p">,</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">,</span> <span class="nl">headers:</span> <span class="nb">nil</span><span class="p">).</span><span class="n">responseJSON</span> <span class="p">{</span> <span class="n">response</span> <span class="k">in</span>
</span><span class='line'>          <span class="n">var</span> <span class="nl">restaurants:</span> <span class="p">[</span><span class="n">Restaurant</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">Restaurant</span><span class="p">]()</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">for</span> <span class="n">shop</span> <span class="k">in</span> <span class="n">shops</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">let</span> <span class="kt">id</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;id&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;ID不明&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">name</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;name&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;ショップ名不明&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">category</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;genre&quot;</span><span class="p">][</span><span class="s">&quot;name&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;カテゴリ不明&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">imageURL</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;photo&quot;</span><span class="p">][</span><span class="s">&quot;mobile&quot;</span><span class="p">][</span><span class="s">&quot;l&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">latitude</span> <span class="o">=</span> <span class="n">atof</span><span class="p">(</span><span class="n">shop</span><span class="p">[</span><span class="s">&quot;lat&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;0&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">longitude</span> <span class="o">=</span> <span class="n">atof</span><span class="p">(</span><span class="n">shop</span><span class="p">[</span><span class="s">&quot;lng&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;0&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// ここから修正</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">restaurantURL</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;urls&quot;</span><span class="p">][</span><span class="s">&quot;pc&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">restaurant</span> <span class="o">=</span> <span class="n">Restaurant</span><span class="p">(</span><span class="kt">id</span><span class="o">:</span> <span class="kt">id</span><span class="p">,</span> <span class="nl">name:</span> <span class="n">name</span><span class="p">,</span> <span class="nl">category:</span> <span class="n">category</span><span class="p">,</span> <span class="nl">imageURL:</span> <span class="n">imageURL</span><span class="p">,</span> <span class="nl">latitude:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">longitude</span><span class="p">,</span> <span class="nl">restaurantURL:</span> <span class="n">restaurantURL</span><span class="p">)</span>
</span><span class='line'>                <span class="c1">// ここまで修正</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">restaurants</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">restaurant</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">completionHandler</span><span class="p">(</span><span class="n">restaurants</span><span class="p">,</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>MapModels.swift</h5>

<p>レストラン情報ページを見るために、 <code>url</code> を受け渡す必要があります。<br/>
その処理を実行するために <code>Fetch</code> を追加しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">enum</span> <span class="n">Map</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Fetch restaurant information</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="n">Fetch</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Request</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">urlString:</span> <span class="n">String</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Response</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">ViewModel</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>MapInteractor.swift</h5>

<p><code>MapInteractor.swift</code> では重要な変更を入れています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">MapBusinessLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">initMapView</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">searchRestaurants</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurantInformation</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="c1">// 追記</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">MapDataStore</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">urlString:</span> <span class="n">String</span> <span class="p">{</span> <span class="n">get</span> <span class="n">set</span> <span class="p">}</span> <span class="c1">// 追記</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">MapInteractor:</span> <span class="n">MapBusinessLogic</span><span class="p">,</span> <span class="n">MapDataStore</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">presenter:</span> <span class="n">MapPresentationLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">worker</span> <span class="o">=</span> <span class="n">HotpepperWorker</span><span class="p">(</span><span class="nl">hotpepper:</span> <span class="n">HotpepperAPI</span><span class="p">())</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">urlString:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>  <span class="c1">// 追記</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">initView:</span> <span class="n">Bool</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 以下、追記</span>
</span><span class='line'>    <span class="c1">// MARK: Tap infoWindow</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurantInformation</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">urlString</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">urlString</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">Response</span><span class="p">()</span>
</span><span class='line'>        <span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentFetchedRestaurantInformation</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>fetchRestaurantInformation(request: Map.Fetch.Request)</code>

<ul>
<li>マーカのInfoWindowをタップした際に、どのレストラン情報ページを表示すべきか把握する必要があります</li>
<li>そのため、 <code>Map.Fetch.Request</code> に格納された <code>urlString</code> を <code>MapDataStore</code> で定義された <code>urlString</code> に入力しています</li>
</ul>
</li>
<li><code>MapDataStore.urlString</code>

<ul>
<li>画面遷移時に値の受け渡しが必要な場合は <code>DataStore</code> プロトコルにフィールドを定義します</li>
<li>画面内で共通して使いまわしたい場合にも定義しておくと良いでしょう</li>
</ul>
</li>
</ul>


<h5>MapPresenter.swift</h5>

<p>一連の処理の流れ( <code>ViewController</code> → <code>Interactor</code> → <code>Presenter</code> )を書くために、具体的な実行処理はないものの、 <code>Presenter</code> を追加しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">MapPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentInitMapView</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentSearchedRestaurants</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentFetchedRestaurantInformation</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">MapPresenter:</span> <span class="n">MapPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">weak</span> <span class="n">var</span> <span class="nl">viewController:</span> <span class="n">MapDisplayLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">let</span> <span class="nl">zoomLevel:</span> <span class="n">Float</span> <span class="o">=</span> <span class="mf">16.0</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Present fetched restaurant information</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentFetchedRestaurantInformation</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">viewModel</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">()</span>
</span><span class='line'>        <span class="n">viewController</span><span class="o">?</span><span class="p">.</span><span class="n">transitRestaurantInformation</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">viewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>presentFetchedRestaurantInformation</code>

<ul>
<li><code>ViewController</code> に画面遷移処理を依頼します</li>
</ul>
</li>
</ul>


<h5>MapViewController.swift</h5>

<p>ユーザからのアクションの受取口や、 <code>Interactor</code> への依頼処理、 <code>Presenter</code> からの指示を実行する処理などを変更しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="nl">MapDisplayLogic:</span> <span class="n">class</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">displayInitMap</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">displaySearchedSuccess</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">displaySearchedFailure</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// 以下、追記</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">transitRestaurantInformation</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">MapViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">MapDisplayLogic</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">interactor:</span> <span class="n">MapBusinessLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">router:</span> <span class="p">(</span><span class="n">NSObjectProtocol</span> <span class="o">&amp;</span> <span class="n">MapRoutingLogic</span> <span class="o">&amp;</span> <span class="n">MapDataPassing</span><span class="p">)</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="o">!</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">locationManager:</span> <span class="n">CLLocationManager</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 以下追記</span>
</span><span class='line'>    <span class="c1">// MARK: Browse restaurant information</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurantInformation</span><span class="p">(</span><span class="nl">urlString:</span> <span class="n">String</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">request</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="nl">urlString:</span> <span class="n">urlString</span><span class="p">)</span>
</span><span class='line'>        <span class="n">interactor</span><span class="o">?</span><span class="p">.</span><span class="n">fetchRestaurantInformation</span><span class="p">(</span><span class="nl">request:</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">transitRestaurantInformation</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Fetch</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">router</span><span class="o">?</span><span class="p">.</span><span class="n">routeToRestaurantInformation</span><span class="p">(</span><span class="nl">segue:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">MapViewController:</span> <span class="n">GMSMapViewDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 以下追記</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">mapView</span><span class="p">(</span><span class="n">_</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="p">,</span> <span class="n">didTapInfoWindowOf</span> <span class="nl">marker:</span> <span class="n">GMSMarker</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">cMarker</span> <span class="o">=</span> <span class="n">marker</span> <span class="n">as</span><span class="o">?</span> <span class="n">CustomGMSMarker</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">fetchRestaurantInformation</span><span class="p">(</span><span class="nl">urlString:</span> <span class="n">cMarker</span><span class="p">.</span><span class="n">restaurantURL</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>func mapView(_ mapView: GMSMapView, didTapInfoWindowOf marker: GMSMarker)</code>

<ul>
<li>InfoWindowのタップ処理を <code>delegate</code> でキャッチすることができるため、追記しています</li>
<li>ここで、レストラン情報URLを <code>Interactor</code> に受け渡すメソッドを実行します</li>
</ul>
</li>
<li><code>fetchRestaurantInformation(urlString: String)</code>

<ul>
<li>レストラン情報URLを <code>Interactor</code> に渡すメソッドです</li>
</ul>
</li>
<li><code>transitRestaurantInformation</code>

<ul>
<li><code>Presenter</code> から指示を受けた後に、 <code>Router</code> に画面遷移を依頼しています</li>
</ul>
</li>
</ul>


<h5>MapRouter.swift</h5>

<p>今回、新たに画面遷移の処理を実装するため、 <code>MapRouter.swift</code> の処理を大幅に追加しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">objc</span> <span class="n">protocol</span> <span class="n">MapRoutingLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">routeToRestaurantInformation</span><span class="p">(</span><span class="nl">segue:</span> <span class="n">UIStoryboardSegue</span><span class="o">?</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">MapDataPassing</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">dataStore:</span> <span class="n">MapDataStore</span><span class="o">?</span> <span class="p">{</span> <span class="n">get</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">MapRouter:</span> <span class="n">NSObject</span><span class="p">,</span> <span class="n">MapRoutingLogic</span><span class="p">,</span> <span class="n">MapDataPassing</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">weak</span> <span class="n">var</span> <span class="nl">viewController:</span> <span class="n">MapViewController</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">dataStore:</span> <span class="n">MapDataStore</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Routing</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">routeToRestaurantInformation</span><span class="p">(</span><span class="nl">segue:</span> <span class="n">UIStoryboardSegue</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">let</span> <span class="n">segue</span> <span class="o">=</span> <span class="n">segue</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">destinationVC</span> <span class="o">=</span> <span class="n">segue</span><span class="p">.</span><span class="n">destination</span> <span class="n">as</span><span class="o">!</span> <span class="n">RestaurantInformationViewController</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">destinationDS</span> <span class="o">=</span> <span class="n">destinationVC</span><span class="p">.</span><span class="n">router</span><span class="o">!</span><span class="p">.</span><span class="n">dataStore</span><span class="o">!</span>
</span><span class='line'>        <span class="n">passDataToRestaurantInformation</span><span class="p">(</span><span class="nl">source:</span> <span class="n">dataStore</span><span class="o">!</span><span class="p">,</span> <span class="nl">destination:</span> <span class="o">&amp;</span><span class="n">destinationDS</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">storyboard</span> <span class="o">=</span> <span class="n">UIStoryboard</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;Main&quot;</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">destinationVC</span> <span class="o">=</span> <span class="n">storyboard</span><span class="p">.</span><span class="n">instantiateViewController</span><span class="p">(</span><span class="nl">withIdentifier:</span> <span class="s">&quot;RestaurantInformationViewController&quot;</span><span class="p">)</span> <span class="n">as</span><span class="o">!</span> <span class="n">RestaurantInformationViewController</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">destinationDS</span> <span class="o">=</span> <span class="n">destinationVC</span><span class="p">.</span><span class="n">router</span><span class="o">!</span><span class="p">.</span><span class="n">dataStore</span><span class="o">!</span>
</span><span class='line'>        <span class="n">passDataToRestaurantInformation</span><span class="p">(</span><span class="nl">source:</span> <span class="n">dataStore</span><span class="o">!</span><span class="p">,</span> <span class="nl">destination:</span> <span class="o">&amp;</span><span class="n">destinationDS</span><span class="p">)</span>
</span><span class='line'>        <span class="n">navigateToRestaurantInformation</span><span class="p">(</span><span class="nl">source:</span> <span class="n">viewController</span><span class="o">!</span><span class="p">,</span> <span class="nl">destination:</span> <span class="n">destinationVC</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Navigation</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">navigateToRestaurantInformation</span><span class="p">(</span><span class="nl">source:</span> <span class="n">MapViewController</span><span class="p">,</span> <span class="nl">destination:</span> <span class="n">RestaurantInformationViewController</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">source</span><span class="p">.</span><span class="n">show</span><span class="p">(</span><span class="n">destination</span><span class="p">,</span> <span class="nl">sender:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Passing data</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">passDataToRestaurantInformation</span><span class="p">(</span><span class="nl">source:</span> <span class="n">MapDataStore</span><span class="p">,</span> <span class="nl">destination:</span> <span class="n">inout</span> <span class="n">RestaurantInformationDataStore</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">destination</span><span class="p">.</span><span class="n">urlString</span> <span class="o">=</span> <span class="n">source</span><span class="p">.</span><span class="n">urlString</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>MapRoutingLogic</code>

<ul>
<li>画面遷移するためのメソッドを定義します</li>
</ul>
</li>
<li><code>MapDataPassing</code>

<ul>
<li><code>MapDataStore</code> をフィールドとして定義しています</li>
<li><code>MapInteractor</code> 内で定義したプロトコルが <code>MapDataStore</code> であり、先程定義した <code>urlString</code> を含みます</li>
</ul>
</li>
<li><code>routeToRestaurantInformation</code>

<ul>
<li>内部処理は基本的に毎回同じのお決まりと考えて良いでしょう</li>
</ul>
</li>
<li><code>navigateToRestaurantInformation</code>

<ul>
<li>実際の画面遷移処理として <code>show</code> メソッドを実行しています</li>
</ul>
</li>
<li><code>passDataToRestaurantInformation</code>

<ul>
<li>画面遷移元の <code>DataStore</code> から、画面遷移先の <code>DataStore</code> に値を受け渡しています</li>
</ul>
</li>
</ul>


<h3>まとめ</h3>

<p>以上が今回の要件追加に合わせて実装し直した内容になります。<br/>
本記事で扱ったソースコードは<a href="https://github.com/grandbig/CleanFoodLogger">CleanFoodLogger</a>にて公開しています。</p>

<p>今後は <code>RealmSwift</code> を用いた <code>CRUD</code> 処理だったり、 アプリでよく利用するUI面の話をできればと思います。<br/>
といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clean Swiftを勉強してみよう！(2)]]></title>
    <link href="http://grandbig.github.io/blog/2017/10/08/clean-swift-2/"/>
    <updated>2017-10-08T22:35:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/10/08/clean-swift-2</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は<a href="https://clean-swift.com/">Clean Swift</a>を用いた具体的な例について見ていきたいと思います。<br/>
題材として、下記のような要件を持つアプリを扱います。</p>

<p><img src="http://grandbig.github.io/images/clean-swift-2_1.png" alt="Clean Swiftの題材アプリ" /></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>アプリの要件</h3>

<p>要件としては、下記の通りです。</p>

<ul>
<li>現在地を中心にマップを表示する</li>
<li>検索ボタンをタップして、現在地周辺のレストラン情報を取得する</li>
<li>マップに表示されたレストランのマーカをタップすると、レストラン情報の概要ウィンドウが表示される</li>
</ul>


<h3>フォルダ構成</h3>

<p>フォルダ構成は以下のようになっています。<br/>
※ 今回のアプリの名称を <code>CleanFoodLogger</code> とします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">CleanFoodLogger</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Views</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">ViewController</span><span class="o">+</span><span class="nx">Alert</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Models</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="nx">Restaurant</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">CustomGMSMarker</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Workers</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">HotpepperWorker</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Services</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">HotpepperAPI</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Scenes</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">MapView</span>
</span><span class='line'><span class="err">│</span>         <span class="err">├──</span> <span class="nx">View</span>
</span><span class='line'><span class="err">│</span>         <span class="err">│</span>    <span class="err">├──</span> <span class="nx">CustomInfoWindow</span><span class="p">.</span><span class="nx">xib</span>
</span><span class='line'><span class="err">│</span>         <span class="err">│</span>    <span class="err">└──</span> <span class="nx">CustomInfoWindow</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>         <span class="err">├──</span> <span class="nx">MapViewController</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>         <span class="err">├──</span> <span class="nx">MapInteractor</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>         <span class="err">├──</span> <span class="nx">MapModels</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>         <span class="err">├──</span> <span class="nx">MapPresenter</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>         <span class="err">├──</span> <span class="nx">MapRouter</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">│</span>         <span class="err">└──</span> <span class="nx">MapWorker</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">AppDelegate</span><span class="p">.</span><span class="nx">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Main</span><span class="p">.</span><span class="nx">storyboard</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">Assets</span><span class="p">.</span><span class="nx">xcassets</span>
</span><span class='line'><span class="err">└──</span> <span class="nx">key</span><span class="p">.</span><span class="nx">plist</span>
</span></code></pre></td></tr></table></div></figure>


<p>それぞれの構成の意味について説明します。</p>

<h4>Views</h4>

<p><code>Scene</code> に寄らない共通ビュー系を格納します。</p>

<ul>
<li><code>ViewController+Alert.swift</code>

<ul>
<li><code>UIViewController</code> を拡張する形で実装</li>
<li>共通アラート表示処理を実装</li>
</ul>
</li>
</ul>


<h4>Models</h4>

<p><code>Scene</code> に寄らないモデル系を格納します。</p>

<ul>
<li><code>Restaurant.swift</code>

<ul>
<li>APIを通して取得したレストラン情報を格納するモデル</li>
</ul>
</li>
<li><code>CustomGMSMarker</code>

<ul>
<li><code>GMSMarker</code>を継承したカスタムクラス</li>
<li>マーカにショップ情報を追加して持たせたモデル</li>
</ul>
</li>
</ul>


<h4>Workers</h4>

<p><code>Scene</code> に寄らない <code>Clean Swift</code> で言うところの <code>Worker</code> 系を格納します。<br/>
※ 今回は、レストラン情報を取得するのに<a href="https://webservice.recruit.co.jp/hotpepper/reference.html">ホットペッパーAPI</a>を利用しています。</p>

<ul>
<li><code>HotpepperWorker.swift</code>

<ul>
<li>ホットペッパーAPI管理マネージャに当たる <code>Services/HotpepperAPI.swift</code> を通じて取得したレストラン情報を扱う</li>
</ul>
</li>
</ul>


<h4>Services</h4>

<p><code>Scene</code> に寄らない管理マネージャ系の共通処理を扱います。</p>

<ul>
<li><code>HotpepperAPI.swift</code>

<ul>
<li>ホットペッパーAPIを用いた具体的なロジックを実装</li>
</ul>
</li>
</ul>


<h4>Scenes</h4>

<p>ここは画面単位に <code>Clean Swift</code>のテンプレートを当て込んだ構成になります。<br/>
今回は簡単なサンプルなので1画面しかありません。<br/>
よって、 <code>Scenes</code> に格納しているのも <code>MapView</code> 1つになります。<br/>
<code>MapView</code> の配下は <code>Clean Swift</code> テンプレート一式になっています。</p>

<h3>アプリの実装</h3>

<p>続いて具体的なアプリの実装について見ていきます。<br/>
データフローとしては、下記の通りです。</p>

<p><img src="http://grandbig.github.io/images/clean-swift_3.png" alt="データフロー図" /></p>

<p>ではまずは、共通系の処理から説明します。</p>

<h4>Models</h4>

<p>この後の <code>Services</code> や <code>Workers</code> にも出てくるので、まずは <code>Models</code> から説明します。</p>

<h5>Restaurant.swift</h5>

<p>ホットペッパーAPIで取得したレストラン情報の一部を抜粋して格納するため、下記のような構成になっています。<br/>
今回は <code>==</code> で比較する処理を利用している箇所はありませんが、 <a href="https://github.com/Clean-Swift/CleanStore">Clean Store</a> を参考にしたので、そのまま残しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="nl">Restaurant:</span> <span class="n">Equatable</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">category:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">imageURL:</span> <span class="n">String</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">func</span> <span class="o">==</span><span class="p">(</span><span class="nl">lhs:</span> <span class="n">Restaurant</span><span class="p">,</span> <span class="nl">rhs:</span> <span class="n">Restaurant</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">lhs</span><span class="p">.</span><span class="kt">id</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="kt">id</span>
</span><span class='line'>        <span class="o">&amp;&amp;</span> <span class="n">lhs</span><span class="p">.</span><span class="n">name</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="n">name</span>
</span><span class='line'>        <span class="o">&amp;&amp;</span> <span class="n">lhs</span><span class="p">.</span><span class="n">category</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="n">category</span>
</span><span class='line'>        <span class="o">&amp;&amp;</span> <span class="n">lhs</span><span class="p">.</span><span class="n">imageURL</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="n">imageURL</span>
</span><span class='line'>        <span class="o">&amp;&amp;</span> <span class="n">lhs</span><span class="p">.</span><span class="n">latitude</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="n">latitude</span>
</span><span class='line'>        <span class="o">&amp;&amp;</span> <span class="n">lhs</span><span class="p">.</span><span class="n">longitude</span> <span class="o">==</span> <span class="n">rhs</span><span class="p">.</span><span class="n">longitude</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>CustomGMSMarker.swift</h5>

<p>マーカをタップした際に、ショップ情報を表示する <code>InfoWindow</code> を表示する要件があるため、 <code>GMSMarker</code> クラスを継承して、ショップ情報を追加しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">CustomGMSMarker:</span> <span class="n">GMSMarker</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">category:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>    <span class="n">public</span> <span class="n">var</span> <span class="nl">imageURL:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// 初期化</span>
</span><span class='line'>    <span class="n">override</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Workers</h4>

<p><code>Services</code> の説明に移る前に、<code>Protocol</code> を提供している <code>Workers</code> について見ていきます。</p>

<h5>HotpepperWorker.swift</h5>

<p>これは、</p>

<ul>
<li>API処理を扱うための <code>Worker</code> クラスを提供</li>
<li>外部へのインターフェースを定義したプロトコルの定義</li>
</ul>


<p>の役目を果たしています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: - Hotpepper worker</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">HotpepperWorker</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">hotpepper:</span> <span class="n">HotpepperProtocol</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="nl">hotpepper:</span> <span class="n">HotpepperProtocol</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">hotpepper</span> <span class="o">=</span> <span class="n">hotpepper</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">completionHandler:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">([</span><span class="n">Restaurant</span><span class="p">],</span> <span class="n">HotpepperError</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">hotpepper</span><span class="p">.</span><span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">longitude</span><span class="p">)</span> <span class="p">{</span> <span class="p">(</span><span class="n">restaurants</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">DispatchQueue</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">async</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">completionHandler</span><span class="p">(</span><span class="n">restaurants</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: Hotpepper API</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">HotpepperProtocol</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: CRUD operations</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">completionHandler:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">([</span><span class="n">Restaurant</span><span class="p">],</span> <span class="n">HotpepperError</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: - CRUD operation errors</span>
</span><span class='line'>
</span><span class='line'><span class="k">enum</span> <span class="nl">HotpepperError:</span> <span class="n">Equatable</span><span class="p">,</span> <span class="n">Error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">CannotFetch</span><span class="p">(</span><span class="n">String</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">func</span> <span class="o">==</span><span class="p">(</span><span class="nl">lhs:</span> <span class="n">HotpepperError</span><span class="p">,</span> <span class="nl">rhs:</span> <span class="n">HotpepperError</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">switch</span> <span class="p">(</span><span class="n">lhs</span><span class="p">,</span> <span class="n">rhs</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="p">(.</span><span class="n">CannotFetch</span><span class="p">(</span><span class="n">let</span> <span class="n">a</span><span class="p">),</span> <span class="p">.</span><span class="n">CannotFetch</span><span class="p">(</span><span class="n">let</span> <span class="n">b</span><span class="p">))</span> <span class="n">where</span> <span class="n">a</span> <span class="o">==</span> <span class="nl">b:</span> <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="k">default</span><span class="o">:</span> <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Services</h4>

<p><code>Worker</code> で定義された外部へのインターフェースの挙動を実装したクラスに当たります。</p>

<h5>HotpepperAPI.swift</h5>

<p>今回は <code>HotpepperProtocol</code> を継承した <code>HotpepperAPI</code> 内で実際にホットペッパーAPIを叩いて処理しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">Alamofire</span>
</span><span class='line'><span class="n">import</span> <span class="n">SwiftyJSON</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">HotpepperAPI:</span> <span class="n">HotpepperProtocol</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// API Key</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">apiKey:</span> <span class="n">String</span> <span class="o">=</span> <span class="n">String</span><span class="p">()</span>
</span><span class='line'>    <span class="c1">/// Geocoding APIのベースURL</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">let</span> <span class="nl">baseURL:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;https://webservice.recruit.co.jp/hotpepper/gourmet/v1/&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">/// 初期化処理</span>
</span><span class='line'>    <span class="c1">// key.plistに定義したAPIKeyを取得してセット</span>
</span><span class='line'>    <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;plist&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">&quot;hotpepperApiKey&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">self</span><span class="p">.</span><span class="n">apiKey</span> <span class="o">=</span> <span class="n">apiKey</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// HotpepperWorker.swift内のHotpepperProtocolインターフェースの具体的な処理</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">Double</span><span class="p">,</span> <span class="nl">completionHandler:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">([</span><span class="n">Restaurant</span><span class="p">],</span> <span class="n">HotpepperError</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">parameters</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;key&quot;</span><span class="o">:</span> <span class="n">self</span><span class="p">.</span><span class="n">apiKey</span><span class="p">,</span> <span class="s">&quot;format&quot;</span><span class="o">:</span> <span class="s">&quot;json&quot;</span><span class="p">,</span> <span class="s">&quot;lat&quot;</span><span class="o">:</span> <span class="n">latitude</span><span class="p">,</span> <span class="s">&quot;lng&quot;</span><span class="o">:</span> <span class="n">longitude</span><span class="p">,</span> <span class="s">&quot;range&quot;</span><span class="o">:</span> <span class="mi">3</span><span class="p">]</span> <span class="n">as</span> <span class="p">[</span><span class="n">String</span> <span class="o">:</span> <span class="n">Any</span><span class="p">]</span>
</span><span class='line'>        <span class="n">Alamofire</span><span class="p">.</span><span class="n">SessionManager</span><span class="p">.</span><span class="k">default</span><span class="p">.</span><span class="n">requestWithoutCache</span><span class="p">(</span><span class="n">baseURL</span><span class="p">,</span> <span class="nl">method:</span> <span class="p">.</span><span class="n">get</span><span class="p">,</span> <span class="nl">parameters:</span> <span class="n">parameters</span><span class="p">,</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">,</span> <span class="nl">headers:</span> <span class="nb">nil</span><span class="p">).</span><span class="n">responseJSON</span> <span class="p">{</span> <span class="n">response</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">restaurants:</span> <span class="p">[</span><span class="n">Restaurant</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">Restaurant</span><span class="p">]()</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">isFailure</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">defaultErrorMessage</span> <span class="o">=</span> <span class="s">&quot;レストラン情報を取得できませんでした。&quot;</span>
</span><span class='line'>                <span class="n">completionHandler</span><span class="p">([],</span> <span class="n">HotpepperError</span><span class="p">.</span><span class="n">CannotFetch</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">error</span><span class="o">?</span><span class="p">.</span><span class="n">localizedDescription</span> <span class="o">??</span> <span class="n">defaultErrorMessage</span><span class="p">))</span>
</span><span class='line'>                <span class="k">return</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">let</span> <span class="n">json</span> <span class="o">=</span> <span class="n">JSON</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">value</span> <span class="n">as</span> <span class="n">Any</span><span class="p">)</span>
</span><span class='line'>            <span class="n">guard</span> <span class="n">let</span> <span class="n">shops</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;results&quot;</span><span class="p">][</span><span class="s">&quot;shop&quot;</span><span class="p">].</span><span class="n">array</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">defaultErrorMessage</span> <span class="o">=</span> <span class="s">&quot;レストラン情報を取得できませんでした。&quot;</span>
</span><span class='line'>                <span class="n">completionHandler</span><span class="p">([],</span> <span class="n">HotpepperError</span><span class="p">.</span><span class="n">CannotFetch</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">error</span><span class="o">?</span><span class="p">.</span><span class="n">localizedDescription</span> <span class="o">??</span> <span class="n">defaultErrorMessage</span><span class="p">))</span>
</span><span class='line'>                <span class="k">return</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">for</span> <span class="n">shop</span> <span class="k">in</span> <span class="n">shops</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">let</span> <span class="kt">id</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;id&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;ID不明&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">name</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;name&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;ショップ名不明&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">category</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;genre&quot;</span><span class="p">][</span><span class="s">&quot;name&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;カテゴリ不明&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">imageURL</span> <span class="o">=</span> <span class="n">shop</span><span class="p">[</span><span class="s">&quot;photo&quot;</span><span class="p">][</span><span class="s">&quot;mobile&quot;</span><span class="p">][</span><span class="s">&quot;l&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">latitude</span> <span class="o">=</span> <span class="n">atof</span><span class="p">(</span><span class="n">shop</span><span class="p">[</span><span class="s">&quot;lat&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;0&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">longitude</span> <span class="o">=</span> <span class="n">atof</span><span class="p">(</span><span class="n">shop</span><span class="p">[</span><span class="s">&quot;lng&quot;</span><span class="p">].</span><span class="n">string</span> <span class="o">??</span> <span class="s">&quot;0&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">restaurant</span> <span class="o">=</span> <span class="n">Restaurant</span><span class="p">(</span><span class="kt">id</span><span class="o">:</span> <span class="kt">id</span><span class="p">,</span> <span class="nl">name:</span> <span class="n">name</span><span class="p">,</span> <span class="nl">category:</span> <span class="n">category</span><span class="p">,</span> <span class="nl">imageURL:</span> <span class="n">imageURL</span><span class="p">,</span> <span class="nl">latitude:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">longitude</span><span class="p">)</span>
</span><span class='line'>                <span class="n">restaurants</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">restaurant</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">completionHandler</span><span class="p">(</span><span class="n">restaurants</span><span class="p">,</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Clean Swiftとは無関係ですが、キャッシュなしリクエストをAlamofireを通して実装する処理</span>
</span><span class='line'><span class="n">extension</span> <span class="n">Alamofire</span><span class="p">.</span><span class="n">SessionManager</span> <span class="p">{</span>
</span><span class='line'>    <span class="err">@</span><span class="n">discardableResult</span>
</span><span class='line'>    <span class="n">open</span> <span class="n">func</span> <span class="n">requestWithoutCache</span><span class="p">(</span>
</span><span class='line'>        <span class="n">_</span> <span class="nl">url:</span> <span class="n">URLConvertible</span><span class="p">,</span>
</span><span class='line'>        <span class="nl">method:</span> <span class="n">HTTPMethod</span> <span class="o">=</span> <span class="p">.</span><span class="n">get</span><span class="p">,</span>
</span><span class='line'>        <span class="nl">parameters:</span> <span class="n">Parameters</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">,</span>
</span><span class='line'>        <span class="nl">encoding:</span> <span class="n">ParameterEncoding</span> <span class="o">=</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">,</span>
</span><span class='line'>        <span class="nl">headers:</span> <span class="n">HTTPHeaders</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>        <span class="o">-&gt;</span> <span class="n">DataRequest</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">var</span> <span class="n">urlRequest</span> <span class="o">=</span> <span class="n">try</span> <span class="n">URLRequest</span><span class="p">(</span><span class="nl">url:</span> <span class="n">url</span><span class="p">,</span> <span class="nl">method:</span> <span class="n">method</span><span class="p">,</span> <span class="nl">headers:</span> <span class="n">headers</span><span class="p">)</span>
</span><span class='line'>                <span class="n">urlRequest</span><span class="p">.</span><span class="n">cachePolicy</span> <span class="o">=</span> <span class="p">.</span><span class="n">reloadIgnoringCacheData</span> <span class="c1">// &lt;&lt;== Cache disabled</span>
</span><span class='line'>                <span class="n">let</span> <span class="n">encodedURLRequest</span> <span class="o">=</span> <span class="n">try</span> <span class="n">encoding</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="n">urlRequest</span><span class="p">,</span> <span class="nl">with:</span> <span class="n">parameters</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">request</span><span class="p">(</span><span class="n">encodedURLRequest</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">print</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">request</span><span class="p">(</span><span class="n">URLRequest</span><span class="p">(</span><span class="nl">url:</span> <span class="n">URL</span><span class="p">(</span><span class="nl">string:</span> <span class="s">&quot;http://example.com/wrong_request&quot;</span><span class="p">)</span><span class="o">!</span><span class="p">))</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>MapView</h4>

<p>ここから重要な <code>Clean Swift</code> を使った実装に入っていきます。<br/>
今回は共通 <code>Worker</code> のみ利用しているため、 <code>MapWorker.swift</code> は省略します。<br/>
また、画面遷移の処理もないため、 <code>MapRouter.swift</code> についても省略します。</p>

<h5>MapModels.swift</h5>

<p>Clean Swiftで今回扱う <code>Model</code> は以下の通りです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">enum</span> <span class="n">Map</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Init mapView</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="n">Init</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Request</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Response</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">ViewModel</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">zoomLevel:</span> <span class="n">Float</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Search restaurants</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">enum</span> <span class="n">Search</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Request</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">Response</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">restaurants:</span> <span class="p">[</span><span class="n">Restaurant</span><span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">ViewModel</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="nl">restaurants:</span> <span class="p">[</span><span class="n">Restaurant</span><span class="p">]</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>Init</code>

<ul>
<li>マップ画面の初期描画時に「現在地を中心としたマップ位置に移動する」際に利用</li>
</ul>
</li>
<li><code>Search</code>

<ul>
<li>「現在地周辺のレストランを検索する」際に利用</li>
</ul>
</li>
</ul>


<h5>MapInteractor.swift</h5>

<p><code>ViewController</code> から受け取った依頼を <code>Worker</code> を経由して取得した値を <code>Presenter</code> に渡します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">MapBusinessLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">initMapView</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">searchRestaurants</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">MapDataStore</span> <span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">MapInteractor:</span> <span class="n">MapBusinessLogic</span><span class="p">,</span> <span class="n">MapDataStore</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">presenter:</span> <span class="n">MapPresentationLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">worker</span> <span class="o">=</span> <span class="n">HotpepperWorker</span><span class="p">(</span><span class="nl">hotpepper:</span> <span class="n">HotpepperAPI</span><span class="p">())</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">var</span> <span class="nl">initView:</span> <span class="n">Bool</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Init mapView</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">initMapView</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">!</span><span class="n">initView</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">request</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">request</span><span class="p">.</span><span class="n">longitude</span><span class="p">)</span>
</span><span class='line'>            <span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentInitMapView</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>            <span class="n">initView</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Search restaurants</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">searchRestaurants</span><span class="p">(</span><span class="nl">request:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">worker</span><span class="p">.</span><span class="n">fetchRestaurants</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">request</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">request</span><span class="p">.</span><span class="n">longitude</span><span class="p">)</span> <span class="p">{</span> <span class="p">(</span><span class="n">restaurants</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">restaurants:</span> <span class="n">restaurants</span><span class="p">)</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentSearchedRestaurants</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>initMapView</code>

<ul>
<li>APIやローカルDBを利用する必要がないため、<code>Worker</code>は利用していません</li>
<li>初回だけ、実行すれば良い処理なので内部で定義した <code>initView</code> でハンドリングしています</li>
</ul>
</li>
<li><code>searchRestaurants</code>

<ul>
<li>ホットペッパーAPIによるデータ取得は <code>HotpepperWorker</code> に任せています</li>
<li><code>HotpepperWorker</code> を介して取得したデータを <code>Map.Search.Response</code> 形式に変換</li>
<li>それを <code>MapPresenter</code> に渡しています</li>
</ul>
</li>
</ul>


<h5>MapPresenter.swift</h5>

<p><code>Interactor</code> から受け取ったデータを表示形式に変換して、<code>ViewController</code> に描画指示を出します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">MapPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentInitMapView</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentSearchedRestaurants</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">MapPresenter:</span> <span class="n">MapPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">weak</span> <span class="n">var</span> <span class="nl">viewController:</span> <span class="n">MapDisplayLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">let</span> <span class="nl">zoomLevel:</span> <span class="n">Float</span> <span class="o">=</span> <span class="mf">16.0</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Present init mapView</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentInitMapView</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">latitude</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">latitude</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">longitude</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">longitude</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">viewModel</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">longitude</span><span class="p">,</span> <span class="nl">zoomLevel:</span> <span class="n">zoomLevel</span><span class="p">)</span>
</span><span class='line'>        <span class="n">viewController</span><span class="o">?</span><span class="p">.</span><span class="n">displayInitMap</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">viewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Present searched restaurants</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">presentSearchedRestaurants</span><span class="p">(</span><span class="nl">response:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">restaurants</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">restaurants</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">viewModel</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">(</span><span class="nl">restaurants:</span> <span class="n">restaurants</span><span class="p">)</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">restaurants</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">viewController</span><span class="o">?</span><span class="p">.</span><span class="n">displaySearchedSuccess</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">viewModel</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">viewController</span><span class="o">?</span><span class="p">.</span><span class="n">displaySearchedFailure</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">viewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>presentInitMapView</code>

<ul>
<li>「現在地を中心としたマップ位置に移動する」ために <code>ViewController</code> に緯度/経度/ズームレベルを渡します</li>
</ul>
</li>
<li><code>presentSearchedRestaurants</code>

<ul>
<li>レストラン情報の有無で <code>ViewController</code> に出す指示を変えています</li>
<li>今回はシンプルな実装のため、<code>Map.Search.Response</code> から <code>Map.Search.ViewModel</code> に変換はありません</li>
</ul>
</li>
</ul>


<h5>MapViewController.swift</h5>

<p>最後に <code>ViewController</code> について説明します。<br/>
下記で</p>

<ul>
<li><code>Interactor</code> に具体的な処理内容(表示ロジック)を問い合わせる</li>
<li><code>Presenter</code> からの指示を受けて、最適な <code>View</code> を描画する</li>
</ul>


<p>を実現しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="nl">MapDisplayLogic:</span> <span class="n">class</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">displayInitMap</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">displaySearchedSuccess</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">displaySearchedFailure</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">MapViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">MapDisplayLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">interactor:</span> <span class="n">MapBusinessLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">router:</span> <span class="p">(</span><span class="n">NSObjectProtocol</span> <span class="o">&amp;</span> <span class="n">MapRoutingLogic</span> <span class="o">&amp;</span> <span class="n">MapDataPassing</span><span class="p">)</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="o">!</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">locationManager:</span> <span class="n">CLLocationManager</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Object lifecycle</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">init</span><span class="p">(</span><span class="n">nibName</span> <span class="nl">nibNameOrNil:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="n">bundle</span> <span class="nl">nibBundleOrNil:</span> <span class="n">Bundle</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">nibName:</span> <span class="n">nibNameOrNil</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">nibBundleOrNil</span><span class="p">)</span>
</span><span class='line'>        <span class="n">setup</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">required</span> <span class="n">init</span><span class="o">?</span><span class="p">(</span><span class="n">coder</span> <span class="nl">aDecoder:</span> <span class="n">NSCoder</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">coder:</span> <span class="n">aDecoder</span><span class="p">)</span>
</span><span class='line'>        <span class="n">setup</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Setup</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">private</span> <span class="n">func</span> <span class="n">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">viewController</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">interactor</span> <span class="o">=</span> <span class="n">MapInteractor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">presenter</span> <span class="o">=</span> <span class="n">MapPresenter</span><span class="p">()</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">router</span> <span class="o">=</span> <span class="n">MapRouter</span><span class="p">()</span>
</span><span class='line'>        <span class="n">viewController</span><span class="p">.</span><span class="n">interactor</span> <span class="o">=</span> <span class="n">interactor</span>
</span><span class='line'>        <span class="n">viewController</span><span class="p">.</span><span class="n">router</span> <span class="o">=</span> <span class="n">router</span>
</span><span class='line'>        <span class="n">interactor</span><span class="p">.</span><span class="n">presenter</span> <span class="o">=</span> <span class="n">presenter</span>
</span><span class='line'>        <span class="n">presenter</span><span class="p">.</span><span class="n">viewController</span> <span class="o">=</span> <span class="n">viewController</span>
</span><span class='line'>        <span class="n">router</span><span class="p">.</span><span class="n">viewController</span> <span class="o">=</span> <span class="n">viewController</span>
</span><span class='line'>        <span class="n">router</span><span class="p">.</span><span class="n">dataStore</span> <span class="o">=</span> <span class="n">interactor</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Routing</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">prepare</span><span class="p">(</span><span class="k">for</span> <span class="nl">segue:</span> <span class="n">UIStoryboardSegue</span><span class="p">,</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">scene</span> <span class="o">=</span> <span class="n">segue</span><span class="p">.</span><span class="n">identifier</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">selector</span> <span class="o">=</span> <span class="n">NSSelectorFromString</span><span class="p">(</span><span class="s">&quot;routeTo\(scene)WithSegue:&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">let</span> <span class="n">router</span> <span class="o">=</span> <span class="n">router</span><span class="p">,</span> <span class="n">router</span><span class="p">.</span><span class="n">responds</span><span class="p">(</span><span class="nl">to:</span> <span class="n">selector</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">router</span><span class="p">.</span><span class="n">perform</span><span class="p">(</span><span class="n">selector</span><span class="p">,</span> <span class="nl">with:</span> <span class="n">segue</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: View lifecycle</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">configureMapView</span><span class="p">()</span>
</span><span class='line'>        <span class="n">configureLocationManager</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Configuration</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">configureMapView</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// GoogleMapの初期化</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">isMyLocationEnabled</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">mapType</span> <span class="o">=</span> <span class="n">GMSMapViewType</span><span class="p">.</span><span class="n">normal</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">compassButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">myLocationButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">compassButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">configureLocationManager</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 位置情報関連の初期化</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span> <span class="o">=</span> <span class="n">CLLocationManager</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">desiredAccuracy</span> <span class="o">=</span> <span class="n">kCLLocationAccuracyBest</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">requestWhenInUseAuthorization</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">startUpdatingLocation</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Init mapView</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">displayInitMap</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 初期描画時のマップ中心位置の移動</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">coordinate</span> <span class="o">=</span> <span class="n">CLLocationCoordinate2D</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">viewModel</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">viewModel</span><span class="p">.</span><span class="n">longitude</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">camera</span> <span class="o">=</span> <span class="n">GMSCameraPosition</span><span class="p">.</span><span class="n">camera</span><span class="p">(</span><span class="nl">withTarget:</span> <span class="n">coordinate</span><span class="p">,</span> <span class="nl">zoom:</span> <span class="n">viewModel</span><span class="p">.</span><span class="n">zoomLevel</span><span class="p">)</span>
</span><span class='line'>        <span class="n">mapView</span><span class="p">.</span><span class="n">camera</span> <span class="o">=</span> <span class="n">camera</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Search restaurants</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">searchRestaurants</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">latitude</span> <span class="o">=</span> <span class="n">mapView</span><span class="p">.</span><span class="n">myLocation</span><span class="o">?</span><span class="p">.</span><span class="n">coordinate</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> <span class="n">let</span> <span class="n">longitude</span> <span class="o">=</span> <span class="n">mapView</span><span class="p">.</span><span class="n">myLocation</span><span class="o">?</span><span class="p">.</span><span class="n">coordinate</span><span class="p">.</span><span class="n">longitude</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">request</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">longitude</span><span class="p">)</span>
</span><span class='line'>        <span class="n">interactor</span><span class="o">?</span><span class="p">.</span><span class="n">searchRestaurants</span><span class="p">(</span><span class="nl">request:</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">displaySearchedSuccess</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">restaurants</span> <span class="o">=</span> <span class="n">viewModel</span><span class="p">.</span><span class="n">restaurants</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">restaurant</span> <span class="k">in</span> <span class="n">restaurants</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">putMarker</span><span class="p">(</span><span class="nl">restaurant:</span> <span class="n">restaurant</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">displaySearchedFailure</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">Map</span><span class="p">.</span><span class="n">Search</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">showAlert</span><span class="p">(</span><span class="nl">title:</span> <span class="s">&quot;確認&quot;</span><span class="p">,</span> <span class="nl">message:</span> <span class="s">&quot;周辺にレストランは見つかりませんでした。&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">tappedSearchButton</span><span class="p">(</span><span class="n">_</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">searchRestaurants</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// MARK: Other</span>
</span><span class='line'>    <span class="n">private</span> <span class="n">func</span> <span class="n">putMarker</span><span class="p">(</span><span class="nl">restaurant:</span> <span class="n">Restaurant</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">marker</span> <span class="o">=</span> <span class="n">CustomGMSMarker</span><span class="p">()</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="kt">id</span> <span class="o">=</span> <span class="n">restaurant</span><span class="p">.</span><span class="kt">id</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">restaurant</span><span class="p">.</span><span class="n">name</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">category</span> <span class="o">=</span> <span class="n">restaurant</span><span class="p">.</span><span class="n">category</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">imageURL</span> <span class="o">=</span> <span class="n">restaurant</span><span class="p">.</span><span class="n">imageURL</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CLLocationCoordinate2D</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">restaurant</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">restaurant</span><span class="p">.</span><span class="n">longitude</span><span class="p">)</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">icon</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;RestaurantIcon&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">appearAnimation</span> <span class="o">=</span> <span class="n">GMSMarkerAnimation</span><span class="p">.</span><span class="n">pop</span>
</span><span class='line'>        <span class="n">marker</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="n">mapView</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">MapViewController:</span> <span class="n">CLLocationManagerDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">locationManager</span><span class="p">(</span><span class="n">_</span> <span class="nl">manager:</span> <span class="n">CLLocationManager</span><span class="p">,</span> <span class="n">didUpdateLocations</span> <span class="nl">locations:</span> <span class="p">[</span><span class="n">CLLocation</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// マップの初期描画</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">coordinate</span> <span class="o">=</span> <span class="n">locations</span><span class="p">.</span><span class="n">last</span><span class="o">?</span><span class="p">.</span><span class="n">coordinate</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">request</span> <span class="o">=</span> <span class="n">Map</span><span class="p">.</span><span class="n">Init</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">coordinate</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">coordinate</span><span class="p">.</span><span class="n">longitude</span><span class="p">)</span>
</span><span class='line'>            <span class="n">interactor</span><span class="o">?</span><span class="p">.</span><span class="n">initMapView</span><span class="p">(</span><span class="nl">request:</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="nl">MapViewController:</span> <span class="n">GMSMapViewDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">mapView</span><span class="p">(</span><span class="n">_</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="p">,</span> <span class="n">markerInfoWindow</span> <span class="nl">marker:</span> <span class="n">GMSMarker</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">UIView</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">guard</span> <span class="n">let</span> <span class="n">cMarker</span> <span class="o">=</span> <span class="n">marker</span> <span class="n">as</span><span class="o">?</span> <span class="n">CustomGMSMarker</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">cMarker</span><span class="p">.</span><span class="n">tracksInfoWindowChanges</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">view</span> <span class="o">=</span> <span class="n">CustomInfoWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">CGRect</span><span class="p">(</span><span class="nl">x:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">width:</span> <span class="mi">250</span><span class="p">,</span> <span class="nl">height:</span> <span class="mi">265</span><span class="p">))</span>
</span><span class='line'>        <span class="n">view</span><span class="p">.</span><span class="n">setup</span><span class="p">(</span><span class="nl">name:</span> <span class="n">cMarker</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="nl">category:</span> <span class="n">cMarker</span><span class="p">.</span><span class="n">category</span><span class="p">,</span> <span class="nl">imageURL:</span> <span class="n">cMarker</span><span class="p">.</span><span class="n">imageURL</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">view</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>configureMapView</code> / <code>configureLocationManager</code>

<ul>
<li>最低限必要な <code>ViewController</code> 上での設定処理</li>
<li>ここで <code>startUpdatingLocation</code> を実行することで現在地の更新を開始</li>
</ul>
</li>
<li><code>didUpdateLocations</code> → <code>displayInitMap</code>

<ul>
<li>初期起動時は <code>mapView.myLocation</code> から現在地の即時取得ができないため、<code>startUpdatingLocation</code> を利用しています</li>
<li>現在地が取得できたタイミングで <code>didUpdateLocations</code> を通るため、 <code>Interactor</code> にマップ中心位置の移動を依頼しています</li>
<li>位置を移動させるか否かは <code>ViewController</code> では判断しません</li>
</ul>
</li>
<li><code>tappedSearchButton</code> → <code>searchRestaurants</code> → <code>displaySearchedSuccess</code> / <code>displaySearchedFailure</code>

<ul>
<li>検索ボタンをタップした時に <code>searchRestaurants</code> を呼び出しています</li>
<li><code>Interactor</code> にレストラン情報の検索を依頼しています</li>
<li><code>Presenter</code> から <code>displaySearchedSuccess</code> または <code>displaySearchedFailure</code> の描画指示を受けて描画します</li>
<li><code>Presenter</code> から返却された <code>Map.Search.ViewModel</code> を利用して <code>putMarker</code> を実行することでマップにマーカをプロットします。</li>
<li><code>displaySearchedFailure</code> では、失敗したことをアラート表示することで表現しています</li>
</ul>
</li>
<li><code>GMSMapViewDelegate</code>

<ul>
<li>マーカタップ時の処理を実装しています</li>
</ul>
</li>
</ul>


<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
次回は今回扱ったサンプルを拡張する形で実装し、説明していきたいと思います。<br/>
因みに、本記事のソースは <a href="https://github.com/grandbig/CleanFoodLogger">CleanFoodLogger</a>にて公開しています。<br/>
※ バージョン <code>1.0</code> を参照してください。</p>

<p>ということで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clean Swiftを勉強してみよう！(1)]]></title>
    <link href="http://grandbig.github.io/blog/2017/09/25/clean-swift/"/>
    <updated>2017-09-25T23:42:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/09/25/clean-swift</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>本日は<a href="https://clean-swift.com/">Clean Swift</a>について書いていきたいと思います。</p>

<h3>Clean Swiftとは</h3>

<p>Clean Swiftは簡単に言うと『<a href="https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html">Clean Architecture</a>のSwift版』です。  <br/>
参考までにClean Architectureの有名な図を掲載します。<br/>
※ <a href="https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html">Clean Architecture</a>より抜粋させて頂きました。<br/>
<img src="http://grandbig.github.io/images/clean-swift_1.jpg" alt="Clean Architecture" /></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>Clean Swiftアーキテクチャを採用することで受けられる恩恵として下記が考えられます。</p>

<ul>
<li>各種コンポーネントの責務を細分化することで、Massive ViewControllerの解消に繋がる</li>
<li>データの方向性が一方向になるため、各種コンポーネントの相互依存性が減り、TDD開発が進めやすくなる</li>
<li>各種コンポーネントの責務がはっきりしているため、チーム開発する際に、実装が平準化される</li>
</ul>


<h3>コンポーネントの関係性</h3>

<p>各種コンポーネントの関係性を表した全体像が下図になります。<br/>
<img src="http://grandbig.github.io/images/clean-swift_2.png" alt="Clean Swift Architectureの図" /></p>

<p>この関係性を説明するにあたって、各種コンポーネントの責務を理解しておく必要があるのでそれぞれ見ていきましょう。</p>

<h3>各コンポーネントの説明</h3>

<h4>View</h4>

<p>特に他のアーキテクチャと大きく違わない認識です。</p>

<p><strong>責務：</strong><br/>
① iOSアプリの見た目を表現する</p>

<h4>ViewController</h4>

<p><code>Massive ViewController</code> になりがちな部分ですが、Clean Swiftでの責務は以下になります。</p>

<p><strong>責務：</strong><br/>
① <code>Interactor</code> に具体的な処理内容(表示ロジック)を問い合わせる<br/>
② <code>Presenter</code> からの指示を受けて、最適な <code>View</code> を描画する<br/>
③ <code>Router</code> に画面遷移を依頼する</p>

<p>具体例は下記になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="nl">SampleViewDisplayLogic:</span> <span class="n">class</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">displaySomething</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">displayError</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">transitionToSomeWhere</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Sometime</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SampleViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">SampleViewDisplayLogic</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">var</span> <span class="nl">interactor:</span> <span class="n">SampleViewBusinessLogic</span><span class="o">?</span>
</span><span class='line'>  <span class="n">var</span> <span class="nl">router:</span> <span class="p">(</span><span class="n">NSObjectProtocol</span> <span class="o">&amp;</span> <span class="n">SampleViewRoutingLogic</span> <span class="o">&amp;</span> <span class="n">SampleViewDataPassing</span><span class="p">)</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: Object lifecycle</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">init</span><span class="p">(</span><span class="n">nibName</span> <span class="nl">nibNameOrNil:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="n">bundle</span> <span class="nl">nibBundleOrNil:</span> <span class="n">Bundle</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">nibName:</span> <span class="n">nibNameOrNil</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">nibBundleOrNil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">setup</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">required</span> <span class="n">init</span><span class="o">?</span><span class="p">(</span><span class="n">coder</span> <span class="nl">aDecoder:</span> <span class="n">NSCoder</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">coder:</span> <span class="n">aDecoder</span><span class="p">)</span>
</span><span class='line'>    <span class="n">setup</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: Setup</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">func</span> <span class="n">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">viewController</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">interactor</span> <span class="o">=</span> <span class="n">SampleViewInteractor</span><span class="p">()</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">presenter</span> <span class="o">=</span> <span class="n">SampleViewPresenter</span><span class="p">()</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">router</span> <span class="o">=</span> <span class="n">SampleViewRouter</span><span class="p">()</span>
</span><span class='line'>    <span class="n">viewController</span><span class="p">.</span><span class="n">interactor</span> <span class="o">=</span> <span class="n">interactor</span>
</span><span class='line'>    <span class="n">viewController</span><span class="p">.</span><span class="n">router</span> <span class="o">=</span> <span class="n">router</span>
</span><span class='line'>    <span class="n">interactor</span><span class="p">.</span><span class="n">presenter</span> <span class="o">=</span> <span class="n">presenter</span>
</span><span class='line'>    <span class="n">presenter</span><span class="p">.</span><span class="n">viewController</span> <span class="o">=</span> <span class="n">viewController</span>
</span><span class='line'>    <span class="n">router</span><span class="p">.</span><span class="n">viewController</span> <span class="o">=</span> <span class="n">viewController</span>
</span><span class='line'>    <span class="n">router</span><span class="p">.</span><span class="n">dataStore</span> <span class="o">=</span> <span class="n">interactor</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: Routing</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">prepare</span><span class="p">(</span><span class="k">for</span> <span class="nl">segue:</span> <span class="n">UIStoryboardSegue</span><span class="p">,</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">let</span> <span class="n">scene</span> <span class="o">=</span> <span class="n">segue</span><span class="p">.</span><span class="n">identifier</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">selector</span> <span class="o">=</span> <span class="n">NSSelectorFromString</span><span class="p">(</span><span class="s">&quot;routeTo\(scene)WithSegue:&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">let</span> <span class="n">router</span> <span class="o">=</span> <span class="n">router</span><span class="p">,</span> <span class="n">router</span><span class="p">.</span><span class="n">responds</span><span class="p">(</span><span class="nl">to:</span> <span class="n">selector</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">router</span><span class="p">.</span><span class="n">perform</span><span class="p">(</span><span class="n">selector</span><span class="p">,</span> <span class="nl">with:</span> <span class="n">segue</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: View lifecycle</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fetchSomethingOnLoad</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// ① Interactorに具体的な処理内容を問い合わせる</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">fetchSomethingOnLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">request</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Request</span><span class="p">()</span>
</span><span class='line'>    <span class="n">interactor</span><span class="o">?</span><span class="p">.</span><span class="n">fetchSomething</span><span class="p">(</span><span class="nl">request:</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// ② Presenterからの指示を受けてViewを描画する</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">displaySomething</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// do something</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">displayError</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// do error something</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// ③ Routerに画面遷移を依頼する</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">transitionToSomeWhere</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Sometime</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 画面遷移</span>
</span><span class='line'>    <span class="n">router</span><span class="o">?</span><span class="p">.</span><span class="n">routeToSomeWhere</span><span class="p">(</span><span class="nl">segue:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、ユーザによるアクション起因の場合は下記のようにするだけです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">tapSomeAction</span><span class="p">(</span><span class="n">_</span> <span class="nl">sender:</span> <span class="n">Any</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// ① Interactorに具体的な処理内容を問い合わせる</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">request</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Sometime</span><span class="p">.</span><span class="n">Request</span><span class="p">()</span>
</span><span class='line'>  <span class="n">interactor</span><span class="o">?</span><span class="p">.</span><span class="n">fetchSometime</span><span class="p">(</span><span class="nl">request:</span> <span class="n">request</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Presenter</code> からの指示を受けて、 <code>ViewController</code> は描画処理を実行するため、見た目の整形などの <strong>描画処理自体</strong> は <code>ViewController</code> 内に書きます。</p>

<p>例えば、</p>

<p>・正方形の <code>UIView</code> を角丸にする/背景色を変更する/非表示にする etc<br/>
・マップにマーカを配置する/図形を描画する etc</p>

<h4>Interactor</h4>

<p><code>ViewController</code> から依頼を受け、 <code>Interactor</code> は下記を実施する責務を持っています。</p>

<p><strong>責務：</strong><br/>
① <code>Worker</code> と <code>Presenter</code> を仲介する<br/>
② どんな条件で、 <code>Worker</code> に何の処理を依頼するのかハンドリングする<br/>
③ <code>Worker</code> 経由で取得したレスポンスを <code>Presenter</code> に渡す</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">SampleViewBusinessLogic</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchSomething</span><span class="p">(</span><span class="nl">request:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchSometime</span><span class="p">(</span><span class="nl">request:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Sometime</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">SampleViewDataStore</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 画面遷移時にパラメータを受け取れるように定義</span>
</span><span class='line'>  <span class="n">var</span> <span class="nl">something:</span> <span class="n">String</span> <span class="p">{</span> <span class="n">get</span> <span class="n">set</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SampleViewInteractor:</span> <span class="n">SampleViewBusinessLogic</span><span class="p">,</span> <span class="n">SampleViewDataStore</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">presenter:</span> <span class="n">SampleViewPresentationLogic</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="n">worker</span> <span class="o">=</span> <span class="n">SampleViewWorker</span><span class="o">?</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">something:</span> <span class="n">String</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchSomething</span><span class="p">(</span><span class="nl">request:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// ① WorkerとPresenterを仲介する</span>
</span><span class='line'>      <span class="n">worker</span><span class="p">.</span><span class="n">fetch</span><span class="p">(</span><span class="nl">success:</span> <span class="p">{</span> <span class="p">(</span><span class="n">object</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>        <span class="c1">// 処理が成功した場合</span>
</span><span class='line'>        <span class="c1">// ③ Worker経由で取得したレスポンスをPresenterに渡す  </span>
</span><span class='line'>        <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">object:</span> <span class="n">object</span><span class="p">,</span> <span class="nl">isError:</span> <span class="n">false</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentSomething</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>      <span class="p">},</span> <span class="nl">failure:</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span>
</span><span class='line'>        <span class="c1">// 処理が失敗した場合</span>
</span><span class='line'>        <span class="c1">// ③ Worker経由で取得したレスポンスをPresenterに渡す  </span>
</span><span class='line'>        <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">object:</span> <span class="n">object</span><span class="p">,</span> <span class="nl">isError:</span> <span class="n">true</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentSomething</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchSometime</span><span class="p">(</span><span class="nl">request:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Sometime</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// ② どんな条件で、Workerに何の処理を依頼するのかハンドリングする</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">time</span> <span class="o">&gt;</span> <span class="n">Date</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Sometime</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">future:</span> <span class="n">true</span><span class="p">)</span>
</span><span class='line'>        <span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentSometime</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Sometime</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">future:</span> <span class="n">false</span><span class="p">)</span>
</span><span class='line'>      <span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentSometime</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetchSomeWhat</span><span class="p">(</span><span class="nl">request:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">SomeWhat</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 画面遷移時に渡されたパラメータを利用した描画を実施したい場合</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">response</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Response</span><span class="p">(</span><span class="nl">object:</span> <span class="n">something</span><span class="p">)</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">presenter</span><span class="o">?</span><span class="p">.</span><span class="n">presentSomething</span><span class="p">(</span><span class="nl">response:</span> <span class="n">response</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Worker</h4>

<p><code>Interactor</code> から受けた依頼を実行します。</p>

<p><strong>責務：</strong><br/>
① <code>API</code> 処理や <code>Core Data</code> / <code>Realm</code> などのアプリ内ローカルデータの処理をハンドリングする<br/>
② 成功/失敗レスポンスをハンドリングする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">SampleViewWorker</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">fetch</span><span class="p">(</span><span class="nl">success:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">((</span><span class="n">SomeObject</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">),</span> <span class="nl">failure:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">((</span><span class="n">Error</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// APIリクエストまたはローカルDBへのアクセスを実行してデータを取得</span>
</span><span class='line'>      <span class="c1">// 具体的な処理は省略</span>
</span><span class='line'>      <span class="n">let</span> <span class="nl">obj:</span> <span class="n">SomeObject</span> <span class="o">=</span> <span class="p">...</span>
</span><span class='line'>      <span class="n">success</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
</span><span class='line'>    <span class="p">})</span> <span class="p">{</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="k">in</span>
</span><span class='line'>      <span class="n">failure</span><span class="p">(</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Presenter</h4>

<p><code>Interactor</code> から <code>Worker</code> 経由で取得したレスポンスを受け取った後に、 <code>Presenter</code> は下記を実行することを責務とします。</p>

<p><strong>責務：</strong><br/>
① 受け取ったレスポンスを元に最適な表示(成功/失敗などの表示)になるようハンドリングする<br/>
② 受け取ったレスポンスを <code>Model.ViewModel</code> 形式に変換する<br/>
③ <code>ViewController</code> に <code>Model.ViewModel</code> を渡して描画を依頼する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">SampleViewPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">presentSomething</span><span class="p">(</span><span class="nl">response:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SampleViewPresenter:</span> <span class="n">SampleViewPresentationLogic</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">weak</span> <span class="n">var</span> <span class="nl">viewController:</span> <span class="n">SampleViewDisplayLogic</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: Present something</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">presentSomething</span><span class="p">(</span><span class="nl">response:</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">Response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// ② 受け取ったレスポンスをModel.ViewModel形式に変換する</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">viewModel</span> <span class="o">=</span> <span class="n">SampleView</span><span class="p">.</span><span class="n">Something</span><span class="p">.</span><span class="n">ViewModel</span><span class="p">(</span><span class="nl">object:</span> <span class="n">response</span><span class="p">.</span><span class="n">object</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ① 受け取ったレスポンスを元に最適な表示(成功/失敗などの表示)になるようハンドリングする</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">response</span><span class="p">.</span><span class="n">isError</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// エラーがある場合</span>
</span><span class='line'>      <span class="c1">// ③ ViewControllerにModel.ViewModelを渡して描画を依頼する  </span>
</span><span class='line'>      <span class="n">viewController</span><span class="o">?</span><span class="p">.</span><span class="n">displayError</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">viewModel</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ③ ViewControllerにModel.ViewModelを渡して描画を依頼する</span>
</span><span class='line'>    <span class="n">viewController</span><span class="o">?</span><span class="p">.</span><span class="n">displaySomething</span><span class="p">(</span><span class="nl">viewModel:</span> <span class="n">viewModel</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Model</h4>

<p>Clean Swiftアーキテクチャの肝といっても過言ではないのが <code>Model</code> です。</p>

<p><strong>責務：</strong><br/>
① 各種コンポーネントを切り離し、各種コンポーネント間のやり取りに利用される<br/>
② <code>Request</code> / <code>Response</code> / <code>ViewModel</code> の3つの構造体を持つ</p>

<p><strong>3つの構造体の説明：</strong><br/>
・ <code>Request</code><br/>
　　・ ユーザの操作をInputパラメータとして内包したデータ形式<br/>
　　・ <code>ViewController</code> から <code>Interactor</code> に渡される<br/>
・ <code>Response</code><br/>
　　・ <code>Worker</code> 処理結果を内包しているデータ形式<br/>
　　・ <code>Interactor</code> から <code>Presenter</code> に渡される<br/>
・ <code>ViewModel</code><br/>
　　・ <code>ViewController</code> での描画に即したデータ形式<br/>
　　・ <code>Presenter</code> から <code>ViewController</code> に渡される</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="k">enum</span> <span class="n">SampleView</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: Fetch something</span>
</span><span class='line'>  <span class="k">enum</span> <span class="n">Something</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">Request</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">Response</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">var</span> <span class="nl">object:</span> <span class="n">SomeObject</span>
</span><span class='line'>      <span class="n">var</span> <span class="nl">isError:</span> <span class="n">Bool</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">ViewModel</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">var</span> <span class="nl">object:</span> <span class="n">SomeObject</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: Fetch sometime</span>
</span><span class='line'>  <span class="k">enum</span> <span class="n">Sometime</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">Request</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">Response</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">struct</span> <span class="n">ViewModel</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>データフローの例</h3>

<p>各コンポーネントの責務を理解した上で、コンポーネント間のフローの流れを見ていきましょう。</p>

<h4>ユーザがボタンをタップして通信処理後に取得データを描画するフロー</h4>

<p>ユーザが <code>View</code> 上のボタンをタップした後に、外部APIを叩いて取得したデータで <code>View</code> 描画するデータフローは下記になります。</p>

<p>① <code>ViewController</code> が <code>View</code> に対するユーザアクションを検知<br/>
② <code>ViewController</code> が <code>Interactor</code> に <code>Model.Request</code> を送って具体的な処理を依頼<br/>
③ <code>Interactor</code> が <code>Worker</code> に処理を依頼<br/>
④ <code>Worker</code> が通信処理した結果を <code>Interactor</code> に返却<br/>
⑤ <code>Interactor</code> が返却データを <code>Model.Response</code> に変換して、 <code>Presenter</code> に処理を依頼 <br/>
⑥ <code>Presenter</code> が受け渡されたデータを <code>Model.ViewModel</code> に変換して、 <code>ViewController</code> に描画を指示<br/>
⑦ <code>ViewController</code> が <code>View</code> に描画を反映</p>

<p><img src="http://grandbig.github.io/images/clean-swift_3.png" alt="データのフロー例１" /></p>

<p>※このフローでは画面遷移がないため、Routerへの繋がりはありません。</p>

<h4>ユーザがボタンをタップしてローカルDBからデータ取得して画面遷移するフロー</h4>

<p>ユーザが <code>View</code> 上のボタンをタップした後に、ローカルDB内データを取得して、画面遷移するデータフローは下記になります。</p>

<p>① <code>ViewController</code> が <code>View</code> に対するユーザアクションを検知<br/>
② <code>ViewController</code> が <code>Interactor</code> に <code>Model.Request</code> を送って具体的な処理を依頼<br/>
③ <code>Interactor</code> が <code>Worker</code> に処理を依頼<br/>
④ <code>Worker</code> がローカルDBから処理した結果を <code>Interactor</code> に返却<br/>
⑤ <code>Interactor</code> が返却データを <code>Model.Response</code> に変換して、 <code>Presenter</code> に処理を依頼 <br/>
⑥ <code>Presenter</code> が受け渡されたデータを <code>Model.ViewModel</code> に変換して、 <code>ViewController</code> に描画を指示<br/>
⑦ <code>ViewController</code> が <code>Router</code> に画面遷移を依頼<br/>
⑧ <code>Router</code> が依頼された画面先にデータを受け渡し、画面遷移を実行</p>

<p><img src="http://grandbig.github.io/images/clean-swift_4.png" alt="データのフロー例２" /></p>

<h3>まとめ</h3>

<p>まず、各種コンポーネントの責務と、そのコンポーネント間の関係性および抽象的なデータフローについて説明しました。<br/>
次回は具体的なサンプルを元にClean Swiftについて説明したいと思います。</p>

<p>参考URL:</p>

<ul>
<li><a href="https://clean-swift.com/clean-swift-ios-architecture/">Clean Swift公式ページ</a></li>
<li><a href="https://hackernoon.com/introducing-clean-swift-architecture-vip-770a639ad7bf">Introducing Clean Swift Architecture (VIP)</a></li>
<li><a href="https://swifting.io/blog/2016/09/07/architecture-wars-a-new-hope/">swifting.io: #24 Architecture Wars – A New Hope</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
