<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2017-07-17T22:57:52+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Geocoding APIとDirections APIを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/07/17/google-maps-api/"/>
    <updated>2017-07-17T22:32:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/07/17/google-maps-api</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>本日はGoogleが提供している<a href="https://developers.google.com/maps/documentation/geocoding/intro?hl=ja">Geocoding API</a>と<a href="https://developers.google.com/maps/documentation/directions/?hl=ja">Directions API</a>をiOSで使ってみた話を書きます。</p>

<p>まずは、Google Cloud Platform > API Managerから <strong>Geocoding API</strong> と <strong>Directions API</strong> を有効にしましょう。</p>

<p><img src="http://grandbig.github.io/images/google_api_1.png" alt="API Manager" /></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Geocoding APIの利用</h3>

<p>Googleから提供されたAPIを利用し、それがJSON形式が返却されるため、<code>Alamofire</code>と<code>SwiftyJSON</code>をあわせて利用します。</p>

<p>因みに、APIキーは<a href="http://grandbig.github.io/blog/2017/06/18/google-maps-sdk/">Google Maps SDK for iOSを導入してみよう！</a>で説明した通り<code>key.plist</code>に記載することでGitHubにアップすることを避けています。</p>

<p>今回実装する処理は <strong>住所を緯度/経度に変換する処理</strong> になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">CoreLocation</span>
</span><span class='line'><span class="n">import</span> <span class="n">Alamofire</span>
</span><span class='line'><span class="n">import</span> <span class="n">SwiftyJSON</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">Geocoding</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">/// API Key</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">apiKey:</span> <span class="n">String</span> <span class="o">=</span> <span class="n">String</span><span class="p">()</span>
</span><span class='line'>  <span class="c1">/// Geocoding APIのベースURL</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">let</span> <span class="nl">baseURL:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;https://maps.googleapis.com/maps/api/geocode/json?language=ja&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">/// 初期化処理</span>
</span><span class='line'>  <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;plist&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">&quot;googleWebApiKey&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">self</span><span class="p">.</span><span class="n">apiKey</span> <span class="o">=</span> <span class="n">apiKey</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   ジオコーディング</span>
</span><span class='line'>
</span><span class='line'><span class="cm">   - parameter address: 住所</span>
</span><span class='line'><span class="cm">   - parameter completion: 緯度/経度を返すcallback</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">geocoding</span><span class="p">(</span><span class="nl">address:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">completion:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">((</span><span class="n">CLLocationCoordinate2D</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">requestURL</span> <span class="o">=</span> <span class="s">&quot;\(baseURL)&amp;key=\(String(describing: self.apiKey))&quot;</span>
</span><span class='line'>    <span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="n">requestURL</span><span class="p">,</span> <span class="nl">method:</span> <span class="p">.</span><span class="n">get</span><span class="p">,</span> <span class="nl">parameters:</span> <span class="p">[</span><span class="s">&quot;address&quot;</span><span class="o">:</span> <span class="n">address</span><span class="p">],</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">,</span> <span class="nl">headers:</span> <span class="nb">nil</span><span class="p">).</span><span class="n">responseJSON</span> <span class="p">{</span> <span class="n">response</span> <span class="k">in</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">json</span> <span class="o">=</span> <span class="n">JSON</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">value</span> <span class="n">as</span> <span class="n">Any</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">guard</span> <span class="n">let</span> <span class="n">latitude</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;results&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;geometry&quot;</span><span class="p">][</span><span class="s">&quot;location&quot;</span><span class="p">][</span><span class="s">&quot;lat&quot;</span><span class="p">].</span><span class="kt">double</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">guard</span> <span class="n">let</span> <span class="n">longitude</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;results&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;geometry&quot;</span><span class="p">][</span><span class="s">&quot;location&quot;</span><span class="p">][</span><span class="s">&quot;lng&quot;</span><span class="p">].</span><span class="kt">double</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">completion</span><span class="p">(</span><span class="n">CLLocationCoordinate2D</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">latitude:</span> <span class="n">latitude</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="n">longitude</span><span class="p">))</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Directions APIの利用</h3>

<p>ここで実装する処理は <strong>開始地点から終了地点までの道順を取得する処理</strong> になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">CoreLocation</span>
</span><span class='line'><span class="n">import</span> <span class="n">Alamofire</span>
</span><span class='line'><span class="n">import</span> <span class="n">SwiftyJSON</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="n">Direction</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">/// API Key</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">apiKey:</span> <span class="n">String</span> <span class="o">=</span> <span class="n">String</span><span class="p">()</span>
</span><span class='line'>  <span class="c1">/// Geocoding APIのベースURL</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">let</span> <span class="nl">baseURL:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;https://maps.googleapis.com/maps/api/directions/json?language=ja&amp;mode=walking&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">/// 初期化処理</span>
</span><span class='line'>  <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;plist&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">&quot;googleWebApiKey&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">self</span><span class="p">.</span><span class="n">apiKey</span> <span class="o">=</span> <span class="n">apiKey</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">   目的地までの道順を取得</span>
</span><span class='line'>
</span><span class='line'><span class="cm">   - parameter from: 開始地点</span>
</span><span class='line'><span class="cm">   - parameter to: 終了地点</span>
</span><span class='line'><span class="cm">   - parameter completion: 道順を返すcallback</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">getRoutes</span><span class="p">(</span><span class="nl">from:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">,</span> <span class="nl">to:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">,</span> <span class="nl">completion:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">((</span><span class="n">JSON</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">requestURL</span> <span class="o">=</span> <span class="s">&quot;\(baseURL)&amp;key=\(String(describing: self.apiKey))&quot;</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">parameters</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;origin&quot;</span><span class="o">:</span> <span class="s">&quot;\(from.latitude),\(from.longitude)&quot;</span><span class="p">,</span> <span class="s">&quot;destination&quot;</span><span class="o">:</span> <span class="s">&quot;\(to.latitude),\(to.longitude)&quot;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="n">requestURL</span><span class="p">,</span> <span class="nl">method:</span> <span class="p">.</span><span class="n">get</span><span class="p">,</span> <span class="nl">parameters:</span> <span class="n">parameters</span><span class="p">,</span> <span class="nl">encoding:</span> <span class="n">URLEncoding</span><span class="p">.</span><span class="k">default</span><span class="p">,</span> <span class="nl">headers:</span> <span class="nb">nil</span><span class="p">).</span><span class="n">responseJSON</span> <span class="p">{</span> <span class="n">response</span> <span class="k">in</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">json</span> <span class="o">=</span> <span class="n">JSON</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">value</span> <span class="n">as</span> <span class="n">Any</span><span class="p">)</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">steps</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">&quot;routes&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;legs&quot;</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">&quot;steps&quot;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">completion</span><span class="p">(</span><span class="n">steps</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>今回はGoogleが提供している <strong>Geocoding API</strong> と <strong>Directions API</strong> について見てみました。<br/>
Google Mapを利用するサービスを考えると案外必要となる場面が多いんですよね。<br/>
知っておいて損はないかと思います。<br/>
本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geccoを使ったiOSアプリのチュートリアルを実装しよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/07/17/gecco/"/>
    <updated>2017-07-17T21:29:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/07/17/gecco</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>本日はアプリでのチュートリアル実装について見ていきたいと思います。<br/>
あまたあるOSSライブラリの中で筆者が注目したのは、<a href="https://github.com/yukiasai/Gecco">Gecco</a>です。<br/>
理由は</p>

<ul>
<li>Swiftで作られていること</li>
<li>GitHubでのStar数が多いこと</li>
<li>タップ箇所を誘導するUIであること</li>
</ul>


<p>です。<br/>
では早速見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Geccoのインストール</h3>

<p>CocoaPodsでインストールします。<br/>
以下のように <code>Podfile</code> を作成して、 <code>pod install</code> を実行してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp"># Podfile</span>
</span><span class='line'><span class="n">use_frameworks</span><span class="o">!</span>
</span><span class='line'><span class="n">platform</span> <span class="o">:</span><span class="n">ios</span><span class="p">,</span> <span class="err">&#39;</span><span class="mf">10.0</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="s">&quot;SampleApplication&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Gecco</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Geccoの使い方</h3>

<p>これまた実にシンプルです。</p>

<h4>スポットライトの表示</h4>

<p>タップを促すときなどに焦点を当てるためのスポットライトを表示させたいことがあると思います。<br/>
これを実現してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">Gecco</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">spotlightViewController:</span> <span class="n">SpotlightViewController</span><span class="o">!</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 初期化</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span> <span class="o">=</span> <span class="n">SpotlightViewController</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillAppear</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewWillAppear</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">present</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// スポットライトの表示</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span><span class="p">.</span><span class="n">spotlightView</span><span class="p">.</span><span class="n">appear</span><span class="p">(</span><span class="n">Spotlight</span><span class="p">.</span><span class="n">Oval</span><span class="p">(</span><span class="nl">center:</span> <span class="n">CGPoint</span><span class="p">(</span><span class="nl">x:</span> <span class="mi">100</span><span class="p">,</span> <span class="nl">y:</span> <span class="mi">100</span><span class="p">),</span> <span class="nl">diameter:</span> <span class="mi">50</span><span class="p">))</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のように初期化をして、<code>present</code>で画面遷移させる要領で表示させることができます。<br/>
また、上記例では円形のスポットライトが表示されますが、<br/>
スポットライトの形式には <code>Oval</code>(円) / <code>Rect</code>(長方形) / <code>RoundRect</code>(角丸長方形)の3つがあるため用途にあった形式を選択することができます。</p>

<h4>スポットライトに対するアクションを拾う</h4>

<p>続いて、下図のようにボタンタップを促す形で表示したスポットライトをタップしたことを検知して、次のチュートリアルに進みたいことがあると思います。</p>

<p><img src="http://grandbig.github.io/images/gecco_1.png" alt="ボタンの上にスポットライトの表示" /></p>

<p>これは <code>SpotlightViewControllerDelegate</code> を利用することになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">Gecco</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">SpotlightViewControllerDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">button:</span> <span class="n">UIButton</span><span class="o">!</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">spotlightViewController:</span> <span class="n">SpotlightViewController</span><span class="o">!</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 初期化</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span> <span class="o">=</span> <span class="n">SpotlightViewController</span><span class="p">()</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span><span class="o">?</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillAppear</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewWillAppear</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">present</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span><span class="p">.</span><span class="n">spotlightView</span><span class="p">.</span><span class="n">appear</span><span class="p">(</span><span class="n">Spotlight</span><span class="p">.</span><span class="n">Oval</span><span class="p">(</span><span class="nl">center:</span> <span class="n">CGPoint</span><span class="p">(</span><span class="nl">x:</span> <span class="mi">100</span><span class="p">,</span> <span class="nl">y:</span> <span class="mi">100</span><span class="p">),</span> <span class="nl">diameter:</span> <span class="mi">50</span><span class="p">))</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// SpotlightViewControllerをタップした場合</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">spotlightViewControllerTapped</span><span class="p">(</span><span class="n">_</span> <span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">isInsideSpotlight:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">isInsideSpotlight</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// スポットライトの内側をタップした場合</span>
</span><span class='line'>      <span class="c1">// SpotlightViewControllerを非表示にする</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">spotlightViewController</span><span class="p">.</span><span class="n">dismiss</span><span class="p">(</span><span class="nl">animated:</span> <span class="n">true</span><span class="p">,</span> <span class="nl">completion:</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">button</span><span class="p">.</span><span class="n">sendActions</span><span class="p">(</span><span class="k">for</span><span class="o">:</span> <span class="p">.</span><span class="n">touchUpInside</span><span class="p">)</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のようにタップの検知は <code>spotlightViewControllerTapped</code> で可能です。<br/>
また、 <code>isInsideSpotlight</code> を利用することでスポットライトの内側をタップしたかどうかも検知できます。<br/>
余談ですが、<br/>
スポットライトをタップしても、そのままではボタンをタップしたことにはなりません。<br/>
そのため、ボタンへのタップアクションを伝えるために <code>sendActions(for: .touchUpInside)</code> を利用します。</p>

<p><code>spotlightViewControllerTapped</code>以外にも<code>spotlightViewControllerWillPresent</code>や<code>spotlightViewControllerWillDismiss</code>もありますので、状況次第で利用すると良いかと思います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="n">objc</span> <span class="n">public</span> <span class="n">protocol</span> <span class="nl">SpotlightViewControllerDelegate:</span> <span class="n">class</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">optional</span> <span class="n">func</span> <span class="n">spotlightViewControllerWillPresent</span><span class="p">(</span><span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span>
</span><span class='line'>  <span class="n">optional</span> <span class="n">func</span> <span class="n">spotlightViewControllerWillDismiss</span><span class="p">(</span><span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span>
</span><span class='line'>  <span class="n">optional</span> <span class="n">func</span> <span class="n">spotlightViewControllerTapped</span><span class="p">(</span><span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">isInsideSpotlight:</span> <span class="n">Bool</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Geccoに機能を追加しよう</h3>

<p>デフォルトで用意されている機能以外に何らかの機能を合わせて使いたいこともあるでしょう。<br/>
そんなときは自ら実装するのが良いかと思います。</p>

<h4>チュートリアル用の説明を追加</h4>

<p>今回、筆者がGeccoを使った際に必要とした機能の中に <strong>説明表記</strong> がありました。<br/>
<code>GeccoExample</code> の中に <code>AnnotationViewController</code> が用意されていますので参考にさせて頂きました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// AnnotationViewController</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">Gecco</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">AnnotationViewController:</span> <span class="n">SpotlightViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">label:</span> <span class="n">UILabel</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillAppear</span><span class="p">(</span><span class="n">_</span> <span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewWillAppear</span><span class="p">(</span><span class="n">animated</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">updateLabel</span><span class="p">(</span><span class="n">_</span> <span class="nl">text:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">blackColor:</span> <span class="n">Bool</span> <span class="o">=</span> <span class="n">false</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">text</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">blackColor</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">black</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">white</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>筆者の場合、<code>UILabel</code>の位置は常に同じ場所で十分だったため上記のみの追加になっています。</p>

<h4>長押しジェスチャの追加</h4>

<p>今回、筆者がGeccoを使った際に必要とした機能の中に <strong>長押し検知</strong> がありました。<br/>
デフォルトで実装されていないため、GitHubからRepositoryをForkして機能追加することにしました。<br/>
コメントを記載した4箇所の追加のみで実装できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// SpotlightViewController</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">objc</span> <span class="n">public</span> <span class="n">protocol</span> <span class="nl">SpotlightViewControllerDelegate:</span> <span class="n">class</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">@</span><span class="n">objc</span> <span class="n">optional</span> <span class="n">func</span> <span class="n">spotlightViewControllerWillPresent</span><span class="p">(</span><span class="n">_</span> <span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span>
</span><span class='line'>  <span class="err">@</span><span class="n">objc</span> <span class="n">optional</span> <span class="n">func</span> <span class="n">spotlightViewControllerWillDismiss</span><span class="p">(</span><span class="n">_</span> <span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span>
</span><span class='line'>  <span class="err">@</span><span class="n">objc</span> <span class="n">optional</span> <span class="n">func</span> <span class="n">spotlightViewControllerTapped</span><span class="p">(</span><span class="n">_</span> <span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">isInsideSpotlight:</span> <span class="n">Bool</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">// (1)長押し検知</span>
</span><span class='line'>  <span class="err">@</span><span class="n">objc</span> <span class="n">optional</span> <span class="n">func</span> <span class="n">spotlightViewControllerLongPressed</span><span class="p">(</span><span class="n">_</span> <span class="nl">viewController:</span> <span class="n">SpotlightViewController</span><span class="p">,</span> <span class="nl">isInsideSpotlight:</span> <span class="n">Bool</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">open</span> <span class="n">class</span> <span class="nl">SpotlightViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">open</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">delegate:</span> <span class="n">SpotlightViewControllerDelegate</span><span class="o">?</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="n">open</span> <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">setupSpotlightView</span><span class="p">(</span><span class="n">alpha</span><span class="p">)</span>
</span><span class='line'>    <span class="n">setupContentView</span><span class="p">()</span>
</span><span class='line'>    <span class="n">setupTapGesture</span><span class="p">()</span>
</span><span class='line'>    <span class="c1">// (2)長押し処理の追加</span>
</span><span class='line'>    <span class="n">setupLongPressGesture</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">view</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">clear</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="c1">// (3)長押し処理ジェスチャの初期化</span>
</span><span class='line'>  <span class="n">fileprivate</span> <span class="n">func</span> <span class="n">setupLongPressGesture</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">gesture</span> <span class="o">=</span> <span class="n">UILongPressGestureRecognizer</span><span class="p">(</span><span class="nl">target:</span> <span class="n">self</span><span class="p">,</span> <span class="nl">action:</span> <span class="err">#</span><span class="n">selector</span><span class="p">(</span><span class="n">SpotlightViewController</span><span class="p">.</span><span class="n">viewLongPressed</span><span class="p">(</span><span class="nl">_:</span><span class="p">)));</span>
</span><span class='line'>    <span class="n">view</span><span class="p">.</span><span class="n">addGestureRecognizer</span><span class="p">(</span><span class="n">gesture</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">SpotlightViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="c1">// (4)長押し時に実行される処理を追加</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">viewLongPressed</span><span class="p">(</span><span class="n">_</span> <span class="nl">gesture:</span> <span class="n">UILongPressGestureRecognizer</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">pressPoint</span> <span class="o">=</span> <span class="n">gesture</span><span class="p">.</span><span class="n">location</span><span class="p">(</span><span class="k">in</span><span class="o">:</span> <span class="n">spotlightView</span><span class="p">)</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">isInside</span> <span class="o">=</span> <span class="n">spotlightView</span><span class="p">.</span><span class="n">spotlight</span><span class="o">?</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">contains</span><span class="p">(</span><span class="n">pressPoint</span><span class="p">)</span> <span class="o">??</span> <span class="n">false</span>
</span><span class='line'>    <span class="n">delegate</span><span class="o">?</span><span class="p">.</span><span class="n">spotlightViewControllerLongPressed</span><span class="o">?</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="nl">pressPoint:</span> <span class="n">pressPoint</span><span class="p">,</span> <span class="nl">isInsideSpotlight:</span> <span class="n">isInside</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
今回はチュートリアル用に利用する <code>Gecco</code> ライブラリについて紹介させて頂きました。<br/>
チュートリアルにはGoogleがよく使うような初めに説明スライドを数枚用意する方式もあるかと思います。<br/>
ケースによって使い分けると良いんでしょうね。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Maps SDK for iOSを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/07/16/google-maps-sdk-2/"/>
    <updated>2017-07-16T23:43:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/07/16/google-maps-sdk-2</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>前回、<a href="http://grandbig.github.io/blog/2017/06/18/google-maps-sdk/">Google Maps SDK for iOSを導入してみよう！</a>について説明しましたが、今回はもう一歩踏み込んで使い方を見ていこうと思います。</p>

<p>これまた本家の<a href="https://developers.google.com/maps/documentation/ios-sdk/start?hl=ja">Google スタートガイド</a>を見ればできることも多いのですが、見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Google Mapにマーカを配置する</h3>

<p>Google Mapを使う上で必ずと言っていいほど利用する機能である「マーカの配置」を見ていきましょう。<br/>
これは実に簡単で「マーカを配置するメソッド」はたった下記だけで実装できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  マップにマーカを設置する処理</span>
</span><span class='line'>
</span><span class='line'><span class="cm">  - parameter title: マーカのタイトル</span>
</span><span class='line'><span class="cm">  - parameter coordinate: 位置</span>
</span><span class='line'><span class="cm">  - parameter iconName: アイコン名</span>
</span><span class='line'><span class="cm">  - parameter completion: Callback</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">private</span> <span class="n">func</span> <span class="nf">putMarker</span><span class="p">(</span><span class="nl">title:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="nl">coordinate:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">,</span> <span class="nl">iconName:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="nl">completion:</span> <span class="err">@</span><span class="n">escaping</span> <span class="p">((</span><span class="n">GMSMarker</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// マーカの生成</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">marker</span> <span class="o">=</span> <span class="n">GMSMarker</span><span class="p">()</span>
</span><span class='line'>  <span class="n">marker</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="n">title</span>
</span><span class='line'>  <span class="n">marker</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">coordinate</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">iconName</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// アイコン名が指定されている場合は画像を設定</span>
</span><span class='line'>    <span class="n">marker</span><span class="p">.</span><span class="n">icon</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">named:</span> <span class="n">iconName</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">marker</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">mapView</span>
</span><span class='line'>  <span class="n">completion</span><span class="p">(</span><span class="n">marker</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Google Mapからマーカを削除する</h3>

<p>逆にGoogle Mapからマーカを削除する場合はどうするかを見ていきます。<br/>
これも簡単なので、下記のように実装できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  マップからマーカを削除する処理</span>
</span><span class='line'>
</span><span class='line'><span class="cm">  - parameter marker: マーカ</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">private</span> <span class="n">func</span> <span class="nf">deleteMarker</span><span class="p">(</span><span class="nl">marker:</span> <span class="n">GMSMarker</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">marker</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>2つのマーカが入る縮尺にGoogle Mapを変更する</h3>

<p>こちらはGoogle Mapを捉えるカメラの位置を移動することで実現可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  現在地と指定した場所の両方が入るようにマップの縮尺を変更する処理</span>
</span><span class='line'>
</span><span class='line'><span class="cm">  - parameter coordinate: 場所</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">private</span> <span class="n">func</span> <span class="n">changeCameraPosition</span><span class="p">(</span><span class="nl">fromCoordinate:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">,</span> <span class="nl">toCoordinate:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">bounds</span> <span class="o">=</span> <span class="n">GMSCoordinateBounds</span><span class="p">(</span><span class="nl">coordinate:</span> <span class="n">fromCoordinate</span><span class="p">,</span> <span class="nl">coordinate:</span> <span class="n">toCoordinate</span><span class="p">)</span>
</span><span class='line'>  <span class="n">let</span> <span class="nl">margin:</span> <span class="n">CGFloat</span> <span class="o">=</span> <span class="mf">50.0</span>  <span class="c1">// 上下左右に設定するマージン</span>
</span><span class='line'>  <span class="n">guard</span> <span class="n">let</span> <span class="n">camera</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">camera</span><span class="p">(</span><span class="k">for</span><span class="o">:</span> <span class="n">bounds</span><span class="p">,</span> <span class="nl">insets:</span> <span class="n">UIEdgeInsets</span><span class="p">(</span><span class="nl">top:</span> <span class="n">margin</span><span class="p">,</span> <span class="nl">left:</span> <span class="n">margin</span><span class="p">,</span> <span class="nl">bottom:</span> <span class="n">margin</span><span class="p">,</span> <span class="nl">right:</span> <span class="n">margin</span><span class="p">))</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">camera</span> <span class="o">=</span> <span class="n">camera</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Google Mapに線を描画する</h3>

<p>これもそんなに難しくありません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="o">!</span>
</span><span class='line'><span class="n">private</span> <span class="n">var</span> <span class="nl">routePath:</span> <span class="n">GMSPolyline</span> <span class="o">=</span> <span class="n">GMSPolyline</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  マップへの線描画</span>
</span><span class='line'>
</span><span class='line'><span class="cm">  - parameter fromCoordinate: 起点位置</span>
</span><span class='line'><span class="cm">  - parameter toCoordinate: 終点位置</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">private</span> <span class="n">func</span> <span class="n">drawPolyline</span><span class="p">(</span><span class="nl">fromCoordinate:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">,</span> <span class="nl">toCoordinate:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">GMSMutablePath</span><span class="p">()</span>
</span><span class='line'>  <span class="n">path</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">fromCoordinate</span><span class="p">)</span>
</span><span class='line'>  <span class="n">path</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">toCoordinate</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">routePath</span> <span class="o">=</span> <span class="n">GMSPolyline</span><span class="p">(</span><span class="nl">path:</span> <span class="n">path</span><span class="p">)</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">routePath</span><span class="p">.</span><span class="n">strokeWidth</span> <span class="o">=</span> <span class="mf">3.0</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">routePath</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">mapView</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Google Mapから線を削除する</h3>

<p>先程描画した線を削除するには下記で実行できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">private</span> <span class="n">var</span> <span class="nl">routePath:</span> <span class="n">GMSPolyline</span> <span class="o">=</span> <span class="n">GMSPolyline</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  マップへの描画線を削除する処理</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">private</span> <span class="n">func</span> <span class="n">clearRoutePath</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">routePath</span><span class="p">.</span><span class="n">map</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>緯度/経度とピクセル座標の相互変換</h3>

<p>これは利用ケースが限られるかもしれませんが、覚えておくと役に立つ処理です。<br/>
Google Mapは複数のマップ座標を扱うことができます。</p>

<ul>
<li>緯度/経度を用いて地球上にプロット</li>
<li>世界座標: メルカトル図法を用いて緯度/経度を地図に変換した座標</li>
<li>ピクセル座標: 世界座標を指定したズームレベルで変換した座標</li>
<li>タイル座標: 地図を複数の画像に分けたときの座標</li>
</ul>


<p>ほとんどの場合は緯度/経度をマップにプロットすると思いますが、<br/>
筆者は先日ピクセル座標を利用する場面がありました。</p>

<p>それは、「Google Mapの上に透過Viewが載せられた状態でGoogle Mapにマーカを配置する」というものでした。
今回はこれを例に変換方法を見ていきましょう。</p>

<h4>ピクセル座標を緯度/経度に変換</h4>

<p>これはGoogle Maps SDKに用意されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="n">pressPoint</span> <span class="o">=</span> <span class="n">CGPoint</span><span class="p">(</span><span class="nl">x:</span> <span class="mi">100</span><span class="p">,</span> <span class="nl">y:</span> <span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="n">let</span> <span class="n">coordinate</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">projection</span><span class="p">.</span><span class="n">coordinate</span><span class="p">(</span><span class="k">for</span><span class="o">:</span> <span class="n">pressPoint</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>たったのこれだけでピクセル座標を緯度/経度に変換できるんです。</p>

<h4>緯度/経度をピクセル座標に変換</h4>

<p>これもGoogle Maps SDKに用意されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="n">coordinate</span> <span class="o">=</span> <span class="n">CLLocationCoordinate2D</span><span class="p">(</span><span class="nl">latitude:</span> <span class="mi">35</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="mi">139</span><span class="p">)</span>
</span><span class='line'><span class="n">let</span> <span class="n">point</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">projection</span><span class="p">.</span><span class="n">point</span><span class="p">(</span><span class="k">for</span><span class="o">:</span> <span class="n">coordinate</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
JavaScriptでGoogle Maps APIを利用していた方々も臆することなく使えるような簡単さだと思います。<br/>
次回はGeocoding APIやDirection APIを見ていきたいと思います。</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[足跡計 ver1.0.3の紹介]]></title>
    <link href="http://grandbig.github.io/blog/2017/06/29/footstepmeter-ver1-dot-0-3/"/>
    <updated>2017-06-29T22:50:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/06/29/footstepmeter-ver1-dot-0-3</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>本日はいつもと趣向を変えて、最近作り直したアプリについて紹介したいと思います。<br/>
それは<a href="https://itunes.apple.com/jp/app/%E8%B6%B3%E8%B7%A1%E8%A8%88/id725412788?mt=8">足跡計</a>というアプリです。<br/>
これは実に3年半以上昔に作成したアプリで、v1.0.0リリース後に一度も更新をしていませんでした&hellip;。</p>

<p>そんな状況なので当たり前ではあるのですが、<br/>
前々からAppleより警告が来ていたものの対応せずにいたら、とうとうApp Storeから削除されてしまいました。　　</p>

<p>最近、iOSアプリ開発を仕事でもする機会がなくなっていた筆者にとって、これを良い機会だと捉え、アプリを作り直してみることにしました。</p>

<p><a href="https://itunes.apple.com/jp/app/zu-ji-ji/id725412788?mt=8&uo=4" target="itunes_store"style="display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/htmlResources/assets/ja_jp//images/web/linkmaker/badge_appstore-lrg.png) no-repeat;width:135px;height:40px;@media only screen{background-image:url(https://linkmaker.itunes.apple.com/htmlResources/assets/ja_jp//images/web/linkmaker/badge_appstore-lrg.svg);}"></a></p>

<!-- more -->


<h3>アプリの紹介</h3>

<p>まずはアプリの機能について紹介してみたいと思います。<br/>
基本的にはv1.0.0からそんなに変えてはいません。</p>

<p>アイコンはこちらになります。</p>

<p><img src="http://grandbig.github.io/images/footStepMeter_Icon.png" alt="足跡計のアイコン" /></p>

<h4>移動経路の計測</h4>

<p>メイン機能として <strong>移動経路の計測</strong> が可能です。<br/>
手順は実に簡単で、</p>

<ol>
<li>初期画面にてタブの『開始』ボタンをタップします</li>
<li>計測したい精度を選択します</li>
<li>計測する経路のタイトルを設定します</li>
</ol>


<p>以上となります。</p>

<p><img src="http://grandbig.github.io/images/footStepMeter4.png" alt="移動経路の計測手順" /></p>

<p>計測したい精度の種類としては、</p>

<ul>
<li>最高精度: kCLLocationAccuracyBestForNavigation</li>
<li>高精度: kCLLocationAccuracyBest</li>
<li>10m誤差: kCLLocationAccuracyNearestTenMeters</li>
<li>100m誤差: kCLLocationAccuracyHundredMeters</li>
<li>1km誤差: kCLLocationAccuracyKilometer</li>
<li>3km誤差: kCLLocationAccuracyThreeKilometers</li>
</ul>


<p>となっています。</p>

<h4>過去経路の閲覧</h4>

<p>計測直後の経路を見ることはもちろん、過去の経路を閲覧することもできます。<br/>
また、経路表示のために配置しているアイコンを「人の足跡アイコン」と「動物の足跡アイコン」の2つを切り替えることが可能です。</p>

<p>さらに、もう1つの機能として、過去経路のデータをCSVファイルとしてメールで送信することができます。</p>

<p><img src="http://grandbig.github.io/images/footStepMeter5.png" alt="過去の経路の閲覧" /></p>

<h3>アプリの実装</h3>

<p>さて、続いて、アプリの実装部分、中身について紹介したいと思います。<br/>
実コードは<a href="https://github.com/grandbig/footStepMeter">GitHub: footStepMeter</a>を見て頂ければわかるのですが、かいつまんで少々説明したいと思います。</p>

<h4>プロジェクト構成</h4>

<p>プロジェクト構成は下記の通りです。<br/>
シンプルにMVCで実装しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">footStepMeter</span>
</span><span class='line'><span class="err">├──</span> <span class="n">Enum</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="n">LocationAccuracy</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">Model</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="n">Location</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="n">Footprint</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="n">FootprintManager</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="n">CustomAnnotation</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="n">UIImage</span><span class="o">+</span><span class="n">Extension</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">View</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="n">PickerView</span><span class="p">.</span><span class="n">xib</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="n">PickerView</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">AppDelegate</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">ViewController</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">SettingViewController</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">FootprintsViewController</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">AboutViewController</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">LicenceViewController</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">├──</span> <span class="n">HistoryViewController</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="err">└──</span> <span class="n">Main</span><span class="p">.</span><span class="n">storyboard</span>
</span></code></pre></td></tr></table></div></figure>


<p>本当は <code>ViewController</code>系をフォルダにまとめても良かったのですが、そのままにしています。<br/>
あとMain.storyboardも<code>View</code>フォルダ配下においても良かったのですが、これもそのままにしています。</p>

<h4>利用OSSライブラリ</h4>

<p>今回導入したOSSライブラリは以下の通りです。</p>

<ul>
<li><a href="https://github.com/realm/realm-cocoa/tree/master/RealmSwift">Realm / RealmSwift</a><br/>
足跡のデータを端末内部に保存するために利用しています。<br/>
因みに、V1.0.0では<a href="https://github.com/ccgus/fmdb">fmdb</a>を使っていました。</li>
<li><a href="https://github.com/Quick/Quick">Quick</a><br/>
UIテストのために利用しています。</li>
</ul>


<h4>各クラスの説明</h4>

<p>少し、各クラスの説明や意図についても紹介します。</p>

<h5>Enum/LocationAccuracy.swift</h5>

<p>わざわざ <code>Enum/LocationAccuracy.swift</code> を用意した理由としては、位置情報の精度は各種クラスで利用する可能性があるためです。<br/>
実際は <code>Model/Location.swift</code> と <code>View/PickerView.swift</code> で利用しています。</p>

<h5>Model/Location.swift</h5>

<p>位置情報関連のロジック処理を書いています。<br/>
実態は <code>CLLocationManagerDelegate</code> を逃した感じになっています。</p>

<h5>Model/Footprint.swift</h5>

<p><code>RealmSwift</code>を利用しているので、保存するモデルの形式ですね。</p>

<h5>Model/FootprintManager.swift</h5>

<p><code>RealmSwift</code>を用いてデータの保存/取得/削除などを管理するクラスです。</p>

<h5>View/PickerView.swift</h5>

<p><code>UIPickerView</code>は<code>UITableView</code>に負けず劣らず面倒な作業が多いので、<code>ViewController</code>からは切り離して扱っています。<br/>
<code>Main.storyboard</code>に配置することはできなくもないのですが、</p>

<ul>
<li>必要な機会が少ないのに、<code>UITabBar</code>などの他の要素と被って配置されるのが気になる</li>
<li>初めは非表示状態にしたい</li>
</ul>


<p>の理由から <code>ViewController</code> で <code>self.view.addSubView(pickerView!)</code> として要素を追加しています。</p>

<p>位置情報の精度を選択するときに利用するので、ピッカーの各行に精度を表示する必要があります。<br/>
そこで <code>Enum/LocationAccuracy.swift</code> で定義した値を利用しています。</p>

<h3>アプリのテストについて</h3>

<p><code>Quick</code>を導入した本格的なテストを実装することを考えていたものの、実際にはあまり書けていません&hellip;</p>

<p><code>FootprintManager.swift</code>の単体テスト用に<code>FootprintManagerTests.swift</code>を実装しました。<br/>
中身は<a href="http://grandbig.github.io/blog/2017/05/06/quick-2/">QuickでSwiftコードのUnitテストをしよう！(2)</a>で書いた内容です。</p>

<p>View系のテストも実装しようと思ったものの、下記のように途中までしか書けていません。<br/>
(というのも、View系だとUIテストの方に譲った方が実装しやすいのかなと思ったからなんですよね。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewControllerTests.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Quick</span>
</span><span class='line'><span class="n">import</span> <span class="n">Nimble</span>
</span><span class='line'><span class="n">import</span> <span class="n">RealmSwift</span>
</span><span class='line'><span class="err">@</span><span class="n">testable</span> <span class="n">import</span> <span class="n">footStepMeter</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewControllerTests:</span> <span class="n">QuickSpec</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">subject:</span> <span class="n">ViewController</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">beforeEach</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// StoryboardからViewControllerを初期化</span>
</span><span class='line'>            <span class="n">subject</span> <span class="o">=</span> <span class="n">UIStoryboard</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;Main&quot;</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="nb">nil</span><span class="p">).</span><span class="n">instantiateViewController</span><span class="p">(</span><span class="nl">withIdentifier:</span> <span class="s">&quot;ViewController&quot;</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="n">ViewController</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">view</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">statusBarView</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">navigationBar</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">mapView</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">tabBar</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">currentLocationButton</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">countLabel</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">it</span><span class="p">(</span><span class="s">&quot;countLabel default is ****&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">countLabel</span><span class="p">.</span><span class="n">text</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;****&quot;</span><span class="p">))</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">it</span><span class="p">(</span><span class="s">&quot;User&#39;s current location move when tapped currentLocationButton&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">subject</span><span class="p">.</span><span class="n">currentLocationButton</span><span class="p">.</span><span class="n">sendActions</span><span class="p">(</span><span class="k">for</span><span class="o">:</span> <span class="n">UIControlEvents</span><span class="p">.</span><span class="n">touchUpInside</span><span class="p">)</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">region</span><span class="p">.</span><span class="n">span</span><span class="p">.</span><span class="n">latitudeDelta</span><span class="p">)</span>
</span><span class='line'>            <span class="n">print</span><span class="p">(</span><span class="n">subject</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">region</span><span class="p">.</span><span class="n">span</span><span class="p">.</span><span class="n">longitudeDelta</span><span class="p">)</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">String</span><span class="p">(</span><span class="nl">format:</span> <span class="s">&quot;%.2f&quot;</span><span class="p">,</span> <span class="n">subject</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">region</span><span class="p">.</span><span class="n">span</span><span class="p">.</span><span class="n">latitudeDelta</span><span class="p">)).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;0.06&quot;</span><span class="p">))</span>
</span><span class='line'>            <span class="n">expect</span><span class="p">(</span><span class="n">String</span><span class="p">(</span><span class="nl">format:</span> <span class="s">&quot;%.2f&quot;</span><span class="p">,</span> <span class="n">subject</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">region</span><span class="p">.</span><span class="n">span</span><span class="p">.</span><span class="n">longitudeDelta</span><span class="p">)).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;0.05&quot;</span><span class="p">))</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>UIテストもRecording機能を使って、少し実装したものの、やっぱり手で書かなくてはいけない部分が出てくるな〜と思い、一旦止めています。<br/>
(ま、当たり前なんですけどね。)</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
今回はiOSアプリ開発およびSwiftコーディングのリハビリも兼ねて進めてみました。<br/>
また別のアプリ開発も考えていたりするので、完成でき次第、どんどんブログでも紹介できればと思います。</p>

<p>と言ったところで本日はここまで。</p>

<p><a href="https://itunes.apple.com/jp/app/zu-ji-ji/id725412788?mt=8&uo=4" target="itunes_store"style="display:inline-block;overflow:hidden;background:url(https://linkmaker.itunes.apple.com/htmlResources/assets/ja_jp//images/web/linkmaker/badge_appstore-lrg.png) no-repeat;width:135px;height:40px;@media only screen{background-image:url(https://linkmaker.itunes.apple.com/htmlResources/assets/ja_jp//images/web/linkmaker/badge_appstore-lrg.svg);}"></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Maps SDK for iOSを導入してみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/06/18/google-maps-sdk/"/>
    <updated>2017-06-18T19:47:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/06/18/google-maps-sdk</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>本日は<a href="https://developers.google.com/maps/documentation/ios-sdk/?hl=ja">Google Maps SDK for iOS</a>の導入の仕方を書きたいと思います。<br/>
(<a href="https://grandbig.github.io/blog/2014/01/27/googlemapssdk2/">3年以上前</a>に遊んでいたようですが、全く記憶にない&hellip;)</p>

<p>基本的には、<a href="https://developers.google.com/maps/documentation/ios-sdk/start?hl=ja">本家のスタートガイド</a>に従って進めるだけで特に問題なく<code>Google Map</code>を実装できるでしょう。<br/>
筆者の場合は<code>Storyboard</code>を使いたかったので少し気をつける必要がありました。<br/>
では早速見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>Google Maps SDK for iOSの導入</h3>

<p>実際に手順を書いていきます。</p>

<p><strong>１．Xcodeでプロジェクトを作成します。</strong><br/>
<strong>２．<code>Podfile</code>を作成します。</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp"># Podfile</span>
</span><span class='line'><span class="n">use_frameworks</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="s">&quot;GoogleMapsSample&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="err">#</span> <span class="n">Normal</span> <span class="n">libraries</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">GoogleMaps</span><span class="err">&#39;</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">GooglePlaces</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">abstract_target</span> <span class="err">&#39;</span><span class="n">Tests</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">inherit</span><span class="o">!</span> <span class="o">:</span><span class="n">search_paths</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;GoogleMapsSampleTests&quot;</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;GoogleMapsSampleUITests&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Quick</span><span class="err">&#39;</span>
</span><span class='line'>    <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Nimble</span><span class="err">&#39;</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post_install</span> <span class="k">do</span> <span class="o">|</span><span class="n">installer</span><span class="o">|</span>
</span><span class='line'>  <span class="n">installer</span><span class="p">.</span><span class="n">pods_project</span><span class="p">.</span><span class="n">targets</span><span class="p">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">target</span><span class="o">|</span>
</span><span class='line'>    <span class="n">target</span><span class="p">.</span><span class="n">build_configurations</span><span class="p">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>      <span class="n">config</span><span class="p">.</span><span class="n">build_settings</span><span class="p">[</span><span class="err">&#39;</span><span class="n">SWIFT_VERSION</span><span class="err">&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="err">&#39;</span><span class="mf">3.0</span><span class="err">&#39;</span>
</span><span class='line'>    <span class="n">end</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>３．<code>pod install</code>で必要な<code>Framework</code>をインストールします。</strong><br/>
<strong>４．APIキーを取得します。</strong><br/>
スタートガイドに従って下記ボタンをクリックすればAPIキーを取得することができます。</p>

<p><img src="http://grandbig.github.io/images/google-maps-sdk-1.png" alt="APIキーの取得" /></p>

<p><strong>５．アプリのAPIキーを読み取らせる処理を導入します。</strong><br/>
筆者の場合、基本的なソースコードは<code>GitHub</code>に公開したかったため、そのままAPIキーをべた書きするわけにいきませんでした。<br/>
なので、<code>key.plist</code>ファイルを作成し、このファイルを<code>GitHub</code>にアップしないという手法を取ることにしました。</p>

<p>下図のように<code>key.plist</code>ファイルを作成</p>

<p><img src="http://grandbig.github.io/images/google-maps-sdk-2.png" alt="key.plistの作成" /></p>

<p>また下図のようなフォルダ構成で<code>Info.plist</code>と同じ階層に<code>key.plist</code>を配置しています。<br/>
<img src="http://grandbig.github.io/images/google-maps-sdk-6.png" alt="フォルダ構成" /></p>

<p><code>AppDelegate.swift</code>で<code>key.plist</code>からAPIキーを読み込みます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// AppDelegate.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'><span class="n">import</span> <span class="n">GooglePlaces</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="n">_</span> <span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="p">[</span><span class="nl">UIApplicationLaunchOptionsKey:</span> <span class="n">Any</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">let</span> <span class="n">path</span> <span class="o">=</span> <span class="n">Bundle</span><span class="p">.</span><span class="n">main</span><span class="p">.</span><span class="n">path</span><span class="p">(</span><span class="nl">forResource:</span> <span class="s">&quot;key&quot;</span><span class="p">,</span> <span class="nl">ofType:</span> <span class="s">&quot;plist&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">let</span> <span class="n">dic</span> <span class="o">=</span> <span class="n">NSDictionary</span><span class="p">(</span><span class="nl">contentsOfFile:</span> <span class="n">path</span><span class="p">)</span> <span class="n">as</span><span class="o">?</span> <span class="p">[</span><span class="nl">String:</span> <span class="n">Any</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">let</span> <span class="n">apiKey</span> <span class="o">=</span> <span class="n">dic</span><span class="p">[</span><span class="s">&quot;googleMapsApiKey&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">GMSServices</span><span class="p">.</span><span class="n">provideAPIKey</span><span class="p">(</span><span class="n">apiKey</span><span class="p">)</span>
</span><span class='line'>          <span class="n">GMSPlacesClient</span><span class="p">.</span><span class="n">provideAPIKey</span><span class="p">(</span><span class="n">apiKey</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>６．<code>Storyboard</code>に<code>Google Map</code>を追加します。</strong><br/>
本家スタートガイドだと<code>Storyboard</code>を利用しない方式での説明が書かれていましたが、筆者は<code>Storyboard</code>を利用しました。</p>

<p><img src="http://grandbig.github.io/images/google-maps-sdk-3.png" alt="StoryboardにGoogle Mapを配置" /></p>

<p>これで導入が完了です。</p>

<h3>Google Cloud PlatformのAPI Managerで詳細設定</h3>

<p>先程、本家のスタートガイドからAPIキーを取得していましたが、<a href="https://console.cloud.google.com/home">Google Cloud Platform</a>内の<code>API Manager</code>からAPIキーに対して詳細設定をすることができます。<br/>
例えば、スタートガイドから取得しただけでは、APIキーの用途が無制限になっています。<br/>
この状態では意図しない大量利用に繋がる可能性もあるため、iOSアプリでのみ利用するなど詳細を設定した方が良いでしょう。</p>

<p><code>API Manager</code>ページには下記のように遷移できます。<br/>
<img src="http://grandbig.github.io/images/google-maps-sdk-4.png" alt="Google Cloud Platform" /></p>

<p>APIキーの詳細設定は下記の通りです。<br/>
<img src="http://grandbig.github.io/images/google-maps-sdk-5.png" alt="APIキーの詳細設定" /></p>

<h3>Google Mapで初期描画時の中心位置を現在地にしてみる</h3>

<p>Apple標準で用意されている<code>MapKit</code>であれば、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">setUserTrackingMode</span><span class="p">(</span><span class="n">MKUserTrackingMode</span><span class="p">.</span><span class="n">follow</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>とすれば良いだけでした。<br/>
しかし、<code>Google Map</code>では同様の手立てがなさそうなので、下記のように対応しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">GoogleMaps</span>
</span><span class='line'><span class="n">import</span> <span class="n">GooglePlaces</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">GMSMapViewDelegate</span><span class="p">,</span> <span class="n">CLLocationManagerDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">mapView:</span> <span class="n">GMSMapView</span><span class="o">!</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">locationManager:</span> <span class="n">CLLocationManager</span><span class="o">?</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">currentLocation:</span> <span class="n">CLLocation</span><span class="o">?</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">placesClient:</span> <span class="n">GMSPlacesClient</span><span class="o">!</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">zoomLevel:</span> <span class="n">Float</span> <span class="o">=</span> <span class="mf">15.0</span>
</span><span class='line'>  <span class="c1">/// 初期描画の判断に利用</span>
</span><span class='line'>  <span class="n">private</span> <span class="n">var</span> <span class="nl">initView:</span> <span class="n">Bool</span> <span class="o">=</span> <span class="n">false</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>    <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// GoogleMapの初期化</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">isMyLocationEnabled</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">mapType</span> <span class="o">=</span> <span class="n">GMSMapViewType</span><span class="p">.</span><span class="n">normal</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">compassButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">settings</span><span class="p">.</span><span class="n">myLocationButton</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 位置情報関連の初期化</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span> <span class="o">=</span> <span class="n">CLLocationManager</span><span class="p">()</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">desiredAccuracy</span> <span class="o">=</span> <span class="n">kCLLocationAccuracyBest</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">requestAlwaysAuthorization</span><span class="p">()</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">distanceFilter</span> <span class="o">=</span> <span class="mi">50</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">startUpdatingLocation</span><span class="p">()</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">placesClient</span> <span class="o">=</span> <span class="n">GMSPlacesClient</span><span class="p">.</span><span class="n">shared</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">didReceiveMemoryWarning</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">didReceiveMemoryWarning</span><span class="p">()</span>
</span><span class='line'>    <span class="c1">// Dispose of any resources that can be recreated.</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: CLLocationManagerDelegate</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">locationManager</span><span class="p">(</span><span class="n">_</span> <span class="nl">manager:</span> <span class="n">CLLocationManager</span><span class="p">,</span> <span class="n">didUpdateLocations</span> <span class="nl">locations:</span> <span class="p">[</span><span class="n">CLLocation</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">!</span><span class="n">self</span><span class="p">.</span><span class="n">initView</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 初期描画時のマップ中心位置の移動</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">camera</span> <span class="o">=</span> <span class="n">GMSCameraPosition</span><span class="p">.</span><span class="n">camera</span><span class="p">(</span><span class="nl">withTarget:</span> <span class="p">(</span><span class="n">locations</span><span class="p">.</span><span class="n">last</span><span class="o">?</span><span class="p">.</span><span class="n">coordinate</span><span class="p">)</span><span class="o">!</span><span class="p">,</span> <span class="nl">zoom:</span> <span class="n">self</span><span class="p">.</span><span class="n">zoomLevel</span><span class="p">)</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">camera</span> <span class="o">=</span> <span class="n">camera</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">locationManager</span><span class="o">?</span><span class="p">.</span><span class="n">stopUpdatingLocation</span><span class="p">()</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">initView</span> <span class="o">=</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは<code>viewDidLoad</code>時に<code>startUpdatingLocation()</code>で位置情報の取得を開始し、取得したタイミングである<code>didUpdateLocations</code>内で位置情報を<code>camera</code>に設定しています。<br/>
(もっと良い方法がありそうな気もしますが、一旦これで様子見&hellip;)</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
これから<code>Google Maps SDK for iOS</code>をバシバシ使っていきたいと思っているので理解が進み次第、続きを書いていきたいと思います。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOSでヘッダーを設定する3つの方法]]></title>
    <link href="http://grandbig.github.io/blog/2017/06/17/ios-header/"/>
    <updated>2017-06-17T14:27:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/06/17/ios-header</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は今更ではありますが、iOSでヘッダーを作るための方法について書いていきたいと思います。</p>

<ul>
<li>代表的な方法

<ul>
<li><code>NavigationController</code>を利用する方法</li>
<li><code>UIView</code> + <code>UINavigationBar</code>を利用する方法</li>
<li><code>UINavigationBar</code>の高さをカスタマイズする方法</li>
</ul>
</li>
</ul>


<p>1つずつ見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>NavigationControllerを利用する方法</h3>

<p>最も少ない手間でヘッダーを作るなら<code>NavigationController</code>ではないでしょうか。<br/>
幾つかメリット/デメリットを上げてみます。</p>

<ul>
<li>メリット

<ul>
<li>最も簡単にヘッダーを作成できる(Editor > Embed In > Navigation Controller)</li>
<li>画面遷移の設定が簡単(戻るも自動で設定される)</li>
<li>ステータスバー(最上部の縦20pxの領域)を考慮する必要なし</li>
</ul>
</li>
<li>デメリット

<ul>
<li>ヘッダーの不要な画面に遷移するときにヘッダーの非表示をコードで書く必要がある</li>
<li>画面遷移時のアニメーション変更に手間がかかる</li>
</ul>
</li>
</ul>


<h3>UIView + UINavigationBarを利用する方法</h3>

<p>Storyboardを利用するなら初めに上げた「<code>NavigationController</code>を利用する方法」か「<code>UIView</code> + <code>UINavigationBar</code>を利用する方法」を使うと良いでしょう。<br/>
わざわざ<code>UIView</code>を利用する理由は、ただ単に<code>UINavigationBar</code>のみを配置すると、ステータスバー領域に邪魔されて表示が崩れてしまうためです。<br/>
これを回避するためだけに<code>UIView</code>を配置するという方法です。</p>

<p>具体的には下図のような配置になります。</p>

<p><img src="http://grandbig.github.io/images/ios_header_1.png" alt="UIView + UINavigationBarの例" /></p>

<ul>
<li>メリット

<ul>
<li>Storyboard上でキレイに見える方法でヘッダーを作成できる</li>
<li>画面遷移先でヘッダーが不要であれば配置しなければOK</li>
<li>画面遷移時のアニメーションのデフォルト選択肢が多い</li>
</ul>
</li>
<li>デメリット

<ul>
<li>画面遷移先でヘッダーが必要な場合は毎回<code>UIView</code>を配置する必要がある(色の透過の考慮など面倒な側面あり)</li>
</ul>
</li>
</ul>


<h3>UINavigationBarの高さをカスタマイズする方法</h3>

<p>割りと昔からある方法です。<br/>
ただし、昔(iOS6以前)は純粋の<code>UINavigationBar</code>の高さを変更したいという用途で使われていました。<br/>
今回は通常の<code>UINavigationBar</code>ではステータスバーと被ってしまうため、ステータスバー分の高さを拡張したいという用途で利用します。</p>

<p>高さをステータスバー分、拡張した<code>CustomNavigationBar</code>は下記のように作成できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// CustomNavigationBar.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">CustomNavigationBar:</span> <span class="n">UINavigationBar</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">layoutSubviews</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">layoutSubviews</span><span class="p">()</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRect</span><span class="p">(</span><span class="nl">x:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">y:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">width:</span> <span class="n">super</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="nl">height:</span> <span class="mi">64</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これをStoryboardで利用するのをオススメしないのは他のパーツと組み合わせて利用する際に、<code>AutoLayout</code>を利用して(客観的に見たら謎の)マージンを設定しないとならないためです。</p>

<p><img src="http://grandbig.github.io/images/ios_header_2.png" alt="CustomeNavigationBarをStoryboardで設定" /><br/>
<img src="http://grandbig.github.io/images/ios_header_3.png" alt="20のマージンを設定しないといけない" /></p>

<p>一応、メリット/デメリットも書いておきます。</p>

<ul>
<li>メリット

<ul>
<li>「<code>UIView</code> + <code>UINavigationBar</code>を利用する方法」よりもソースコードがスマート(機能拡張して利用しているという意味で。)</li>
<li>(ソースコードで書いて実装することを前提にするなら)自由度が最も大きい</li>
</ul>
</li>
<li>デメリット

<ul>
<li>Storyboardで利用するとキレイではない(画面ごとに謎マージンを設定しなくてはならない)</li>
</ul>
</li>
</ul>


<h3>まとめ</h3>

<p>さて如何でしたでしょうか？<br/>
たまに必要性を感じる内容であることもあって、一度まとめてみようと思い、書いてみました。<br/>
今の世の中なら、用途にあったOSSライブラリもたくさんあると思うので手法は3つには限らないでしょうね。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift3でUIImageを任意の角度で回転させる方法について]]></title>
    <link href="http://grandbig.github.io/blog/2017/06/11/uiimagerotate-swift3/"/>
    <updated>2017-06-11T22:43:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/06/11/uiimagerotate-swift3</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>以前、<a href="http://grandbig.github.io/blog/2014/03/13/uiimagerotate/">UIImageを任意の角度で回転させる方法について</a>を書きましたが、今回はそのSwift3版です。<br/>
Objective-Cで書いた方法と基本的には同じではあるのですが、そのままの書き方が使えるわけではないため覚えておいて損はないはず！</p>

<p>では早速見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>UIImageの回転方法</h3>

<p>Objective-Cでは下記のように回転させていました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 元の画像。ここではtest.pngという画像があるとします。</span>
</span><span class='line'><span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;test.png&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">CGSize</span> <span class="n">imgSize</span> <span class="o">=</span> <span class="p">{</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">};</span>
</span><span class='line'><span class="c1">// Contextを開く</span>
</span><span class='line'><span class="n">UIGraphicsBeginImageContext</span><span class="p">(</span><span class="n">imgSize</span><span class="p">);</span>
</span><span class='line'><span class="n">CGContextRef</span> <span class="n">context</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'><span class="c1">// 回転の中心点を移動</span>
</span><span class='line'><span class="n">CGContextTranslateCTM</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="c1">// Y軸方向を補正</span>
</span><span class='line'><span class="n">CGContextScaleCTM</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ラジアンに変換(45°回転させたい場合)</span>
</span><span class='line'><span class="kt">float</span> <span class="n">radian</span> <span class="o">=</span> <span class="mi">45</span> <span class="o">*</span> <span class="n">M_PI</span> <span class="o">/</span> <span class="mi">180</span><span class="p">;</span>
</span><span class='line'><span class="n">CGContextRotateCTM</span><span class="p">(</span><span class="n">context</span><span class="p">,</span> <span class="n">radian</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 回転画像の描画</span>
</span><span class='line'><span class="n">CGContextDrawImage</span><span class="p">(</span><span class="n">UIGraphicsGetCurrentContext</span><span class="p">(),</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="o">-</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">),</span> <span class="n">image</span><span class="p">.</span><span class="n">CGImage</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Contextを閉じる</span>
</span><span class='line'><span class="n">UIImage</span> <span class="o">*</span><span class="n">rotatedImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'><span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UIImageViewに回転後の画像を設定</span>
</span><span class='line'><span class="n">UIImageView</span> <span class="o">*</span><span class="n">imageView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">rotatedImage</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これをSwift3で書き直すと以下のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 元の画像。ここではtest.pngという画像があるとします。</span>
</span><span class='line'><span class="n">let</span> <span class="n">image</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;test&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">let</span> <span class="n">imgSize</span> <span class="o">=</span> <span class="n">CGSize</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">width:</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="nl">height:</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)</span>
</span><span class='line'><span class="c1">// Contextを開く</span>
</span><span class='line'><span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">imgSize</span><span class="p">,</span> <span class="n">false</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">)</span>
</span><span class='line'><span class="n">let</span> <span class="nl">context:</span> <span class="n">CGContext</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">()</span><span class="o">!</span>
</span><span class='line'><span class="c1">// 回転の中心点を移動</span>
</span><span class='line'><span class="n">context</span><span class="p">.</span><span class="n">translateBy</span><span class="p">(</span><span class="nl">x:</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="nl">y:</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="c1">// Y軸方向を補正</span>
</span><span class='line'><span class="n">context</span><span class="p">.</span><span class="n">scaleBy</span><span class="p">(</span><span class="nl">x:</span> <span class="mf">1.0</span><span class="p">,</span> <span class="nl">y:</span> <span class="o">-</span><span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ラジアンに変換(45°回転させたい場合)</span>
</span><span class='line'><span class="n">let</span> <span class="nl">radian:</span> <span class="n">CGFloat</span> <span class="o">=</span> <span class="mi">45</span> <span class="o">*</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">Double</span><span class="p">.</span><span class="n">pi</span><span class="p">)</span> <span class="o">/</span> <span class="mf">180.0</span>
</span><span class='line'><span class="n">context</span><span class="p">.</span><span class="n">rotate</span><span class="p">(</span><span class="nl">by:</span> <span class="n">radian</span><span class="p">)</span>
</span><span class='line'><span class="c1">// 回転画像の描画</span>
</span><span class='line'><span class="n">context</span><span class="p">.</span><span class="n">draw</span><span class="p">(</span><span class="n">image</span><span class="p">.</span><span class="n">cgImage</span><span class="o">!</span><span class="p">,</span> <span class="k">in</span><span class="o">:</span> <span class="n">CGRect</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">x:</span> <span class="o">-</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="nl">y:</span> <span class="o">-</span><span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="nl">width:</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="nl">height:</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Contextを閉じる</span>
</span><span class='line'><span class="n">let</span> <span class="nl">rotatedImage:</span> <span class="n">UIImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">()</span><span class="o">!</span>
</span><span class='line'><span class="n">UIGraphicsEndImageContext</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UIImageViewに回転後の画像を設定</span>
</span><span class='line'><span class="n">let</span> <span class="n">imageView</span> <span class="o">=</span> <span class="n">UIImageView</span><span class="p">.</span><span class="n">init</span><span class="p">()</span>
</span><span class='line'><span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">rotatedImage</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>さていかがでしたでしょうか？<br/>
基本的な回転の流れは変わりませんね。<br/>
ただ、Swift3で書いた方が心なしか自然なメソッドで書けている気がするのは筆者だけですかね&hellip;<br/>
ということで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RealmSwiftでdistinctしよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/06/11/swift3-realm-2/"/>
    <updated>2017-06-11T00:41:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/06/11/swift3-realm-2</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は<a href="https://github.com/realm/realm-cocoa/tree/master/RealmSwift">RealmSwift</a>に関するメモ書きです。<br/>
<code>RealmSwift</code>を使って保存したデータを<code>distinct</code>したいときがあったのですが、<code>RealmSwift</code>内で定義されているわけではなさそうなので迷いました。<br/>
よく考えてみれば、なんてことはなく<code>Swift</code>に標準で用意されたものを使えばよかったのでした。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>distinctする方法</h3>

<p>さて、具体的な方法を見てみましょう。<br/>
例として<code>RealmSwift</code>で保存するオブジェクトを下記のように定義します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Footprint.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">RealmSwift</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> 足跡</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">class</span> <span class="nl">Footprint:</span> <span class="n">Object</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">dynamic</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">Int</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">title:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>  <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">latitude:</span> <span class="n">Double</span> <span class="o">=</span> <span class="mf">0.0</span>
</span><span class='line'>  <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">longitude:</span> <span class="n">Double</span> <span class="o">=</span> <span class="mf">0.0</span>
</span><span class='line'>  <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">speed:</span> <span class="n">Double</span> <span class="o">=</span> <span class="mf">0.0</span>
</span><span class='line'>  <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">direction:</span> <span class="n">Double</span> <span class="o">=</span> <span class="mf">0.0</span>
</span><span class='line'>  <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">created:</span> <span class="n">Double</span> <span class="o">=</span> <span class="n">Date</span><span class="p">().</span><span class="n">timeIntervalSince1970</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// プライマリーキーの設定</span>
</span><span class='line'>  <span class="n">override</span> <span class="k">static</span> <span class="n">func</span> <span class="n">primaryKey</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">String</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;id&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// インデックスの設定</span>
</span><span class='line'>  <span class="n">override</span> <span class="k">static</span> <span class="n">func</span> <span class="n">indexedProperties</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="s">&quot;title&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>RealmSwift</code>で保存していくと、下記のような結果になるでしょう。</p>

<p><img src="http://grandbig.github.io/images/realmswift_distinct_1.png" alt="RealmSwiftブラウザで結果を見てみる" /></p>

<p>もし、これらのデータから<code>title</code>を<code>distinct</code>して取得したい場合があったとしましょう。<br/>
その場合は下記のように取得します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// FootprintManager.swift</span>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  保存した足跡タイトルを取得する処理</span>
</span><span class='line'>
</span><span class='line'><span class="cm">  - returns: [タイトル]の配列</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">func</span> <span class="n">distinctByTitle</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">distinctTitles</span> <span class="o">=</span> <span class="n">Set</span><span class="p">(</span><span class="n">realm</span><span class="p">.</span><span class="n">objects</span><span class="p">(</span><span class="n">Footprint</span><span class="p">.</span><span class="n">self</span><span class="p">).</span><span class="n">value</span><span class="p">(</span><span class="nl">forKey:</span> <span class="s">&quot;title&quot;</span><span class="p">)</span> <span class="n">as</span><span class="o">!</span> <span class="p">[</span><span class="n">String</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">distinctTitles</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>実はSwiftでは<code>Set</code>という重複を許さない集合体を定義するための型が用意されています。<br/>
なので、<code>RealmSwift</code>から単に取得してきた値を<code>Set</code>型に変換することで<code>distinct</code>と同じ結果が得られるということになります。</p>

<h3>まとめ</h3>

<p>さていかがでしたでしょうか。<br/>
<code>distinct</code>は決して負荷の軽い処理ではありませんが、様々な場面で求められることでしょう。<br/>
使い方を知っておいて損はありません。<br/>
ということで今回はメモ書きでした。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mapに好きな画像を配置しよう！ Swift編]]></title>
    <link href="http://grandbig.github.io/blog/2017/06/04/put-annotation-2/"/>
    <updated>2017-06-04T21:24:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/06/04/put-annotation-2</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>実に3年半ほど前のブログを始めた当初、<a href="https://grandbig.github.io/blog/2013/09/28/put-annotation/">Mapに好きな画像を配置しよう！</a>といった記事を書いたことがありました。<br/>
駆け出しのiOSエンジニアであった当時の筆者はお世辞にもObjective-CやiOS自体について詳しいとは言い難きスキルレベルでした。<br/>
(当時のブログ記事に不必要な記述があるかとは思いますが、あえてそのまま残しています。)</p>

<p>それから月日を経て、Swiftで同じ実装をするタイミングがあったことで、本記事を書こうと思い、今に至ります。<br/>
簡単な内容ではありますが、感慨深く書かせて頂いています笑</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>CustomAnnotationを作成しよう</h3>

<p>当時と同じ手法で実装してみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">MapKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">CustomAnnotation:</span><span class="n">NSObject</span><span class="p">,</span> <span class="n">MKAnnotation</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">public</span> <span class="n">var</span> <span class="nl">coordinate:</span> <span class="n">CLLocationCoordinate2D</span>
</span><span class='line'>  <span class="n">public</span> <span class="n">var</span> <span class="nl">title:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'>  <span class="n">public</span> <span class="n">var</span> <span class="nl">subtitle:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">init</span><span class="p">(</span><span class="nl">coordinate:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">,</span> <span class="nl">title:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">subtitle:</span> <span class="n">String</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">coordinate</span> <span class="o">=</span> <span class="n">coordinate</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="n">title</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">subtitle</span> <span class="o">=</span> <span class="n">subtitle</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記では、<code>MKAnnotation</code>を拡張し、<code>coordinate</code> / <code>title</code> / <code>subtitle</code>を初期化時に一斉に設定できるようなイニシャライザを用意しました。</p>

<h3>Mapに画像を配置しよう</h3>

<p>さて、ではMapに画像を配置する方法を見ていきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">MapKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">MKMapViewDelegate</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">weak</span> <span class="n">var</span> <span class="nl">mapView:</span> <span class="n">MKMapView</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// マップ関連の初期化処理</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">setUserTrackingMode</span><span class="p">(</span><span class="n">MKUserTrackingMode</span><span class="p">.</span><span class="n">followWithHeading</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// CustomAnnotationの初期化</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">ann</span> <span class="o">=</span> <span class="n">CustomAnnotation</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">coordinate:</span> <span class="n">CLLocationCoordinate2D</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">latitude:</span> <span class="mf">35.685623</span><span class="p">,</span> <span class="nl">longitude:</span> <span class="mf">139.763153</span><span class="p">),</span> <span class="nl">title:</span> <span class="s">&quot;TEST&quot;</span><span class="p">,</span> <span class="nl">subtitle:</span> <span class="s">&quot;test&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">// CustomAnnotationをマップに配置</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">mapView</span><span class="p">.</span><span class="n">addAnnotation</span><span class="p">(</span><span class="n">ann</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: MKMapViewDelegate</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">mapView</span><span class="p">(</span><span class="n">_</span> <span class="nl">mapView:</span> <span class="n">MKMapView</span><span class="p">,</span> <span class="n">viewFor</span> <span class="nl">annotation:</span> <span class="n">MKAnnotation</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">MKAnnotationView</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">annotation</span> <span class="n">is</span> <span class="n">MKUserLocation</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// ユーザの現在地の青丸マークは置き換えない</span>
</span><span class='line'>      <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// CustomAnnotationの場合に画像を配置</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">identifier</span> <span class="o">=</span> <span class="s">&quot;Pin&quot;</span>
</span><span class='line'>      <span class="n">var</span> <span class="nl">annotationView:</span> <span class="n">MKAnnotationView</span><span class="o">?</span> <span class="o">=</span> <span class="n">mapView</span><span class="p">.</span><span class="n">dequeueReusableAnnotationView</span><span class="p">(</span><span class="nl">withIdentifier:</span> <span class="n">identifier</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">annotationView</span> <span class="o">==</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">annotationView</span> <span class="o">=</span> <span class="n">MKAnnotationView</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">annotation:</span> <span class="n">annotation</span><span class="p">,</span> <span class="nl">reuseIdentifier:</span> <span class="n">identifier</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">annotationView</span><span class="o">?</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;xxxx&quot;</span><span class="p">)</span> <span class="c1">// 任意の画像名</span>
</span><span class='line'>      <span class="n">annotationView</span><span class="o">?</span><span class="p">.</span><span class="n">annotation</span> <span class="o">=</span> <span class="n">annotation</span>
</span><span class='line'>      <span class="n">annotationView</span><span class="p">.</span><span class="n">canShowCallout</span> <span class="o">=</span> <span class="n">true</span>  <span class="c1">// タップで吹き出しを表示</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">annotationView</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は次のようになります。<br/>
<img src="http://grandbig.github.io/images/annotationpractice6.png" alt="Mapに画像を表示" /></p>

<h3>まとめ</h3>

<p>昔は様々なサイトを参考にしながら、解読しながら書いていたソースがすんなりと書くことができました。<br/>
今回の記事を通して、もっと他にもSwiftに書き直しても良い記事がありそうだなと思いました。
まあ、タイミング見てですかね&hellip;といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FirebaseをiOSで使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/05/14/firebase-ios/"/>
    <updated>2017-05-14T16:30:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/05/14/firebase-ios</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今や商用で利用している人も珍しくないであろうFirebaseを触ってみようと思います！<br/>
と言うのも、最近Stackoveflowを眺めている時にFirebaseに関する質問を時たま見かけるようになったからです。<br/>
(筆者はまともにFirebaseを使ったことがないため、この機会に使ってみようと思い立ちました。)</p>

<p>ということで、初歩の初歩から見ていきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>


<!-- more -->


<h3>Firebaseの導入</h3>

<p>まずは何と言っても利用方法ですよね？<br/>
ほとんどGoogleが用意してくれているため、本当に簡単にできます。</p>

<p>１．Firebaseの公式ページにアクセス<br/>
まずは、<a href="https://console.firebase.google.com/?hl=ja">Firebaseの公式ページ</a>に遷移して、新規プロジェクトを作成しましょう。</p>

<p><img src="http://grandbig.github.io/images/firebase_ios_1.png" alt="Firebaseの新規プロジェクトを作成" /></p>

<p>２．iOSアプリにFirebaseを追加<br/>
１で新規プロジェクトが作成できたため、続いてiOSアプリにFirebaseを追加しましょう。</p>

<p>追加対象のXcodeプロジェクトを作成します。<br/>
<img src="http://grandbig.github.io/images/firebase_ios_2.png" alt="Xcodeプロジェクトの作成" /></p>

<p>Firebase管理ページから「iOSアプリにFirebaseを追加」を選択します。<br/>
<img src="http://grandbig.github.io/images/firebase_ios_3.png" alt="iOSアプリにFirebaseを追加" /></p>

<p>plistファイルをDLしてXcodeプロジェクトに追加します。<br/>
<img src="http://grandbig.github.io/images/firebase_ios_4.png" alt="plistファイルをXcodeプロジェクトに追加" /></p>

<p>続いて、<code>CocoaPods</code>でFrameworkをインストールします。<br/>
<img src="http://grandbig.github.io/images/firebase_ios_5.png" alt="CocoaPodsでFrameworkを追加" /></p>

<p><code>Podfile</code>には下記を記載しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp"># Podfile</span>
</span><span class='line'><span class="n">use_frameworks</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="s">&quot;FirebaseSample&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="err">#</span> <span class="n">Normal</span> <span class="n">libraries</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Firebase</span><span class="o">/</span><span class="n">Core</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">abstract_target</span> <span class="err">&#39;</span><span class="n">Tests</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">inherit</span><span class="o">!</span> <span class="o">:</span><span class="n">search_paths</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;FirebaseSampleTests&quot;</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;FirebaseSampleUITests&quot;</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして、<code>.xcworkspace</code>ファイルを開いて、下図の指示の通り<code>AppDelegate.swift</code>にコードを追加します。</p>

<p><img src="http://grandbig.github.io/images/firebase_ios_6.png" alt="AppDelegate.swiftにコードを追加" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">Firebase</span> <span class="c1">// ここを追記</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="n">_</span> <span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="p">[</span><span class="nl">UIApplicationLaunchOptionsKey:</span> <span class="n">Any</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>        <span class="n">FIRApp</span><span class="p">.</span><span class="n">configure</span><span class="p">()</span><span class="err">　</span><span class="c1">// ここを追記</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでFirebase管理画面にiOSプロジェクトとの紐付けが完了したことがわかります。</p>

<p><img src="http://grandbig.github.io/images/firebase_ios_7.png" alt="iOSプロジェクトへのFirebase紐付け完了" /></p>

<h3>Firebaseの導入を確認</h3>

<p>ここまででFirebaseの導入が完了したものの、正しく導入できたかどうかわからないかと思います。<br/>
そういうときには<code>DebugView</code>を利用しましょう。</p>

<p>１．XcodeプロジェクトにFirebaseのデバッグ設定を追加<br/>
Target > Edit Scheme > Run > Arguments を見てみましょう。</p>

<p><img src="http://grandbig.github.io/images/firebase_ios_8.png" alt="Firebaseデバッグ設定を追加" /></p>

<p><code>-FIRDebugEnabled</code>をONにしておくことでデバッグが可能になります。<br/>
デバッグ機能を利用しない場合は明示的に<code>-FIRDebugDisabled</code>をONにしましょう。<br/>
(<a href="https://support.google.com/firebase/answer/7201382?hl=ja&amp;utm_id=ad">Google公式ページ</a>によると一度デバッグ機能を有効化すると<code>-FIRDebugDisabled</code>を指定しないと無効化しないそうです。)</p>

<p>２．Xcodeからデバッグ状況を確認<br/>
上記設定を追加した状態で実機でアプリを起動してみましょう。<br/>
すると、Xcodeのコンソールログ欄に下図のようにログが出力されるようになります。</p>

<p><img src="http://grandbig.github.io/images/firebase_ios_9.png" alt="Xcodeにログが出力されます" /></p>

<p>３．Firebase管理サイトでデバッグ状況を確認<br/>
Firebase管理サイトからもデバッグ状況を確認できます。</p>

<p><img src="http://grandbig.github.io/images/firebase_ios_10.png" alt="Firebase管理サイトでデバッグ状況を確認" /></p>

<h3>まとめ</h3>

<p>これでFirebaseをiOSに追加することができました。非常に簡単ですね！<br/>
サイドメニューを見るだけでも、非常に多くの機能を有しているようなので、少しずつ試してみたいと思いますが、まずは導入まで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QuickでSwiftコードのUnitテストをしよう！(2)]]></title>
    <link href="http://grandbig.github.io/blog/2017/05/06/quick-2/"/>
    <updated>2017-05-06T19:39:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/05/06/quick-2</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回は久しぶりに<code>Quick</code>を使ったSwiftコードでのUnitテストについて見ていきたいと思います。<br/>
<a href="https://grandbig.github.io/blog/2016/01/16/quick/">前回</a>記事を書いてから実に1年以上経過しました。<br/>
当時、筆者はテスト駆動型での開発を業務で実行することがありませんでした。
最近は当たり前に単体テストを書かずにコードを書くことがありえないという開発環境になってきました。<br/>
しかし、それはWEBの世界に閉じており、iOSの世界では未だ、単体テストを書く工数が見合わないといった話が議論されていたりします。<br/>
言わんとすることはわからんでもないものの、WEBの世界でもテスト駆動型開発が広まるまではきっと同じような話をしていたのではないかと思ったりしています。<br/>
つまり、今後はiOSでも単体テストを書かないなんてありえないといった世界になるのでは？と期待しているのです。</p>

<p>そんな期待を抱きつつ、本記事を書いていきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>テスト内容</h3>

<p>今回テスト内容として<code>Realm</code>に関わる処理を取り上げたいと思います。<br/>
狙いとしてはSpring BootでWEBアプリケーションを開発したときで言うところの<code>Repository</code>に関するテストといったイメージになります。</p>

<h3>テスト対象処理</h3>

<p>さて、具体的なテストの対象となる処理を書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">RealmSwift</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// IDからデータを検索</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">searchEngineerById</span><span class="p">(</span><span class="n">_</span> <span class="kt">id</span><span class="o">:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Engineer</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineers</span> <span class="o">=</span> <span class="n">realm</span><span class="p">.</span><span class="n">objects</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">).</span><span class="n">filter</span><span class="p">(</span><span class="s">&quot;id == \(id)&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">engineers</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">engineers</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 名前からデータを検索</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">searchEngineerByName</span><span class="p">(</span><span class="n">_</span> <span class="nl">name:</span> <span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Results</span><span class="o">&lt;</span><span class="n">Engineer</span><span class="o">&gt;?</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineers</span> <span class="o">=</span> <span class="n">realm</span><span class="p">.</span><span class="n">objects</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">).</span><span class="n">filter</span><span class="p">(</span><span class="s">&quot;name == &#39;\(name)&#39;&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">engineers</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">engineers</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 保存しているデータ数を取得</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">countEngineer</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">realm</span><span class="p">.</span><span class="n">objects</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">).</span><span class="n">count</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 新規データ作成</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">createEngineer</span><span class="p">(</span><span class="nl">name:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">level:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="n">String</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">searchEngineerByName</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 既に検索結果がある場合は処理を終了</span>
</span><span class='line'>      <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 検索結果がない場合は処理を継続</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">skillList</span> <span class="o">=</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Skill</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">skill</span> <span class="k">in</span> <span class="n">skills</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">newSkill</span> <span class="o">=</span> <span class="n">Skill</span><span class="p">()</span>
</span><span class='line'>      <span class="n">newSkill</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">skill</span>
</span><span class='line'>      <span class="n">skillList</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">newSkill</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">Engineer</span><span class="p">()</span>
</span><span class='line'>    <span class="n">engineer</span><span class="p">.</span><span class="kt">id</span> <span class="o">=</span> <span class="n">countEngineer</span><span class="p">()</span>
</span><span class='line'>    <span class="n">engineer</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
</span><span class='line'>    <span class="n">engineer</span><span class="p">.</span><span class="n">level</span> <span class="o">=</span> <span class="n">level</span>
</span><span class='line'>    <span class="n">engineer</span><span class="p">.</span><span class="n">skills</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nl">objectsIn:</span> <span class="n">skillList</span><span class="p">)</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">try</span><span class="o">!</span> <span class="n">realm</span><span class="p">.</span><span class="n">write</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">realm</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">value:</span> <span class="n">engineer</span><span class="p">,</span> <span class="nl">update:</span> <span class="n">false</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// IDを元にレベルを更新</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">updateEngineerLevelById</span><span class="p">(</span><span class="n">_</span> <span class="kt">id</span><span class="o">:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">level:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">searchEngineerById</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 検索結果がある場合は処理を継続</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>      <span class="n">try</span><span class="o">!</span> <span class="n">realm</span><span class="p">.</span><span class="n">write</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="n">level</span> <span class="o">=</span> <span class="n">level</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 検索結果がない場合は処理を終了</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// IDを元にスキルを更新</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">updateEngineerSkillById</span><span class="p">(</span><span class="n">_</span> <span class="kt">id</span><span class="o">:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="n">String</span><span class="p">])</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">searchEngineerById</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 検索結果がある場合は処理を継続</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>      <span class="n">try</span><span class="o">!</span> <span class="n">realm</span><span class="p">.</span><span class="n">write</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">skill</span> <span class="k">in</span> <span class="n">skills</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">let</span> <span class="n">newSkill</span> <span class="o">=</span> <span class="n">Skill</span><span class="p">()</span>
</span><span class='line'>          <span class="n">newSkill</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">skill</span>
</span><span class='line'>          <span class="n">engineer</span><span class="p">.</span><span class="n">skills</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">newSkill</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 検索結果がない場合は処理を終了</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">false</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Quickの導入方法</h3>

<p>Swift3になっていることもあるので、念のためQuickの導入方法を書いておきたいと思います。<br/>
(<code>Realm</code>も使っていることに注意してください。)</p>

<p><code>CocoaPods</code>にて導入します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp"># Podfile</span>
</span><span class='line'><span class="n">use_frameworks</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="s">&quot;QuickTestSample&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="err">#</span> <span class="n">Normal</span> <span class="n">libraries</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">RealmSwift</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">abstract_target</span> <span class="err">&#39;</span><span class="n">Tests</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">inherit</span><span class="o">!</span> <span class="o">:</span><span class="n">search_paths</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;QuickTestSampleTests&quot;</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;QuickTestSampleUITests&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Quick</span><span class="err">&#39;</span>
</span><span class='line'>    <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Nimble</span><span class="err">&#39;</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post_install</span> <span class="k">do</span> <span class="o">|</span><span class="n">installer</span><span class="o">|</span>
</span><span class='line'>  <span class="n">installer</span><span class="p">.</span><span class="n">pods_project</span><span class="p">.</span><span class="n">targets</span><span class="p">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">target</span><span class="o">|</span>
</span><span class='line'>    <span class="n">target</span><span class="p">.</span><span class="n">build_configurations</span><span class="p">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>      <span class="n">config</span><span class="p">.</span><span class="n">build_settings</span><span class="p">[</span><span class="err">&#39;</span><span class="n">SWIFT_VERSION</span><span class="err">&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="err">&#39;</span><span class="mf">3.0</span><span class="err">&#39;</span>
</span><span class='line'>    <span class="n">end</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Quickでのテストコードの実装</h3>

<p>早速、Quickでのテストコードを実装していきましょう。</p>

<h4>Quickでテスト実行するための準備</h4>

<p>Quickでテストを実行するためには、テスト用に用意されたファイルのクラスを変更する必要があります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// QuickTestSampleTests</span>
</span><span class='line'><span class="n">import</span> <span class="n">XCTest</span>
</span><span class='line'><span class="n">import</span> <span class="n">Quick</span>
</span><span class='line'><span class="n">import</span> <span class="n">Nimble</span>
</span><span class='line'><span class="err">@</span><span class="n">testable</span> <span class="n">import</span> <span class="n">QuickTestSample</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">QuickTestSampleTests:</span> <span class="n">QuickSpec</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>テスト用データの作成について</h4>

<p>今回、<code>Realm</code>関連の処理を実装するにあたって悩んだのが、モック用のデータをどうするかという問題です。<br/>
今回取り上げている処理がかなりシンプルな処理であるため、<strong>manual mocking</strong> で作成するのも微妙です。</p>

<p>結果、下記のように実装しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// QuickTestSampleTests</span>
</span><span class='line'><span class="n">import</span> <span class="n">XCTest</span>
</span><span class='line'><span class="n">import</span> <span class="n">Quick</span>
</span><span class='line'><span class="n">import</span> <span class="n">Nimble</span>
</span><span class='line'><span class="n">import</span> <span class="n">RealmSwift</span>   <span class="c1">// 追加</span>
</span><span class='line'><span class="err">@</span><span class="n">testable</span> <span class="n">import</span> <span class="n">QuickTestSample</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">QuickTestSampleTests:</span> <span class="n">QuickSpec</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">describe</span><span class="p">(</span><span class="s">&quot;Realm Database&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// テスト用のRealmデータ保存ファイルを作成</span>
</span><span class='line'>      <span class="c1">// 保存場所はdefault.realmと同じでファイル名のみtest.realmに変更</span>
</span><span class='line'>      <span class="n">var</span> <span class="n">config</span> <span class="o">=</span> <span class="n">Realm</span><span class="p">.</span><span class="n">Configuration</span><span class="p">()</span>
</span><span class='line'>      <span class="n">config</span><span class="p">.</span><span class="n">fileURL</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">fileURL</span><span class="o">!</span><span class="p">.</span><span class="n">deletingLastPathComponent</span><span class="p">().</span><span class="n">appendingPathComponent</span><span class="p">(</span><span class="s">&quot;test.realm&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">Realm</span><span class="p">.</span><span class="n">Configuration</span><span class="p">.</span><span class="n">defaultConfiguration</span> <span class="o">=</span> <span class="n">config</span>
</span><span class='line'>      <span class="c1">// 上記の設定情報を利用してRealmを扱う</span>
</span><span class='line'>      <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">(</span><span class="nl">configuration:</span> <span class="n">config</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">beforeEach</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// テスト用にモックデータを追加</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">Engineer</span><span class="p">()</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;mock_name&quot;</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="n">level</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">skill</span> <span class="o">=</span> <span class="n">Skill</span><span class="p">()</span>
</span><span class='line'>        <span class="n">skill</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;mock_skill_name&quot;</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="n">skills</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">skill</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">try</span><span class="o">!</span> <span class="n">realm</span><span class="p">.</span><span class="n">write</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">realm</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">value:</span> <span class="n">engineer</span><span class="p">,</span> <span class="nl">update:</span> <span class="n">false</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">afterEach</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// テスト終了後にデータを全て削除</span>
</span><span class='line'>        <span class="n">try</span><span class="o">!</span> <span class="n">realm</span><span class="p">.</span><span class="n">write</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">realm</span><span class="p">.</span><span class="n">deleteAll</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>このように、最低限必要なモックデータをテスト用の<code>Realm</code>のデータベースに作成してみました。<br/>
<code>Realm</code>の使い方さえ間違えなければ、こちらでテストしたい独自処理には影響を与えないはずです。</p>

<p>上記のソースコードにコメントとして書いていますが、ポイントとしては下記の通りです。</p>

<ul>
<li>実際のアプリで利用する<code>Realm</code>ファイルとは別のテスト用の<code>Realm</code>ファイルを利用する</li>
<li>テスト実行前にテスト用のモックデータを作成する</li>
<li>テスト実行後はテスト用のモックデータを全て削除する</li>
</ul>


<h4>テストの記載箇所</h4>

<p>さて、実際にテストを実装すると下記のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// QuickTestSampleTests</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">override</span> <span class="n">func</span> <span class="n">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">var</span> <span class="nl">subject:</span> <span class="n">ViewController</span><span class="o">!</span>
</span><span class='line'>  <span class="n">describe</span><span class="p">(</span><span class="s">&quot;Realm Database&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">beforeEach</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">describe</span><span class="p">(</span><span class="s">&quot;searchEngineerById&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">it</span><span class="p">(</span><span class="s">&quot;find realm data by id&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerById</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>        <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="o">?</span><span class="p">.</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;mock_name&quot;</span><span class="p">))</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">afterEach</span> <span class="p">{</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ポイント次の通りです。</p>

<ul>
<li>テストの内容は<code>beforeEach</code>と<code>afterEach</code>の間に書く</li>
<li>メソッドごとにテストを記載していることをわかりやすくするために、<code>describe</code>でメソッドごとにくくる</li>
<li>テストで確かめたい内容次第で<code>notTo</code> / <code>to</code> / <code>equal</code> などを使い分ける</li>
</ul>


<h4>テストの内容</h4>

<p>では、テスト内容の詳細を個別に見ていきたいと思います。</p>

<h5>searchEngineerByIdのテスト</h5>

<p>まずは、<code>searchEngineerById</code>のテストを書きます。<br/>
このメソッドは検索成功時に<code>Engineer</code>型のオブジェクトを返し、検索失敗時には<code>nil</code>を返します。</p>

<p>そのため、このメソッドに対するテストとしては、</p>

<ul>
<li>検索成功：取得内容の整合性をチェック</li>
<li>検索失敗：<code>nil</code>であることをチェック</li>
</ul>


<p>を書くことになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// QuickTestSampleTests</span>
</span><span class='line'><span class="n">describe</span><span class="p">(</span><span class="s">&quot;searchEngineerById&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 取得内容の整合性チェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;find realm data by id&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerById</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="o">?</span><span class="p">.</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;mock_name&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="o">?</span><span class="p">.</span><span class="n">skills</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;mock_skill_name&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// nilであることのチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;cannot find realm data by id&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerById</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>searchEngineerByNameのテスト</h5>

<p>続いて、<code>searchEngineerByName</code>のテストを書きます。<br/>
このメソッドは検索成功時に<code>List&lt;Engineer&gt;</code>型のオブジェクトを返し、検索失敗時には<code>nil</code>を返します。</p>

<p>そのため、このメソッドに対するテストとしては、</p>

<ul>
<li>検索成功：取得内容の整合性およびカウント数のチェック</li>
<li>検索失敗：<code>nil</code>であることをチェック</li>
</ul>


<p>を書くことになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">describe</span><span class="p">(</span><span class="s">&quot;searchEngineerByName&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// 取得内容の整合性およびカウント数のチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;find realm data by name&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineers</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerByName</span><span class="p">(</span><span class="s">&quot;mock_name&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">.</span><span class="n">count</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;mock_name&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">skills</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;mock_skill_name&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// nilであることのチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;cannot find realm data by name&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineers</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerByName</span><span class="p">(</span><span class="s">&quot;mock_mistake_name&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>countEngineerのテスト</h5>

<p>次は<code>countEngineer</code>のテストを書きます。<br/>
このメソッドは検索成功時にデータのレコード数を返却します。<br/>
検索失敗時の処理は独自実装していないため成功時のテストのみ書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">describe</span><span class="p">(</span><span class="s">&quot;countEngineer&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// カウント数のチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;count realm data&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">count</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">countEngineer</span><span class="p">()</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">count</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>createEngineerのテスト</h5>

<p>今度は<code>createEngineer</code>のテストを書きます。<br/>
このメソッドは同名の<code>Engineer</code>オブジェクトが保存されている場合は、新規オブジェクトを作成しないということがポイントです。</p>

<p>そのため、このメソッドに対するテストとしては、</p>

<ul>
<li>新規<code>Engineer</code>オブジェクト作成が成功した場合：取得内容の整合性およびカウント数のチェック</li>
<li>新規<code>Engineer</code>オブジェクト作成が失敗した場合：カウント数が変わっていないことをチェック</li>
</ul>


<p>を書くことになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">describe</span><span class="p">(</span><span class="s">&quot;createEngineer&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// カウント数が変わっていないことのチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;cannot create engineer&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">subject</span><span class="p">.</span><span class="n">createEngineer</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;mock_name&quot;</span><span class="p">,</span> <span class="nl">level:</span> <span class="mi">1</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="s">&quot;swift&quot;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineers</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerByName</span><span class="p">(</span><span class="s">&quot;mock_name&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">.</span><span class="n">count</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 取得内容の整合性およびカウント数のチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;create new engineer&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">subject</span><span class="p">.</span><span class="n">createEngineer</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;takahiro&quot;</span><span class="p">,</span> <span class="nl">level:</span> <span class="mi">1</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="s">&quot;swift&quot;</span><span class="p">,</span> <span class="s">&quot;spring boot&quot;</span><span class="p">,</span> <span class="s">&quot;react.js&quot;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineers</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerByName</span><span class="p">(</span><span class="s">&quot;takahiro&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="p">).</span><span class="n">notTo</span><span class="p">(</span><span class="n">beNil</span><span class="p">())</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">.</span><span class="n">count</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;takahiro&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">skills</span><span class="p">.</span><span class="n">count</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">skills</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;swift&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">skills</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;spring boot&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineers</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">skills</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;react.js&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>updateEngineerLevelByIdのテスト</h5>

<p><code>updateEngineerLevelById</code>のテストを書きます。<br/>
このメソッドは成功可否に応じて<code>true / false</code>を返却します。</p>

<p>そのため、このメソッドに対するテストとしては、</p>

<ul>
<li>更新成功：<code>true</code>であることをチェック</li>
<li>更新失敗：<code>false</code>であることをチェック</li>
</ul>


<p>を書くことになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">describe</span><span class="p">(</span><span class="s">&quot;updateEngineerLevelById&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// trueであることをチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;update level for realm data by id&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">updated</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">updateEngineerLevelById</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nl">level:</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerById</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">updated</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">beTrue</span><span class="p">())</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="o">?</span><span class="p">.</span><span class="n">level</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// falseであることをチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;cannot update level for realm data by id&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">updated</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">updateEngineerLevelById</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nl">level:</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">updated</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">beFalse</span><span class="p">())</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>updateEngineerSkillByIdのテスト</h5>

<p><code>updateEngineerSkillById</code>のテストを書きます。<br/>
このメソッドは成功可否に応じて<code>true / false</code>を返却します。</p>

<p>そのため、このメソッドに対するテストとしては、</p>

<ul>
<li>更新成功：<code>true</code>であることをチェック</li>
<li>更新失敗：<code>false</code>であることをチェック</li>
</ul>


<p>を書くことになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">describe</span><span class="p">(</span><span class="s">&quot;updateEngineerSkillById&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// trueであることをチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;update skill for realm data by id&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">updated</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">updateEngineerSkillById</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="s">&quot;mock_skill_name_2&quot;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">searchEngineerById</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">updated</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">beTrue</span><span class="p">())</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="o">?</span><span class="p">.</span><span class="n">skills</span><span class="p">.</span><span class="n">count</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="o">?</span><span class="p">.</span><span class="n">skills</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;mock_skill_name&quot;</span><span class="p">))</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">engineer</span><span class="o">?</span><span class="p">.</span><span class="n">skills</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">name</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;mock_skill_name_2&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// falseであることをチェック</span>
</span><span class='line'>  <span class="n">it</span><span class="p">(</span><span class="s">&quot;cannot update skill for realm data by id&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">updated</span> <span class="o">=</span> <span class="n">subject</span><span class="p">.</span><span class="n">updateEngineerSkillById</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="s">&quot;mock_skill_name_2&quot;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">updated</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">beFalse</span><span class="p">())</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Quickでのテストコードの書式</h3>

<p>今回新たに出た書式についてまとめておきます。</p>

<h4>notTo</h4>

<p>対象と異なることを期待するときに利用します。</p>

<ul>
<li>書式例：<code>expect(engineer).notTo(beNil())</code></li>
<li>期待値：<code>engineer</code>オブジェクトが<code>nil</code>でない</li>
</ul>


<h4>to</h4>

<p>対象と一致することを期待するときに利用します。</p>

<h5>equalと組み合わせた場合</h5>

<ul>
<li>書式例：<code>expect(engineer?.name).to(equal("mock_name"))</code></li>
<li>期待値：<code>engineer</code>オブジェクトの<code>name</code>プロパティが<code>mock_name</code>と一致すること</li>
</ul>


<h5>beTrue / beFalseと組み合わせた場合</h5>

<ul>
<li>書式例：<code>expect(updated).to(beTrue())</code></li>
<li>期待値：<code>updated</code>の値が<code>true</code>と一致すること</li>
</ul>


<h4>beNil / equal / beTrue / beFalse</h4>

<p>それぞれ、</p>

<ul>
<li>beNil()：<code>nil</code>であること</li>
<li>equal()：引数の値であること(数字や文字列などを引数に設定します)</li>
<li>beTrue()：<code>true</code>であること</li>
<li>beFalse()：<code>false</code>であること</li>
</ul>


<p>を意味します。</p>

<h3>まとめ</h3>

<p>さて如何でしたでしょうか。<br/>
今回は最近の経験を元にiOSでテスト駆動型の開発をするなら&hellip;をイメージして書いてみました。<br/>
次はもっと複雑なパターンのテストを試しに書いてみても良いかなと思いつつ、本日はここまで。</p>

<p>参考:</p>

<ul>
<li><a href="https://realm.io/jp/docs/swift/latest/#realm-3">Realm公式ドキュメント</a></li>
<li><a href="https://news.realm.io/jp/news/rachel-bobbins-testing-view-controllers-quick/">Quickを使ってビューコントローラをテストする</a></li>
<li><a href="https://github.com/Quick/Quick/blob/master/Documentation/ja/ConfiguringQuick.md">Quickの挙動をカスタマイズしましょう</a></li>
<li><a href="https://github.com/Quick/Quick/blob/master/Documentation/ja/QuickExamplesAndGroups.md">QuickのExamplesとExample Groupsで、たくさんのテストでも整理整頓</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift3でRealmSwiftを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/05/06/swift3-realm/"/>
    <updated>2017-05-06T02:06:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/05/06/swift3-realm</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>約2年前に画期的なモバイルデータベースとして<a href="https://realm.io/jp/">Realm</a>について紹介させて頂きました。<br/>
当時はSwift専用のものがなかったため、Objective-C用のものをブリッジヘッダーファイルを作成することで利用していました。<br/>
現在はかなり多くのアプリでも利用され、広く浸透していると共に、<code>SwiftRealm</code>が作られ、Swift専用化しています。</p>

<p>今回は、以前、筆者が書いた<a href="http://grandbig.github.io/blog/2015/06/07/swift-realm/">SwiftでRealmを使ってみよう！</a>を<code>SwiftRealm</code>で書き直す形でSwift3での<code>Realm</code>の使い方を見ていきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>RealmSwiftの導入方法</h3>

<p><code>CocoaPods</code>を利用して導入してみます。<br/>
(<code>Carthage</code>での利用方法も公式サイトにて紹介されています。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp"># Podfile</span>
</span><span class='line'><span class="n">use_frameworks</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="s">&quot;RealmSwiftSample&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="err">#</span> <span class="n">Normal</span> <span class="n">libraries</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">RealmSwift</span><span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">abstract_target</span> <span class="err">&#39;</span><span class="n">Tests</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">inherit</span><span class="o">!</span> <span class="o">:</span><span class="n">search_paths</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;RealmSwiftSampleTests&quot;</span>
</span><span class='line'>    <span class="n">target</span> <span class="s">&quot;RealmSwiftSampleUITests&quot;</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post_install</span> <span class="k">do</span> <span class="o">|</span><span class="n">installer</span><span class="o">|</span>
</span><span class='line'>  <span class="n">installer</span><span class="p">.</span><span class="n">pods_project</span><span class="p">.</span><span class="n">targets</span><span class="p">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">target</span><span class="o">|</span>
</span><span class='line'>    <span class="n">target</span><span class="p">.</span><span class="n">build_configurations</span><span class="p">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>      <span class="n">config</span><span class="p">.</span><span class="n">build_settings</span><span class="p">[</span><span class="err">&#39;</span><span class="n">SWIFT_VERSION</span><span class="err">&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="err">&#39;</span><span class="mf">3.0</span><span class="err">&#39;</span>
</span><span class='line'>    <span class="n">end</span>
</span><span class='line'>  <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>因みに、<code>abstract_target</code>は複数targetにまたがって利用したいライブラリがある場合に利用します。<br/>
(上記の例はテストでのみ利用するライブラリがある場合に利用する書式です。)<br/>
また、<code>post_install do |installer|</code>〜<code>end</code>までの書式はSwiftのバージョンを指定するために追加します。</p>

<p><code>Podfile</code>ができたら<code>pod install</code>を実行して<code>xcworkspace</code>ファイルを開きましょう。</p>

<h3>保存オブジェクトの生成</h3>

<p>Objective-C用のときは<code>RLMObject</code>型のクラスを作成していましたが、<code>RealmSwift</code>では単に<code>Object</code>型のクラスを作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Engineer.swift</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">import</span> <span class="n">RealmSwift</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Skillクラス</span>
</span><span class='line'><span class="n">class</span> <span class="nl">Skill:</span> <span class="n">Object</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Engineerクラス</span>
</span><span class='line'><span class="n">class</span> <span class="nl">Engineer:</span> <span class="n">Object</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">dynamic</span> <span class="n">var</span> <span class="kt">id</span><span class="o">:</span> <span class="n">Int</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>    <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">level:</span> <span class="n">Int</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">let</span> <span class="n">skills</span> <span class="o">=</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Skill</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>    <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">created:</span> <span class="n">Double</span> <span class="o">=</span> <span class="n">Date</span><span class="p">().</span><span class="n">timeIntervalSince1970</span>
</span><span class='line'>    <span class="n">dynamic</span> <span class="n">var</span> <span class="nl">updated:</span> <span class="n">Double</span> <span class="o">=</span> <span class="n">Date</span><span class="p">().</span><span class="n">timeIntervalSince1970</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// プライマリーキーの設定</span>
</span><span class='line'>    <span class="n">override</span> <span class="k">static</span> <span class="n">func</span> <span class="n">primaryKey</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">String</span><span class="o">?</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;id&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// インデックスの設定</span>
</span><span class='line'>    <span class="n">override</span> <span class="k">static</span> <span class="n">func</span> <span class="n">indexedProperties</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">String</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">[</span><span class="s">&quot;level&quot;</span><span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Objective-C用の<code>Realm</code>では<code>RLMArray</code>型として<code>skills</code>を作成していましたが、<code>RealmSwift</code>では<code>List&lt;Skill&gt;</code>型として作成できます。<br/>
こちらの方が直感的でわかりやすいですね。<br/>
因みに、<code>dynamic var skills = List&lt;Skill&gt;()</code>と書くとエラーが発生するので<code>List</code>を利用する場合は<code>let</code>にしましょう。</p>

<h3>オブジェクトのインサート/アップデート</h3>

<p>先程作成したオブジェクトを保存する方法について紹介しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">RealmSwift</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>        <span class="c1">// 新規オブジェクトをインサート</span>
</span><span class='line'>        <span class="n">createEngineer</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;test1&quot;</span><span class="p">,</span> <span class="nl">level:</span> <span class="mi">1</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="s">&quot;swift&quot;</span><span class="p">,</span> <span class="s">&quot;objective-c&quot;</span><span class="p">])</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">createEngineer</span><span class="p">(</span><span class="nl">name:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">level:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">skills:</span> <span class="p">[</span><span class="n">String</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Skill型オブジェクトに変換してList&lt;Skill&gt;に格納</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">skillList</span> <span class="o">=</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Skill</span><span class="o">&gt;</span><span class="p">()</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">skill</span> <span class="k">in</span> <span class="n">skills</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">let</span> <span class="n">newSkill</span> <span class="o">=</span> <span class="n">Skill</span><span class="p">()</span>
</span><span class='line'>            <span class="n">newSkill</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">skill</span>
</span><span class='line'>            <span class="n">skillList</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">newSkill</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">realm</span> <span class="o">=</span> <span class="n">try</span><span class="o">!</span> <span class="n">Realm</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Engineer型オブジェクトの作成</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">engineer</span> <span class="o">=</span> <span class="n">Engineer</span><span class="p">()</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="kt">id</span> <span class="o">=</span> <span class="n">realm</span><span class="p">.</span><span class="n">objects</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">).</span><span class="n">count</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="n">level</span> <span class="o">=</span> <span class="n">level</span>
</span><span class='line'>        <span class="n">engineer</span><span class="p">.</span><span class="n">skills</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nl">objectsIn:</span> <span class="n">skillList</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Realmへのオブジェクトの書き込み</span>
</span><span class='line'>        <span class="n">try</span><span class="o">!</span> <span class="n">realm</span><span class="p">.</span><span class="n">write</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">realm</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">engineer</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Objective-Cの際は<code>realm.beginWriteTransaction()</code>や<code>realm.commitWriteTransaction()</code>などわざわざ書いていたものの、<code>RealmSwift</code>では非常にコンパクトに書けますね。<br/>
因みに、アップデートであれば、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">try</span><span class="o">!</span> <span class="n">realm</span> <span class="n">write</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">engineer</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="s">&quot;takahiro&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようにすれば良さそうです。</p>

<h3>データの確認</h3>

<p>今は、Mac App Storeから<code>Realm Browser</code>アプリをインストールすることで簡単にデータ確認が可能になっています。</p>

<p>手順は以下の通りです。<br/>
１．<code>Realm Browser</code>を起動する<br/>
２．<code>Realm</code>ファイルを選択して開く</p>

<p>そうすることで、下記のようにデータを確認することができます。</p>

<p><img src="http://grandbig.github.io/images/swift3-realm1.png" alt="Realm BrowserでEngineerオブジェクトを確認" /><br/>
<img src="http://grandbig.github.io/images/swift3-realm2.png" alt="Realm BrowserでSkillオブジェクトを確認" /></p>

<p>注意すべきこととしては、シミュレータだと<code>realm</code>ファイルを探すのに骨が折れるかもくらいでしょうか&hellip;<br/>
<code>/Users/&lt;username&gt;/Library/Developer/CoreSimulator/Devices/&lt;simulator-uuid&gt;/data/Containers/Data/Application/&lt;application-uuid&gt;/Documents/default.realm</code>にありますので該当するファイルを検索するなどして探しましょう。</p>

<h3>まとめ</h3>

<p>さて、如何でしたでしょうか。<br/>
筆者は久しぶりに<code>Realm</code>を触ったため、以前利用していたときよりも『だいぶ変わったな』と正直思いました。<br/>
ですが、<code>RealmSwift</code>になったことで、より<code>Swift</code>らしい書き方ができると思いますし、単純に記述量も少なく書けるような気がしています。<br/>
今後も多くのアプリで利用されることでしょうし、知っておいて損は絶対になさそうですね。<br/>
ということで本日はここまで。</p>

<p>参考:</p>

<ul>
<li><a href="http://qiita.com/shu223/items/e9d0145a2087da0d6d46">CocoaPods でビルド設定を追加する</a></li>
<li><a href="https://guides.cocoapods.org/using/the-podfile.html">CocoaPods公式サイトでの説明</a></li>
<li><a href="http://stackoverflow.com/questions/28465706/how-to-find-my-realm-file/28465803#28465803">stackoverflow &ndash; How to find my realm file?</a></li>
<li><a href="https://realm.io/jp/docs/swift/latest/">Realm公式ドキュメント</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swiftで使いたいんだけど思うように使えないsubscript]]></title>
    <link href="http://grandbig.github.io/blog/2017/04/23/swift-base-3/"/>
    <updated>2017-04-23T23:03:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/04/23/swift-base-3</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>さて、今日はSwiftの <code>String</code> 型に関するメモです。<br/>
何かできそうなのに実は面倒だという話があったのでちょろっと忘れないように書いておきます。</p>

<h3>文字列から文字を取り出したい！</h3>

<p>プログラミングを書いているときに、たまに『文字列から文字を取り出したい！』ということがあるかと思います。<br/>
JavaScriptなら <code>charAt</code> を利用するだけで任意の場所の文字を取得することができますが、Swiftだと意外に面倒でした&hellip;</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="nf">sample1</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">chrSample1</span> <span class="o">=</span> <span class="s">&quot;こんにちは&quot;</span>
</span><span class='line'>  <span class="c1">// 先頭文字の取得</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="n">chrSample1</span><span class="p">.</span><span class="n">characters</span><span class="p">[</span><span class="n">chrSample1</span><span class="p">.</span><span class="n">startIndex</span><span class="p">])</span> <span class="c1">// こ</span>
</span><span class='line'>  <span class="c1">// 先頭から1つ先の文字を取得</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">secondIndex</span> <span class="o">=</span> <span class="n">chrSample1</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nl">after:</span> <span class="n">chrSample1</span><span class="p">.</span><span class="n">startIndex</span><span class="p">)</span>  <span class="c1">// ん</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="n">chrSample1</span><span class="p">.</span><span class="n">characters</span><span class="p">[</span><span class="n">secondIndex</span><span class="p">])</span>
</span><span class='line'>  <span class="c1">// 末尾の文字を取得</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">lastBeforeIndex</span> <span class="o">=</span> <span class="n">chrSample1</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="nl">before:</span> <span class="n">chrSample1</span><span class="p">.</span><span class="n">endIndex</span><span class="p">)</span> <span class="c1">// は</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="n">chrSample1</span><span class="p">.</span><span class="n">characters</span><span class="p">[</span><span class="n">lastBeforeIndex</span><span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のように場所を指定する必要があります。<br/>
下記のように数字で指定しようとすると全て静的解析でエラー判断されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="nf">sample1</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">chrSample1</span> <span class="o">=</span> <span class="s">&quot;こんにちは&quot;</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="n">chrSample1</span><span class="p">.</span><span class="n">characters</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="c1">// エラー</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="n">chrSample1</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>            <span class="c1">// エラー</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="n">chrSample1</span><span class="p">.</span><span class="n">subscript</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>  <span class="c1">// エラー</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>案外ハマる場面がある気がするので、試しておくと良かったりしますね。<br/>
今回は単なるメモ書きでした。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring Bootで簡単Facebook接続]]></title>
    <link href="http://grandbig.github.io/blog/2017/04/16/spring-boot-facebook-login/"/>
    <updated>2017-04-16T14:52:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/04/16/spring-boot-facebook-login</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>さて、久しぶりに<code>Spring Boot</code>で遊んでみました。<br/>
と言ってもほとんどコードを書く必要のないFacebook認証についてです。<br/>
(本当は<code>Spring Social</code>を利用したFacebookログインまで書こうかと思ったのですが、一旦簡単なところまで&hellip;)</p>

<h3>Facebookアプリを新規作成</h3>

<p>まずはFacebook認証などをするために、Facebook Developersサイトでアプリを登録しましょう。</p>

<p>１．<a href="https://developers.facebook.com/">facebook developers</a>に遷移<br/>
トップページから新規アプリを追加しましょう。<br/>
<img src="http://grandbig.github.io/images/web_facebook_login_1.png" alt="facebook developersトップページ" /></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>２．必要項目を入力</p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_2.png" alt="ポップアップに必要事項を入力します" /></p>

<p>３．セキュリティチェックをパス</p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_3.png" alt="セキュリティモーダルの解決" /></p>

<p>４．利用機能の選択</p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_4.png" alt="Facebookの利用機能を選択します" /></p>

<p>５．アプリの設定からプラットフォームを追加</p>

<p>左メニューから設定を選択して、下図の画面を出します。<br/>
<img src="http://grandbig.github.io/images/web_facebook_login_5.png" alt="プラットフォームを追加します" /></p>

<p>プラットフォームとして『ウェブサイト』を追加します。<br/>
<img src="http://grandbig.github.io/images/web_facebook_login_6.png" alt="ウェブサイトをプラットフォームとして追加します" /></p>

<p>サイトURLやドメインなど必要事項を入力します。<br/>
<img src="http://grandbig.github.io/images/web_facebook_login_7.png" alt="必要事項を入力します" /></p>

<p>６．Facebookログインの設定</p>

<p>Facebook認証後に返されるリダイレクトURIを設定します。<br/>
<img src="http://grandbig.github.io/images/web_facebook_login_8.png" alt="リダイレクトURIを設定します" /></p>

<h3>Spring Bootプロジェクトの新規作成</h3>

<p>さて事前準備は完了したので、Spring BootプロジェクトをIntelliJで新規作成しましょう。</p>

<p>１．IntelliJを起動して、Spring Boot用にベースとなる形式を選択</p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_9.png" alt="Spring Initializerを選択します" /></p>

<p>２．ビルドツールとして<code>Gradle</code>を選択</p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_10.png" alt="Gradleをビルドツールとして選択します" /></p>

<p>３．必要なモジュールを選択</p>

<p>今回は <code>Security</code>, <code>Web</code>, <code>Thymeleaf</code>を利用します。<br/>
<img src="http://grandbig.github.io/images/web_facebook_login_11.png" alt="必要なモジュールを選択します" /></p>

<h3>Facebook認証処理を実装</h3>

<p>では、実装していきましょう。</p>

<h4>Spring Security周りの修正</h4>

<p>まず、<code>Spring Security</code>はデフォルトBasic認証が有効となっているため、一旦、認証不要箇所などを設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// SecurityConfig.java</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">config</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.security.config.annotation.web.builders.HttpSecurity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.security.config.annotation.web.configuration.EnableWebSecurity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Configuration</span>
</span><span class='line'><span class="nd">@EnableWebSecurity</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SecurityConfig</span> <span class="kd">extends</span> <span class="n">WebSecurityConfigurerAdapter</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configure</span><span class="o">(</span><span class="n">HttpSecurity</span> <span class="n">http</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">http</span>
</span><span class='line'>                <span class="o">.</span><span class="na">authorizeRequests</span><span class="o">()</span>
</span><span class='line'>                <span class="o">.</span><span class="na">antMatchers</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="s">&quot;/complete&quot;</span><span class="o">,</span> <span class="s">&quot;/api/**&quot;</span><span class="o">).</span><span class="na">permitAll</span><span class="o">()</span>
</span><span class='line'>                <span class="o">.</span><span class="na">anyRequest</span><span class="o">().</span><span class="na">authenticated</span><span class="o">();</span>
</span><span class='line'>        <span class="n">http</span><span class="o">.</span><span class="na">formLogin</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記ソースでは<code>/</code>と<code>/complete</code>と<code>/api/**</code>のアクセスを許可しています。<br/>
それぞれ、</p>

<ul>
<li><code>/</code>: トップぺージ</li>
<li><code>/complete</code>: Facebook認証後に表示する画面<br/>
ここで許可すると認証しなくても表示されてしまいますが、簡単のため</li>
<li><code>/api/**</code>: Facebook認証を実行するためのAPI用</li>
</ul>


<p>という意図です。</p>

<h4>HTMLページの表示</h4>

<p>続いて、単体HTMLページ表示用の処理です。</p>

<h5>Controllerの処理</h5>

<p><code>Controller</code>は下記の通り。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// TopController.java</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">controller</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestMapping</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RestController</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.web.servlet.ModelAndView</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@RestController</span>
</span><span class='line'><span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TopController</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ログイン画面</span>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">ModelAndView</span> <span class="nf">index</span><span class="o">(</span><span class="n">ModelAndView</span> <span class="n">mav</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mav</span><span class="o">.</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&quot;index&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">mav</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 認証完了後に表示する</span>
</span><span class='line'>    <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">&quot;/complete&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">ModelAndView</span> <span class="nf">complete</span><span class="o">(</span><span class="n">ModelAndView</span> <span class="n">mav</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mav</span><span class="o">.</span><span class="na">setViewName</span><span class="o">(</span><span class="s">&quot;complete&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">mav</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>HTMLの処理</h5>

<p>そして、HTMLファイルは下記の通り。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- index.html --&gt;</span>
</span><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.thymeleaf.org&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span>
</span><span class='line'>    <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span>
</span><span class='line'>    <span class="na">content=</span><span class="s">&quot;text/html&quot;</span>
</span><span class='line'>    <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>Facebook Login Sample<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;div&gt;</span>これはFacebookログインのためのサンプルトップ画面です。<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;/api/login&quot;</span> <span class="na">method=</span><span class="s">&quot;get&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;Facebookでログイン&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- complete.html --&gt;</span>
</span><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.thymeleaf.org&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span>
</span><span class='line'>    <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span>
</span><span class='line'>    <span class="na">content=</span><span class="s">&quot;text/html&quot;</span>
</span><span class='line'>    <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>ログイン完了画面<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'><span class="nt">&lt;div&gt;</span>ログイン完了しました！！<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>環境変数の設定</h4>

<p>FacebookのアプリIDや認証リクエストを送るURLなどの環境変数を書き出します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// application.properties</span>
</span><span class='line'><span class="n">server</span><span class="o">.</span><span class="na">port</span><span class="o">=</span><span class="mi">9000</span>
</span><span class='line'><span class="n">spring</span><span class="o">.</span><span class="na">social</span><span class="o">.</span><span class="na">facebook</span><span class="o">.</span><span class="na">appId</span><span class="o">=</span><span class="n">xxxxxxxxx</span>
</span><span class='line'><span class="n">sampleApp</span><span class="o">.</span><span class="na">urls</span><span class="o">.</span><span class="na">facebookLogin</span><span class="o">=</span><span class="nl">https:</span><span class="c1">//www.facebook.com/v2.8/dialog/oauth?client_id=xxxxxxxxx&amp;scope=public_profile,email</span>
</span><span class='line'><span class="n">sampleApp</span><span class="o">.</span><span class="na">urls</span><span class="o">.</span><span class="na">oAuthCallback</span><span class="o">=</span><span class="nl">http:</span><span class="c1">//localhost:9000/api/callback</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここで書いた環境変数を他のJavaファイルで利用したいので、<br/>
新たに<code>MyBean.java</code>と<code>MyProperties.java</code>を新規作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// MyBean.java</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">bean</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyBean</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="n">facebookLogin</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="n">oAuthCallback</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFacebookLogin</span><span class="o">(</span><span class="n">String</span> <span class="n">facebookLogin</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">facebookLogin</span> <span class="o">=</span> <span class="n">facebookLogin</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setoAuthCallback</span><span class="o">(</span><span class="n">String</span> <span class="n">oAuthCallback</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">oAuthCallback</span> <span class="o">=</span> <span class="n">oAuthCallback</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// MyProperties</span>
</span><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">properties</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.example.config.bean.MyBean</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.annotation.PropertySource</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.core.env.Environment</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Configuration</span>
</span><span class='line'><span class="nd">@PropertySource</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;classpath:application.properties&quot;</span><span class="o">})</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyProperties</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Autowired</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Environment</span> <span class="n">env</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Bean</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">MyBean</span> <span class="nf">myBean</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">MyBean</span> <span class="n">myBean</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MyBean</span><span class="o">();</span>
</span><span class='line'>        <span class="n">myBean</span><span class="o">.</span><span class="na">setFacebookLogin</span><span class="o">(</span><span class="n">env</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;sampleApp.urls.facebookLogin&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="n">myBean</span><span class="o">.</span><span class="na">setoAuthCallback</span><span class="o">(</span><span class="n">env</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;sampleApp.urls.oAuthCallback&quot;</span><span class="o">));</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">myBean</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Facebook認証周りの処理</h4>

<p>後はFacebook認証先にURLを送るだけです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">package</span> <span class="nx">com</span><span class="p">.</span><span class="nx">example</span><span class="p">.</span><span class="nx">controller</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kr">import</span> <span class="nx">com</span><span class="p">.</span><span class="nx">example</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">bean</span><span class="p">.</span><span class="nx">MyBean</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">org</span><span class="p">.</span><span class="nx">springframework</span><span class="p">.</span><span class="nx">beans</span><span class="p">.</span><span class="nx">factory</span><span class="p">.</span><span class="nx">annotation</span><span class="p">.</span><span class="nx">Autowired</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">org</span><span class="p">.</span><span class="nx">springframework</span><span class="p">.</span><span class="nx">stereotype</span><span class="p">.</span><span class="nx">Controller</span><span class="p">;</span>
</span><span class='line'><span class="kr">import</span> <span class="nx">org</span><span class="p">.</span><span class="nx">springframework</span><span class="p">.</span><span class="nx">web</span><span class="p">.</span><span class="nx">bind</span><span class="p">.</span><span class="nx">annotation</span><span class="p">.</span><span class="nx">RequestMapping</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="nx">Controller</span>
</span><span class='line'><span class="err">@</span><span class="nx">RequestMapping</span><span class="p">(</span><span class="s2">&quot;/api&quot;</span><span class="p">)</span>
</span><span class='line'><span class="kr">public</span> <span class="kr">class</span> <span class="nx">FacebookLoginController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kr">private</span> <span class="kr">static</span> <span class="kr">final</span> <span class="nb">String</span> <span class="nx">REDIRECT_URI_PARAMETER</span> <span class="o">=</span> <span class="s2">&quot;redirect_uri&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="nx">Autowired</span>
</span><span class='line'>    <span class="kr">private</span> <span class="nx">MyBean</span> <span class="nx">myBean</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="nx">RequestMapping</span><span class="p">(</span><span class="s2">&quot;/login&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="kr">public</span> <span class="nb">String</span> <span class="nx">facebookLogin</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">StringBuilder</span> <span class="nx">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">StringBuilder</span><span class="p">();</span>
</span><span class='line'>        <span class="nx">sb</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">myBean</span><span class="p">.</span><span class="nx">facebookLogin</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">sb</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">REDIRECT_URI_PARAMETER</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">sb</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">myBean</span><span class="p">.</span><span class="nx">oAuthCallback</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="s2">&quot;redirect:&quot;</span> <span class="o">+</span> <span class="nx">sb</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="nx">RequestMapping</span><span class="p">(</span><span class="s2">&quot;/callback&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="kr">public</span> <span class="nb">String</span> <span class="nx">callback</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s2">&quot;redirect:/complete&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>動作確認</h3>

<p>ここまで実装ができたので動作確認をしてみましょう。</p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_12.png" alt="ログイン画面" /></p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_13.png" alt="Facebookログイン画面" /></p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_14.png" alt="アプリ許可画面" /></p>

<p><img src="http://grandbig.github.io/images/web_facebook_login_15.png" alt="ログイン完了後" /></p>

<h3>まとめ</h3>

<p>今回は本当に簡易的な部分しか書けませんでした<br/>
本当は<code>Spring Social</code>を使いこなして、もっといろいろと書こうかと思ったのですが、また次の機会ということで&hellip;</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerコンテナ内のUbuntuにSwiftサーバを立てよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/04/11/docker-for-mac-7/"/>
    <updated>2017-04-11T19:13:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/04/11/docker-for-mac-7</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>さて本日はDockerつながりで『UbuntuにSwiftサーバを立ててみたい』と思います。<br/>
今後、ますます加熱する <strong>Server Side Swift</strong> を誰でも簡単に使えるように、きっとDockerを使う場面も増えてくることでしょう。<br/>
ということで早速見ていきたいと思います。</p>

<h3>Swiftのインストール方法</h3>

<p>次の手順に従って<code>swift</code>コマンドが叩けるところまで進めてみましょう。</p>

<p>１．KitematicでUbuntuを検索してDLする</p>

<p>まずはDockerコンテナを作ります。</p>

<p><img src="http://grandbig.github.io/images/docker_swift_1.png" alt="KitematicでUbuntuをダウンロード" /></p>

<p>※Ubuntuのバージョンは<code>Ubuntu 16.04.2 LTS</code>です。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>２．<code>Privileged mode</code>をONにする</p>

<p>Dockerコンテナのあるある話ですが、<code>Privileged mode</code>をONにしないとコマンド利用制限かかったりするので、忘れずにしておきましょう。</p>

<p><img src="http://grandbig.github.io/images/docker_swift_2.png" alt="Privileged modeをONにする" /></p>

<p>３．<code>PortFoward</code>を設定する</p>

<p>後々、Swiftサーバを立てた時にアクセスしたいので、Dockerにポートフォワード設定をしておきましょう。<br/>
後ほどSwiftサーバを起動したときに<code>8080</code>にアクセスすることになるので、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="mf">0.0</span><span class="p">.</span><span class="mf">0.0</span><span class="o">:</span><span class="mi">15700</span><span class="o">-&gt;</span><span class="mi">8080</span><span class="o">/</span><span class="nx">tcp</span>
</span></code></pre></td></tr></table></div></figure>


<p>という形でポートフォワードを設定します。<br/>
もちろんKitematicから設定可能です。</p>

<p>４．<code>apt-get</code>を最新化する</p>

<p>毎度のことですが、最新化しておきます。<br/>
まずは、Dockerコンテナにアクセスする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">docker</span> <span class="nx">exec</span> <span class="o">-</span><span class="nx">it</span> <span class="nx">ubuntu</span> <span class="o">/</span><span class="nx">bin</span><span class="o">/</span><span class="nx">bash</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">update</span>
</span><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">upgrade</span>
</span></code></pre></td></tr></table></div></figure>


<p>５．<code>wget</code>と<code>vim</code>をインストールする</p>

<p>後ほど利用するので<code>wget</code>と<code>vim</code>をインストールしておきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">wget</span>
</span><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">vim</span>
</span></code></pre></td></tr></table></div></figure>


<p>６．Swiftサーバの依存モジュールをインストールする</p>

<p><a href="https://swift.org/download/#using-downloads">Swiftの公式サイト</a>にも書かれていますが、依存モジュールがあるのでインストールしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">clang</span> <span class="nx">libicu</span><span class="o">-</span><span class="nx">dev</span>
</span></code></pre></td></tr></table></div></figure>


<p>７．Swiftパッケージをインストールする</p>

<p>Swiftサーバを立てるのに必要なものは2つあります。<br/>
それぞれ<code>wget</code>でインストールしましょう。<br/>
今回インストールするSwiftのバージョンは <strong>3.1</strong> です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// バイナリアーカイブの取得</span>
</span><span class='line'><span class="err">#</span> <span class="nx">wget</span> <span class="nx">https</span><span class="o">:</span><span class="c1">//swift.org/builds/swift-3.1-release/ubuntu1604/swift-3.1-RELEASE/swift-3.1-RELEASE-ubuntu16.04.tar.gz</span>
</span><span class='line'><span class="c1">// 署名ファイルの取得</span>
</span><span class='line'><span class="err">#</span> <span class="nx">wget</span> <span class="nx">https</span><span class="o">:</span><span class="c1">//swift.org/builds/swift-3.1-release/ubuntu1604/swift-3.1-RELEASE/swift-3.1-RELEASE-ubuntu16.04.tar.gz.sig</span>
</span></code></pre></td></tr></table></div></figure>


<p>８．PGP鍵をインポートする</p>

<p>次の手順で実施しますが、PGP(Pretty Good Privacy)の公開鍵を利用してSwiftパッケージが安全なものであると署名されたかどうかを検証します。<br/>
その前準備としてPGP鍵をインポートします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">gpg</span> <span class="o">--</span><span class="nx">keyserver</span> <span class="nx">hkp</span><span class="o">:</span><span class="c1">//pool.sks-keyservers.net \</span>
</span><span class='line'>      <span class="o">--</span><span class="nx">recv</span><span class="o">-</span><span class="nx">keys</span> <span class="o">\</span>
</span><span class='line'>      <span class="s1">&#39;7463 A81A 4B2E EA1B 551F  FBCF D441 C977 412B 37AD&#39;</span> <span class="o">\</span>
</span><span class='line'>      <span class="s1">&#39;1BE1 E29A 084C B305 F397  D62A 9F59 7F4D 21A5 6D5F&#39;</span> <span class="o">\</span>
</span><span class='line'>      <span class="s1">&#39;A3BA FD35 56A5 9079 C068  94BD 63BC 1CFE 91D3 06C6&#39;</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">requesting</span> <span class="nx">key</span> <span class="mi">412</span><span class="nx">B37AD</span> <span class="nx">from</span> <span class="nx">hkp</span> <span class="nx">server</span> <span class="nx">pool</span><span class="p">.</span><span class="nx">sks</span><span class="o">-</span><span class="nx">keyservers</span><span class="p">.</span><span class="nx">net</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">requesting</span> <span class="nx">key</span> <span class="mi">21</span><span class="nx">A56D5F</span> <span class="nx">from</span> <span class="nx">hkp</span> <span class="nx">server</span> <span class="nx">pool</span><span class="p">.</span><span class="nx">sks</span><span class="o">-</span><span class="nx">keyservers</span><span class="p">.</span><span class="nx">net</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">requesting</span> <span class="nx">key</span> <span class="mi">91</span><span class="nx">D306C6</span> <span class="nx">from</span> <span class="nx">hkp</span> <span class="nx">server</span> <span class="nx">pool</span><span class="p">.</span><span class="nx">sks</span><span class="o">-</span><span class="nx">keyservers</span><span class="p">.</span><span class="nx">net</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="sr">/root/</span><span class="p">.</span><span class="nx">gnupg</span><span class="o">/</span><span class="nx">trustdb</span><span class="p">.</span><span class="nx">gpg</span><span class="o">:</span> <span class="nx">trustdb</span> <span class="nx">created</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">key</span> <span class="mi">412</span><span class="nx">B37AD</span><span class="o">:</span> <span class="kr">public</span> <span class="nx">key</span> <span class="s2">&quot;Swift Automatic Signing Key #1 &lt;swift-infrastructure@swift.org&gt;&quot;</span> <span class="nx">imported</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">key</span> <span class="mi">21</span><span class="nx">A56D5F</span><span class="o">:</span> <span class="kr">public</span> <span class="nx">key</span> <span class="s2">&quot;Swift 2.2 Release Signing Key &lt;swift-infrastructure@swift.org&gt;&quot;</span> <span class="nx">imported</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">key</span> <span class="mi">91</span><span class="nx">D306C6</span><span class="o">:</span> <span class="kr">public</span> <span class="nx">key</span> <span class="s2">&quot;Swift 3.x Release Signing Key &lt;swift-infrastructure@swift.org&gt;&quot;</span> <span class="nx">imported</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">no</span> <span class="nx">ultimately</span> <span class="nx">trusted</span> <span class="nx">keys</span> <span class="nx">found</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">Total</span> <span class="nx">number</span> <span class="nx">processed</span><span class="o">:</span> <span class="mi">3</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span>               <span class="nx">imported</span><span class="o">:</span> <span class="mi">3</span>  <span class="p">(</span><span class="nx">RSA</span><span class="o">:</span> <span class="mi">3</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>９．PGP鍵で署名を検証する</p>

<p>公式で説明されている通り、<code>key</code>のリフレッシュをします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">gpg</span> <span class="o">--</span><span class="nx">keyserver</span> <span class="nx">hkp</span><span class="o">:</span><span class="c1">//pool.sks-keyservers.net --refresh-keys Swift</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、署名を検証します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">gpg</span> <span class="o">--</span><span class="nx">verify</span> <span class="nx">swift</span><span class="o">-</span><span class="mf">3.1</span><span class="o">-</span><span class="nx">RELEASE</span><span class="o">-</span><span class="nx">ubuntu16</span><span class="p">.</span><span class="mi">04</span><span class="p">.</span><span class="nx">tar</span><span class="p">.</span><span class="nx">gz</span><span class="p">.</span><span class="nx">sig</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">assuming</span> <span class="nx">signed</span> <span class="nx">data</span> <span class="k">in</span> <span class="err">`</span><span class="nx">swift</span><span class="o">-</span><span class="mf">3.1</span><span class="o">-</span><span class="nx">RELEASE</span><span class="o">-</span><span class="nx">ubuntu16</span><span class="p">.</span><span class="mi">04</span><span class="p">.</span><span class="nx">tar</span><span class="p">.</span><span class="nx">gz</span><span class="err">&#39;</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">Signature</span> <span class="nx">made</span> <span class="nx">Tue</span> <span class="nx">Mar</span> <span class="mi">28</span> <span class="mi">07</span><span class="o">:</span><span class="mi">36</span><span class="o">:</span><span class="mi">36</span> <span class="mi">2017</span> <span class="nx">UTC</span> <span class="nx">using</span> <span class="nx">RSA</span> <span class="nx">key</span> <span class="nx">ID</span> <span class="mi">91</span><span class="nx">D306C6</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">Good</span> <span class="nx">signature</span> <span class="nx">from</span> <span class="s2">&quot;Swift 3.x Release Signing Key &lt;swift-infrastructure@swift.org&gt;&quot;</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span> <span class="nx">WARNING</span><span class="o">:</span> <span class="nx">This</span> <span class="nx">key</span> <span class="nx">is</span> <span class="nx">not</span> <span class="nx">certified</span> <span class="kd">with</span> <span class="nx">a</span> <span class="nx">trusted</span> <span class="nx">signature</span><span class="o">!</span>
</span><span class='line'><span class="nx">gpg</span><span class="o">:</span>          <span class="nx">There</span> <span class="nx">is</span> <span class="nx">no</span> <span class="nx">indication</span> <span class="nx">that</span> <span class="nx">the</span> <span class="nx">signature</span> <span class="nx">belongs</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">owner</span><span class="p">.</span>
</span><span class='line'><span class="nx">Primary</span> <span class="nx">key</span> <span class="nx">fingerprint</span><span class="o">:</span> <span class="nx">A3BA</span> <span class="nx">FD35</span> <span class="mi">56</span><span class="nx">A5</span> <span class="mi">9079</span> <span class="nx">C068</span>  <span class="mi">94</span><span class="nx">BD</span> <span class="mi">63</span><span class="nx">BC</span> <span class="mi">1</span><span class="nx">CFE</span> <span class="mi">91</span><span class="nx">D3</span> <span class="mi">06</span><span class="nx">C6</span>
</span></code></pre></td></tr></table></div></figure>


<p>正しいSwiftパッケージであることがわかります。</p>

<p>１０．パッケージを展開する</p>

<p>パッケージは圧縮されているので展開しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">tar</span> <span class="nx">xzf</span> <span class="nx">swift</span><span class="o">-</span><span class="mf">3.1</span><span class="o">-</span><span class="nx">RELEASE</span><span class="o">-</span><span class="nx">ubuntu16</span><span class="p">.</span><span class="mi">04</span><span class="p">.</span><span class="nx">tar</span><span class="p">.</span><span class="nx">gz</span>
</span></code></pre></td></tr></table></div></figure>


<p>１１．パスを通す</p>

<p>さて、DLしたパッケージに対して検索パスを設定する必要があります。<br/>
Dockerコンテナには環境設定ファイルとして<code>.dockerenv</code>があるのでこちらにパスを記載します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 解凍フォルダの名前が長いので名称を変更する</span>
</span><span class='line'><span class="err">#</span> <span class="nx">mv</span> <span class="nx">swift</span><span class="o">-</span><span class="mf">3.1</span><span class="o">-</span><span class="nx">RELEASE</span><span class="o">-</span><span class="nx">ubuntu16</span><span class="p">.</span><span class="mi">04</span> <span class="nx">swift</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ファイルを開く</span>
</span><span class='line'><span class="err">#</span> <span class="nx">vi</span> <span class="p">.</span><span class="nx">dockerenv</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 下記のようにパスを書く</span>
</span><span class='line'><span class="kr">export</span> <span class="nx">PATH</span><span class="o">=</span><span class="err">/swift/usr/bin:&quot;${PATH}&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 環境設定を更新する</span>
</span><span class='line'><span class="err">#</span> <span class="nx">source</span> <span class="p">.</span><span class="nx">dockerenv</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 検索パスが通ったことを確認する</span>
</span><span class='line'><span class="err">#</span> <span class="nx">which</span> <span class="nx">swift</span>
</span><span class='line'><span class="o">/</span><span class="nx">swift</span><span class="o">/</span><span class="nx">usr</span><span class="o">/</span><span class="nx">bin</span><span class="o">/</span><span class="nx">swift</span>
</span><span class='line'><span class="err">#</span> <span class="nx">swift</span> <span class="o">--</span><span class="nx">version</span>
</span><span class='line'><span class="nx">Swift</span> <span class="nx">version</span> <span class="mf">3.1</span> <span class="p">(</span><span class="nx">swift</span><span class="o">-</span><span class="mf">3.1</span><span class="o">-</span><span class="nx">RELEASE</span><span class="p">)</span>
</span><span class='line'><span class="nx">Target</span><span class="o">:</span> <span class="nx">x86_64</span><span class="o">-</span><span class="nx">unknown</span><span class="o">-</span><span class="nx">linux</span><span class="o">-</span><span class="nx">gnu</span>
</span></code></pre></td></tr></table></div></figure>


<p>１２．必要なモジュールをインストールする</p>

<p>このままで<code>swift</code>コマンドを叩いても下記のようにエラーが表示されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">/swift/usr/bin/lldb: error while loading shared libraries: libedit.so.2: cannot open shared object file: No such file or directory</span>
</span></code></pre></td></tr></table></div></figure>


<p>どうやら必要なモジュールが足りないようですね&hellip;<br/>
ということで下記をインストールしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">libedit</span><span class="o">-</span><span class="nx">dev</span>
</span><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">libpython</span><span class="o">-</span><span class="nx">dev</span>
</span><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">libxml2</span><span class="o">-</span><span class="nx">dev</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで<code>swift</code>コマンドを実行できるようになります。<br/>
ついでに<code>Hello World</code>まで出力してみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">swift</span>
</span><span class='line'><span class="nx">Welcome</span> <span class="nx">to</span> <span class="nx">Swift</span> <span class="nx">version</span> <span class="mf">3.1</span> <span class="p">(</span><span class="nx">swift</span><span class="o">-</span><span class="mf">3.1</span><span class="o">-</span><span class="nx">RELEASE</span><span class="p">).</span> <span class="nx">Type</span> <span class="o">:</span><span class="nx">help</span> <span class="k">for</span> <span class="nx">assistance</span><span class="p">.</span>
</span><span class='line'>  <span class="mi">1</span><span class="o">&gt;</span> <span class="nx">print</span><span class="p">(</span><span class="s2">&quot;Hello, world!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">Hello</span><span class="p">,</span> <span class="nx">world</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure>


<h3>PerfectでSwiftサーバを立てよう！</h3>

<p>今回もSwiftサーバを立てるために<a href="https://github.com/PerfectlySoft/Perfect">Perfect</a>を利用します。<br/>
下記手順に従って進めましょう。</p>

<p>１．<code>git</code>をインストールする<br/>
まずは<code>Perfect</code>を<code>git</code>経由でダウンロードする必要があるので<code>git</code>をインストールしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">git</span>
</span></code></pre></td></tr></table></div></figure>


<p>２．<code>PerfectTemplate</code>をダウンロードする<br/>
簡潔にSwiftサーバを立てたいので<code>PerfectTemplate</code>をダウンロードします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">git</span> <span class="nx">clone</span> <span class="nx">https</span><span class="o">:</span><span class="c1">//github.com/PerfectlySoft/PerfectTemplate.git</span>
</span></code></pre></td></tr></table></div></figure>


<p>３．必要モジュールをインストールする<br/>
PerfectのGet Startedに書かれている通り、次の必要なモジュールをインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">openssl</span> <span class="nx">libssl</span><span class="o">-</span><span class="nx">dev</span> <span class="nx">uuid</span><span class="o">-</span><span class="nx">dev</span>
</span></code></pre></td></tr></table></div></figure>


<p>４．不足モジュールをインストールする<br/>
このままだと<code>swift build</code>実行しても下記エラーが出てしまいました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">error</span> <span class="k">while</span> <span class="nx">loading</span> <span class="nx">shared</span> <span class="nx">libraries</span><span class="o">:</span> <span class="nx">libcurl</span><span class="p">.</span><span class="nx">so</span><span class="p">.</span><span class="mi">4</span><span class="o">:</span> <span class="nx">cannot</span> <span class="nx">open</span> <span class="nx">shared</span> <span class="nx">object</span> <span class="nx">file</span><span class="o">:</span> <span class="nx">No</span> <span class="nx">such</span> <span class="nx">file</span> <span class="nx">or</span> <span class="nx">directory</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記解決のためにモジュールをインストールしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">libcurl4</span><span class="o">-</span><span class="nx">openssl</span><span class="o">-</span><span class="nx">dev</span>
</span></code></pre></td></tr></table></div></figure>


<p>５．<code>swift build</code>を実行する<br/>
さて、ビルドしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">cd</span> <span class="nx">PerfectTemplate</span>
</span><span class='line'><span class="err">#</span> <span class="nx">swift</span> <span class="nx">build</span>
</span></code></pre></td></tr></table></div></figure>


<p>６．Swiftサーバを起動する<br/>
後は下記コマンドでSwiftサーバを起動しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="p">.</span><span class="nx">build</span><span class="o">/</span><span class="nx">debug</span><span class="o">/</span><span class="nx">PerfectTemplate</span>
</span><span class='line'><span class="p">[</span><span class="nx">INFO</span><span class="p">]</span> <span class="nx">Starting</span> <span class="nx">HTTP</span> <span class="nx">server</span> <span class="nx">localhost</span> <span class="nx">on</span> <span class="mf">0.0</span><span class="p">.</span><span class="mf">0.0</span><span class="o">:</span><span class="mi">8080</span>
</span><span class='line'><span class="p">[</span><span class="nx">INFO</span><span class="p">]</span> <span class="nx">Starting</span> <span class="nx">HTTP</span> <span class="nx">server</span> <span class="nx">localhost</span> <span class="nx">on</span> <span class="mf">0.0</span><span class="p">.</span><span class="mf">0.0</span><span class="o">:</span><span class="mi">8181</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/docker_swift_3.png" alt="Swiftサーバにアクセス" /></p>

<h3>まとめ</h3>

<p>さていかがでしたでしょうか？<br/>
筆者個人としては、途中で何回かハマったものの、DockerコンテナのUbuntuにSwiftサーバを立てられたことに満足できました。<br/>
今回はサーバを立てるという基本的なものでしたが、今度はWeb APIを作成して、iOSアプリからアクセスしてみたりなど遊んでみたいと思います。</p>

<p>と言ったところで本日はここまで。</p>

<p>参考:</p>

<ul>
<li><a href="https://www.twilio.com/blog/2015/12/getting-started-with-swift-on-linux.html">Getting Started with Swift on Linux</a></li>
<li><a href="http://qiita.com/yonell/items/79bf4ee3cd65f69903ec">Ubuntu上でSwiftサーバーサイドフレームワークのPerfectを動かしてみた</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SwinjectでDIを意識してみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/04/09/swift-di/"/>
    <updated>2017-04-09T22:51:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/04/09/swift-di</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>筆者はここ１年間、主にバックエンド構築にSpring Bootを利用してきました。<br/>
Spring Framework自体は2002年頃にリリースされたそうなのですが、Spring BootはSpringベースでのアプリ開発を楽にしてくれる新たな形で様々なSpringのFramework群を統合したものとのことです。<br/>
(Spring Bootでググると2〜3年前辺りからの記事が多い印象です。)</p>

<p>Springの特徴は何と言っても <strong>DI</strong> でしょう。<br/>
今回はそのSpringの代名詞とも言える <strong>DI</strong> をSwiftで扱ってみたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>DIとは</h3>

<p>DIとは『Dependency Injection』の略語で、日本語だと依存性の注入と翻訳されたりします。<br/>
具体的に何者なのかと言うと、</p>

<ul>
<li>コンポーネント間の依存関係を排除するソフトウェアパターン (<a href="https://ja.wikipedia.org/wiki/%E4%BE%9D%E5%AD%98%E6%80%A7%E3%81%AE%E6%B3%A8%E5%85%A5">Wikipedia &ndash; 依存性の注入</a>)</li>
<li>これにより疎結合性が高まるので単体テストが書きやすい</li>
</ul>


<p>というものです。</p>

<p>Springベースのアプリでは基本パターンとして利用しています。<br/>
詳しい説明は省きますが、<br/>
Spring起動時に<code>Bean</code>化したオブジェクトを<code>@Autowired</code>アノテーションを利用することで、DIコンテナ経由で簡単に <strong>DI</strong> を利用することができます。</p>

<p>注意しておきたいこととして、<br/>
<code>Bean</code>定義したクラスは<code>@Autowired</code>アノテーションで呼び出される際、デフォルトでシングルトンパターンとして生成されたオブジェクトを呼び出しています。</p>

<h3>SwiftでDIするには？</h3>

<p>さて、そんなSpringの特徴的なDIですが、Swiftアプリで利用することはできるのでしょうか？<br/>
筆者が調べたところ、最も人気のあるSwift版DIライブラリとして<a href="https://github.com/Swinject/Swinject">Swinject</a>というものがあるようです。<br/>
本日時点でGitHub上のスター数が<code>1,432</code>となっており、なかなかの注目度かと思います。</p>

<p>しかも、下記のようにSwift3にも対応しているのが嬉しいですね！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">iOS</span> <span class="mf">8.0</span><span class="o">+</span> <span class="o">/</span> <span class="n">Mac</span> <span class="n">OS</span> <span class="n">X</span> <span class="mf">10.10</span><span class="o">+</span> <span class="o">/</span> <span class="n">watchOS</span> <span class="mf">2.0</span><span class="o">+</span> <span class="o">/</span> <span class="n">tvOS</span> <span class="mf">9.0</span><span class="o">+</span>
</span><span class='line'><span class="n">Swift</span> <span class="mf">2.2</span> <span class="n">or</span> <span class="mf">2.3</span>
</span><span class='line'><span class="n">Xcode</span> <span class="mf">7.0</span><span class="o">+</span>
</span><span class='line'><span class="n">Swift</span> <span class="mi">3</span>
</span><span class='line'><span class="n">Xcode</span> <span class="mf">8.0</span><span class="o">+</span>
</span><span class='line'><span class="n">Carthage</span> <span class="mf">0.18</span><span class="o">+</span> <span class="p">(</span><span class="k">if</span> <span class="n">you</span> <span class="n">use</span><span class="p">)</span>
</span><span class='line'><span class="n">CocoaPods</span> <span class="mf">1.1.1</span><span class="o">+</span> <span class="p">(</span><span class="k">if</span> <span class="n">you</span> <span class="n">use</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>実際に<code>Swinject</code>を利用してSwiftでのDIを試してみたいと思います。</p>

<h3>Swinjectの使い方</h3>

<p>では早速使ってみましょう。</p>

<h4>Swinjectのインストール</h4>

<p>CocoaPodsでインストールするために下記のように<code>Podfile</code>を作成しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Podfile</span>
</span><span class='line'><span class="n">source</span> <span class="err">&#39;</span><span class="nl">https:</span><span class="c1">//github.com/CocoaPods/Specs.git&#39;</span>
</span><span class='line'><span class="n">platform</span> <span class="o">:</span><span class="n">ios</span><span class="p">,</span> <span class="err">&#39;</span><span class="mf">8.0</span><span class="err">&#39;</span> <span class="err">#</span> <span class="n">or</span> <span class="n">platform</span> <span class="o">:</span><span class="n">osx</span><span class="p">,</span> <span class="err">&#39;</span><span class="mf">10.10</span><span class="err">&#39;</span> <span class="k">if</span> <span class="n">your</span> <span class="n">target</span> <span class="n">is</span> <span class="n">OS</span> <span class="n">X</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="err">&#39;</span><span class="n">SwinjectSample</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">use_frameworks</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Swinject</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="o">~&gt;</span> <span class="mf">2.0.0</span><span class="err">&#39;</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">SwinjectStoryboard</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="mf">1.0.0</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>その後に<code>pod install</code>を実行しましょう。<br/>
これで<code>Swinject</code>の用意は完了です。</p>

<h4>DIしたいクラスの定義</h4>

<p>サンプルとしてDIしたいクラスを定義します。<br/>
具体的なクラスだけでなく <strong>プロトコル</strong> を定義しているのは、<br/>
後々、同じような<code>JavaProgrammer</code>クラスを作成したくなった際に便利だからです。<br/>
(ベースが同じで、拡張機能が必要になった際に、0から書き直す必要がなくなります。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Engineer.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">Engineer</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span><span class="o">?</span> <span class="p">{</span> <span class="n">get</span> <span class="n">set</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">develop</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">String</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftProgrammer:</span> <span class="n">Engineer</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">name:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="nl">name:</span> <span class="n">String</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">develop</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;Let&#39;s start developing a swift application!&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、先程作成した<code>Engineer</code>を参照する<code>CompanyOwner</code>クラスを作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Company.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'>
</span><span class='line'><span class="n">protocol</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">hire</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">String</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">CompanyOwner:</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">let</span> <span class="nl">humanResource:</span> <span class="n">Engineer</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="nl">humanResource:</span> <span class="n">Engineer</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">humanResource</span> <span class="o">=</span> <span class="n">humanResource</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">hire</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">name</span> <span class="o">=</span> <span class="n">humanResource</span><span class="p">.</span><span class="n">name</span> <span class="o">??</span> <span class="s">&quot;someone&quot;</span>
</span><span class='line'>        <span class="k">return</span> <span class="s">&quot;I&#39;m hiring \(name). \(humanResource.develop())&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここで<code>SwiftProgrammer</code>クラスでなく<code>Engineer</code>プロトコルを参照することで、<code>CompanyOwner</code>クラス自体が<code>SwiftProgrammer</code>クラスに依存することがなくなりました。<br/>
つまり<code>JavaProgrammer</code>を雇いたい<code>CompanyOwner</code>クラスが必要になった場合、作成するのは<code>JavaProgrammer</code>クラスのみで良くなります。<br/>
これはこれで<code>CompanyOwner</code>クラスに対して単体テストコードを書く時に<code>SwiftProgrammer</code>クラスに依存せずに書くことができます。</p>

<h4>DIコンテナへのクラスの登録</h4>

<p>さて、DIしたいクラスが定義できたので、そのクラスをDIコンテナに登録します。<br/>
公式ページによると<code>SwinjectStoryboard</code>を利用する場合と利用しない場合の2種類の方法があるそうですが、今回は簡単に対応可能な<code>SwinjectStoryboard</code>利用する方法で書いてみます。</p>

<p>サンプルとして、<code>ViewController.swift</code>でDIコンテナ経由で呼び出したクラスを利用したいとします。<br/>
その場合、下記のように、<code>ViewController.swift</code>にコンテナ定義を書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'><span class="n">import</span> <span class="n">SwinjectStoryboard</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">SwinjectStoryboard</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">class</span> <span class="n">func</span> <span class="n">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// (1)</span>
</span><span class='line'>        <span class="n">defaultContainer</span><span class="p">.</span><span class="k">register</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span> <span class="n">_</span> <span class="k">in</span> <span class="n">SwiftProgrammer</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;Takahiro&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>        <span class="c1">// (2)</span>
</span><span class='line'>        <span class="n">defaultContainer</span><span class="p">.</span><span class="k">register</span><span class="p">(</span><span class="n">Person</span><span class="p">.</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span> <span class="n">r</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">CompanyOwner</span><span class="p">(</span><span class="nl">humanResource:</span> <span class="n">r</span><span class="p">.</span><span class="n">resolve</span><span class="p">(</span><span class="n">Engineer</span><span class="p">.</span><span class="n">self</span><span class="p">)</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="c1">// (3)</span>
</span><span class='line'>        <span class="n">defaultContainer</span><span class="p">.</span><span class="n">storyboardInitCompleted</span><span class="p">(</span><span class="n">ViewController</span><span class="p">.</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span> <span class="n">r</span><span class="p">,</span> <span class="n">c</span> <span class="k">in</span>
</span><span class='line'>            <span class="n">c</span><span class="p">.</span><span class="n">person</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">resolve</span><span class="p">(</span><span class="n">Person</span><span class="p">.</span><span class="n">self</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>順々に説明すると、</p>

<ol>
<li><code>defaultContainer</code>に<code>Engineer</code>指定で<code>SwiftProgrammer(name: "Takahiro")</code>が呼び出されるように登録</li>
<li><code>defaultContainer</code>に<code>Person</code>指定で<code>CompanyOwner(humanResource: r.resolve(Engineer.self)!)</code>が呼び出されるように登録<br/>
※ 1で<code>Engineer</code>指定で<code>SwiftProgrammer(name: "Takahiro")</code>呼び出しをセットしているので、それが2の<code>CompanyOwner</code>の引数にセットされます。</li>
<li><code>defaultContainer</code>にDIコンテナ経由での呼び出し先と先ほどまで定義していた<code>Person</code>指定での呼び出し元を紐付け</li>
</ol>


<p>となっています。<br/>
これにより、下記のように<code>ViewController.swift</code>内でDIコンテナ経由で<code>Person</code>指定で想定した処理を呼び出すことができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">person:</span> <span class="n">Person</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>        <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'>        <span class="n">print</span><span class="p">(</span><span class="n">person</span><span class="o">?</span><span class="p">.</span><span class="n">hire</span><span class="p">()</span> <span class="o">??</span> <span class="s">&quot;I can&#39;t hire engineers.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">didReceiveMemoryWarning</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">didReceiveMemoryWarning</span><span class="p">()</span>
</span><span class='line'>        <span class="c1">// Dispose of any resources that can be recreated.</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記を見ると、<code>ViewController</code>クラスの中で<code>Person</code>をインスタンス化している箇所はないことがわかると思います。<br/>
つまり、DIコンテナ経由で<code>Person</code>を呼び出せているわけですね。</p>

<h3>まとめ</h3>

<p>さて、<code>Swinject</code>を利用してサンプルを書いてみた感想ですが&hellip;<br/>
正直、Spring Bootと比較すると、Swiftでは手動で書くべきところが多いと感じました。<br/>
また、様々な<code>UIViewController</code>にまたがって利用する場合は記載箇所に一工夫必要なのかなとも思いました。<br/>
(毎回、全<code>UIViewController</code>系のファイルに<code>setUp()</code>を書くわけにもいかないと思いますし&hellip;)</p>

<p>まだまだ未知数なところがあるので、継続して試してみたいところではあります。<br/>
と言ったところで本日はここまで。</p>

<p>参考：</p>

<ul>
<li><a href="http://permanent-til.me/archives/613">Spring BeanはSingletonだから、状態持たせるとバグるよ。</a></li>
<li><a href="http://qiita.com/chkkchy/items/5f59817beb3dff9c0c1e">SpringのDIとnewってなにがちがうんだっけ？</a></li>
<li><a href="https://github.com/Swinject/Swinject">Swinject</a></li>
<li><a href="http://dev.classmethod.jp/smartphone/swinject-dependency-injection/">Swinjectを使ったDependency Injection</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kitematicでエラーが発生してDockerコンテナが作成できない！！]]></title>
    <link href="http://grandbig.github.io/blog/2017/03/25/docker-for-mac-6/"/>
    <updated>2017-03-25T20:01:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/03/25/docker-for-mac-6</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>前回からだいぶ期間が空いてしまいましたが、久々に書きます！<br/>
と言っても今回はDocker For Macアプリに備え付けられている <strong>Kitematic</strong> に関してのメモです。</p>

<h3>KitematicでDockerイメージをダウンロードできない場合の対応</h3>

<p>KitematicはGUIで簡単にDockerコンテナを作成できたり、<strong>ポートフォワード</strong> や <strong>Privileged mode</strong> などの設定も実に簡単です。<br/>
その利便性が頼りがちになってしまうものの、Docker For Macアプリも完璧ではないため、まだまだうまくいかないことが時たまあります。<br/>
その1つが『Kitematicを通して、Dockerイメージがダウンロードできない』というものです。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>もし、下図のことが発生したら、次の操作を試してみましょう。</p>

<p><img src="http://grandbig.github.io/images/docker_pull_failed.png" alt="Dockerイメージのダウンロードに失敗" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">docker</span> <span class="nx">pull</span> <span class="o">&lt;</span><span class="nx">Docker</span><span class="err">イメージ名</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで該当するDockerイメージをダウンロードすることができます。</p>

<h4>Dockerコンテナでsystemctlコマンドが叩けない</h4>

<p>上記対応を進める中でぶつかった話なので書いておきます。<br/>
CentOS7.3のDockerイメージをダウンロードして、Dockerコンテナを起動して、Apacheをダウンロード&amp;起動しようとしたところ、表題の問題にぶつかりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">systemctl</span> <span class="nx">status</span> <span class="nx">httpd</span><span class="p">.</span><span class="nx">service</span>
</span><span class='line'><span class="nx">Failed</span> <span class="nx">to</span> <span class="nx">get</span> <span class="nx">D</span><span class="o">-</span><span class="nx">Bus</span> <span class="nx">connection</span><span class="o">:</span> <span class="nx">Operation</span> <span class="nx">not</span> <span class="nx">permitted</span>
</span></code></pre></td></tr></table></div></figure>


<p>これについて調べてみると、<code>Privileged mode</code>をONにした状態でDockerコンテナを初期化&amp;起動する必要があることがわかりました。<br/>
つまり、コマンドで言うところの</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">docker</span> <span class="nx">run</span> <span class="o">--</span><span class="nx">privileged</span> <span class="o">-</span><span class="nx">d</span> <span class="o">--</span><span class="nx">name</span> <span class="nx">httpd</span> <span class="nx">centos</span><span class="o">:</span><span class="nx">latest</span> <span class="o">/</span><span class="nx">sbin</span><span class="o">/</span><span class="nx">init</span>
</span></code></pre></td></tr></table></div></figure>


<p>という感じです。<br/>
因みに上記コマンドは、<code>docker pull</code>の役割も同時に果たしています。<br/>
これまた <code>Kitematic</code> の設定でチェックをつけて保存し直してもうまくいかず&hellip;</p>

<h4>ポートフォワードつきDockerコンテナの初期化</h4>

<p>さて、せっかくなのでポートフォワードの設定もコマンドベースで書いていきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">docker</span> <span class="nx">run</span> <span class="o">-</span><span class="nx">p</span> <span class="mi">8888</span><span class="o">:</span><span class="mi">80</span> <span class="o">--</span><span class="nx">name</span> <span class="nx">httpd</span> <span class="nx">centos</span><span class="o">:</span><span class="nx">latest</span> <span class="o">/</span><span class="nx">sbin</span><span class="o">/</span><span class="nx">init</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで、 <code>http://localhost:8888</code>でアクセスしたときにDockerコンテナの<code>80</code>ポートにアクセスすることができるようになります。<br/>
<code>Kitematic</code>でポートフォワードの設定はできるのですが、<code>Privileged mode</code>も必要なら下記コマンドのように初めに同時に設定してしまえば良いでしょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">docker</span> <span class="nx">run</span> <span class="o">--</span><span class="nx">privileged</span> <span class="o">-</span><span class="nx">d</span> <span class="o">-</span><span class="nx">p</span> <span class="mi">8888</span><span class="o">:</span><span class="mi">80</span> <span class="o">--</span><span class="nx">name</span> <span class="nx">httpd</span> <span class="nx">centos</span><span class="o">:</span><span class="nx">latest</span> <span class="o">/</span><span class="nx">sbin</span><span class="o">/</span><span class="nx">init</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>今回は<code>Docker</code>コマンドについて少々触れました。<br/>
<code>Kitematic</code>が便利だからと言っても、いざという時にコマンドが使えるようになっていると解決の幅が広がりますね。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerコンテナ内のUbuntuでMariaDBを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/02/26/docker-for-mac-5/"/>
    <updated>2017-02-26T22:38:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/02/26/docker-for-mac-5</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>さて、Redisに引き続き<a href="https://mariadb.org/">MariaDB</a>をDockerコンテナ内のUbuntuにインストールしてみたいと思います。<br/>
今回扱う環境は以下です。</p>

<ul>
<li>Ubuntu: 16.04.2 LTS</li>
<li>MariaDB: Ver 15.1 Distrib 10.0.29-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2</li>
</ul>


<p>では早速インストール方法から見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>MariaDBのインストール</h3>

<p>これまで通りで非常に簡単です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 念のためapt-getをupdate &amp;&amp; upgrade</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">update</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">upgrade</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MariaDBのインストール</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">mariadb</span><span class="o">-</span><span class="nx">server</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MariaDBがインストールされたことの確認</span>
</span><span class='line'><span class="c1">// /etc配下にmysqlフォルダがある</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">cd</span> <span class="o">/</span><span class="nx">etc</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">cd</span> <span class="nx">ls</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MariaDBの初期設定</h3>

<p>インストール後の初期設定手順を書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">mysql_secure_installation</span>
</span><span class='line'><span class="nx">NOTE</span><span class="o">:</span> <span class="nx">RUNNING</span> <span class="nx">ALL</span> <span class="nx">PARTS</span> <span class="nx">OF</span> <span class="nx">THIS</span> <span class="nx">SCRIPT</span> <span class="nx">IS</span> <span class="nx">RECOMMENDED</span> <span class="nx">FOR</span> <span class="nx">ALL</span> <span class="nx">MariaDB</span>
</span><span class='line'>      <span class="nx">SERVERS</span> <span class="nx">IN</span> <span class="nx">PRODUCTION</span> <span class="nx">USE</span><span class="o">!</span>  <span class="nx">PLEASE</span> <span class="nx">READ</span> <span class="nx">EACH</span> <span class="nx">STEP</span> <span class="nx">CAREFULLY</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="nx">In</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">log</span> <span class="nx">into</span> <span class="nx">MariaDB</span> <span class="nx">to</span> <span class="nx">secure</span> <span class="nx">it</span><span class="p">,</span> <span class="nx">we</span><span class="err">‘</span><span class="nx">ll</span> <span class="nx">need</span> <span class="nx">the</span> <span class="nx">current</span>
</span><span class='line'><span class="nx">password</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">root</span> <span class="nx">user</span><span class="p">.</span>  <span class="nx">If</span> <span class="nx">you</span><span class="err">‘</span><span class="nx">ve</span> <span class="nx">just</span> <span class="nx">installed</span> <span class="nx">MariaDB</span><span class="p">,</span> <span class="nx">and</span>
</span><span class='line'><span class="nx">you</span> <span class="nx">haven</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">set</span> <span class="nx">the</span> <span class="nx">root</span> <span class="nx">password</span> <span class="nx">yet</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">password</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">blank</span><span class="p">,</span>
</span><span class='line'><span class="nx">so</span> <span class="nx">you</span> <span class="nx">should</span> <span class="nx">just</span> <span class="nx">press</span> <span class="nx">enter</span> <span class="nx">here</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// rootユーザのパスワードを設定しましょう！</span>
</span><span class='line'><span class="nx">Enter</span> <span class="nx">current</span> <span class="nx">password</span> <span class="k">for</span> <span class="nx">root</span> <span class="p">(</span><span class="nx">enter</span> <span class="k">for</span> <span class="nx">none</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'><span class="nx">OK</span><span class="p">,</span> <span class="nx">successfully</span> <span class="nx">used</span> <span class="nx">password</span><span class="p">,</span> <span class="nx">moving</span> <span class="nx">on</span><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Setting</span> <span class="nx">the</span> <span class="nx">root</span> <span class="nx">password</span> <span class="nx">ensures</span> <span class="nx">that</span> <span class="nx">nobody</span> <span class="nx">can</span> <span class="nx">log</span> <span class="nx">into</span> <span class="nx">the</span> <span class="nx">MariaDB</span>
</span><span class='line'><span class="nx">root</span> <span class="nx">user</span> <span class="nx">without</span> <span class="nx">the</span> <span class="nx">proper</span> <span class="nx">authorisation</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">You</span> <span class="nx">already</span> <span class="nx">have</span> <span class="nx">a</span> <span class="nx">root</span> <span class="nx">password</span> <span class="nx">set</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">safely</span> <span class="nx">answer</span> <span class="s1">&#39;n&#39;</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// rootユーザのパスワードを変更しますか？(既に設定したので &quot;n&quot; を入力)</span>
</span><span class='line'><span class="nx">Change</span> <span class="nx">the</span> <span class="nx">root</span> <span class="nx">password</span><span class="o">?</span> <span class="p">[</span><span class="nx">Y</span><span class="o">/</span><span class="nx">n</span><span class="p">]</span> <span class="nx">n</span>
</span><span class='line'> <span class="p">...</span> <span class="nx">skipping</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">By</span> <span class="k">default</span><span class="p">,</span> <span class="nx">a</span> <span class="nx">MariaDB</span> <span class="nx">installation</span> <span class="nx">has</span> <span class="nx">an</span> <span class="nx">anonymous</span> <span class="nx">user</span><span class="p">,</span> <span class="nx">allowing</span> <span class="nx">anyone</span>
</span><span class='line'><span class="nx">to</span> <span class="nx">log</span> <span class="nx">into</span> <span class="nx">MariaDB</span> <span class="nx">without</span> <span class="nx">having</span> <span class="nx">to</span> <span class="nx">have</span> <span class="nx">a</span> <span class="nx">user</span> <span class="nx">account</span> <span class="nx">created</span> <span class="k">for</span>
</span><span class='line'><span class="nx">them</span><span class="p">.</span>  <span class="nx">This</span> <span class="nx">is</span> <span class="nx">intended</span> <span class="nx">only</span> <span class="k">for</span> <span class="nx">testing</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">to</span> <span class="nx">make</span> <span class="nx">the</span> <span class="nx">installation</span>
</span><span class='line'><span class="nx">go</span> <span class="nx">a</span> <span class="nx">bit</span> <span class="nx">smoother</span><span class="p">.</span>  <span class="nx">You</span> <span class="nx">should</span> <span class="nx">remove</span> <span class="nx">them</span> <span class="nx">before</span> <span class="nx">moving</span> <span class="nx">into</span> <span class="nx">a</span>
</span><span class='line'><span class="nx">production</span> <span class="nx">environment</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 匿名ユーザを削除しますか？</span>
</span><span class='line'><span class="nx">Remove</span> <span class="nx">anonymous</span> <span class="nx">users</span><span class="o">?</span> <span class="p">[</span><span class="nx">Y</span><span class="o">/</span><span class="nx">n</span><span class="p">]</span> <span class="nx">y</span>
</span><span class='line'> <span class="p">...</span> <span class="nx">Success</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Normally</span><span class="p">,</span> <span class="nx">root</span> <span class="nx">should</span> <span class="nx">only</span> <span class="nx">be</span> <span class="nx">allowed</span> <span class="nx">to</span> <span class="nx">connect</span> <span class="nx">from</span> <span class="s1">&#39;localhost&#39;</span><span class="p">.</span>  <span class="nx">This</span>
</span><span class='line'><span class="nx">ensures</span> <span class="nx">that</span> <span class="nx">someone</span> <span class="nx">cannot</span> <span class="nx">guess</span> <span class="nx">at</span> <span class="nx">the</span> <span class="nx">root</span> <span class="nx">password</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">network</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// リモートでrootによるログインを許可しますか？</span>
</span><span class='line'><span class="nx">Disallow</span> <span class="nx">root</span> <span class="nx">login</span> <span class="nx">remotely</span><span class="o">?</span> <span class="p">[</span><span class="nx">Y</span><span class="o">/</span><span class="nx">n</span><span class="p">]</span> <span class="nx">y</span>
</span><span class='line'> <span class="p">...</span> <span class="nx">Success</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="nx">By</span> <span class="k">default</span><span class="p">,</span> <span class="nx">MariaDB</span> <span class="nx">comes</span> <span class="kd">with</span> <span class="nx">a</span> <span class="nx">database</span> <span class="nx">named</span> <span class="s1">&#39;test&#39;</span> <span class="nx">that</span> <span class="nx">anyone</span> <span class="nx">can</span>
</span><span class='line'><span class="nx">access</span><span class="p">.</span>  <span class="nx">This</span> <span class="nx">is</span> <span class="nx">also</span> <span class="nx">intended</span> <span class="nx">only</span> <span class="k">for</span> <span class="nx">testing</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">should</span> <span class="nx">be</span> <span class="nx">removed</span>
</span><span class='line'><span class="nx">before</span> <span class="nx">moving</span> <span class="nx">into</span> <span class="nx">a</span> <span class="nx">production</span> <span class="nx">environment</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// test用のデータベースを削除しますか？</span>
</span><span class='line'><span class="nx">Remove</span> <span class="nx">test</span> <span class="nx">database</span> <span class="nx">and</span> <span class="nx">access</span> <span class="nx">to</span> <span class="nx">it</span><span class="o">?</span> <span class="p">[</span><span class="nx">Y</span><span class="o">/</span><span class="nx">n</span><span class="p">]</span> <span class="nx">y</span>
</span><span class='line'> <span class="o">-</span> <span class="nx">Dropping</span> <span class="nx">test</span> <span class="nx">database</span><span class="p">...</span>
</span><span class='line'> <span class="p">...</span> <span class="nx">Success</span><span class="o">!</span>
</span><span class='line'> <span class="o">-</span> <span class="nx">Removing</span> <span class="nx">privileges</span> <span class="nx">on</span> <span class="nx">test</span> <span class="nx">database</span><span class="p">...</span>
</span><span class='line'> <span class="p">...</span> <span class="nx">Success</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Reloading</span> <span class="nx">the</span> <span class="nx">privilege</span> <span class="nx">tables</span> <span class="nx">will</span> <span class="nx">ensure</span> <span class="nx">that</span> <span class="nx">all</span> <span class="nx">changes</span> <span class="nx">made</span> <span class="nx">so</span> <span class="nx">far</span>
</span><span class='line'><span class="nx">will</span> <span class="nx">take</span> <span class="nx">effect</span> <span class="nx">immediately</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// テーブルへの特権情報をリロードしますか？(上記までの変更を即時反映させるため &quot;y&quot; を選択)</span>
</span><span class='line'><span class="nx">Reload</span> <span class="nx">privilege</span> <span class="nx">tables</span> <span class="nx">now</span><span class="o">?</span> <span class="p">[</span><span class="nx">Y</span><span class="o">/</span><span class="nx">n</span><span class="p">]</span> <span class="nx">y</span>
</span><span class='line'> <span class="p">...</span> <span class="nx">Success</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Cleaning</span> <span class="nx">up</span><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="nx">All</span> <span class="nx">done</span><span class="o">!</span>  <span class="nx">If</span> <span class="nx">you</span><span class="err">‘</span><span class="nx">ve</span> <span class="nx">completed</span> <span class="nx">all</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">above</span> <span class="nx">steps</span><span class="p">,</span> <span class="nx">your</span> <span class="nx">MariaDB</span>
</span><span class='line'><span class="nx">installation</span> <span class="nx">should</span> <span class="nx">now</span> <span class="nx">be</span> <span class="nx">secure</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Thanks</span> <span class="k">for</span> <span class="nx">using</span> <span class="nx">MariaDB</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MariaDBにユーザを追加</h3>

<p>流石にrootユーザだけだと何なので、メインで利用するユーザを作成しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// MariaDBにログイン</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">mysql</span> <span class="o">-</span><span class="nx">u</span> <span class="nx">root</span> <span class="o">-</span><span class="nx">p</span>
</span><span class='line'><span class="c1">// ユーザを作成</span>
</span><span class='line'><span class="nx">MariaDB</span> <span class="p">[(</span><span class="nx">none</span><span class="p">)]</span><span class="o">&gt;</span> <span class="nx">create</span> <span class="nx">user</span> <span class="s1">&#39;takahiro&#39;</span><span class="err">@</span><span class="s1">&#39;localhost&#39;</span> <span class="nx">identified</span> <span class="nx">by</span> <span class="s1">&#39;password&#39;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// ユーザの一覧を確認</span>
</span><span class='line'><span class="nx">MariaDB</span> <span class="p">[(</span><span class="nx">none</span><span class="p">)]</span><span class="o">&gt;</span> <span class="nx">select</span> <span class="nx">Host</span><span class="p">,</span> <span class="nx">User</span><span class="p">,</span> <span class="nx">Password</span> <span class="nx">from</span> <span class="nx">mysql</span><span class="p">.</span><span class="nx">user</span><span class="p">;</span>
</span><span class='line'><span class="o">+-----------+----------+-------------------------------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="nx">Host</span>      <span class="o">|</span> <span class="nx">User</span>     <span class="o">|</span> <span class="nx">Password</span>                                  <span class="o">|</span>
</span><span class='line'><span class="o">+-----------+----------+-------------------------------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="nx">localhost</span> <span class="o">|</span> <span class="nx">root</span>     <span class="o">|</span>                                           <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="nx">localhost</span> <span class="o">|</span> <span class="nx">takahiro</span> <span class="o">|</span> <span class="o">*****************************************</span> <span class="o">|</span>
</span><span class='line'><span class="o">+-----------+----------+-------------------------------------------+</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MariaDBの設定ファイル</h3>

<p>さてさて、続いてMariaDBのデフォルトの設定ファイルを見ていきます。</p>

<p>設定ファイルがたくさんあることで混乱しそうになりますが、1つ1つはあまり何も書いていません。<br/>
構造を見てみると&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">mysql</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">conf</span><span class="p">.</span><span class="nx">d</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="nx">mysql</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="nx">mysqldump</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">debian</span><span class="o">-</span><span class="nx">start</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">debian</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">mariadb</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">mariadb</span><span class="p">.</span><span class="nx">conf</span><span class="p">.</span><span class="nx">d</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="mi">50</span><span class="o">-</span><span class="nx">client</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="mi">50</span><span class="o">-</span><span class="nx">mysql</span><span class="o">-</span><span class="nx">clients</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">│</span>    <span class="err">├──</span> <span class="mi">50</span><span class="o">-</span><span class="nx">mysqld_safe</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">│</span>    <span class="err">└──</span> <span class="mi">50</span><span class="o">-</span><span class="nx">server</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">├──</span> <span class="nx">my</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">└──</span> <span class="nx">my</span><span class="p">.</span><span class="nx">cnf</span><span class="p">.</span><span class="nx">fallback</span>
</span></code></pre></td></tr></table></div></figure>


<p>となっています。<br/>
それぞれの大まかな意図は<code>mariadb.cnf</code>に書かれています。</p>

<h5>mariadb.cnf</h5>

<p>このファイルには下記のように書かれています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">MariaDB</span> <span class="nx">configuration</span> <span class="nx">file</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">MariaDB</span><span class="o">/</span><span class="nx">MySQL</span> <span class="nx">tools</span> <span class="nx">read</span> <span class="nx">configuration</span> <span class="nx">files</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">order</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="p">.</span> <span class="s2">&quot;/etc/mysql/mariadb.cnf&quot;</span> <span class="p">(</span><span class="k">this</span> <span class="nx">file</span><span class="p">)</span> <span class="nx">to</span> <span class="nx">set</span> <span class="nx">global</span> <span class="nx">defaults</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="mi">2</span><span class="p">.</span> <span class="s2">&quot;/etc/mysql/conf.d/*.cnf&quot;</span> <span class="nx">to</span> <span class="nx">set</span> <span class="nx">global</span> <span class="nx">options</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="mi">3</span><span class="p">.</span> <span class="s2">&quot;/etc/mysql/mariadb.conf.d/*.cnf&quot;</span> <span class="nx">to</span> <span class="nx">set</span> <span class="nx">MariaDB</span><span class="o">-</span><span class="nx">only</span> <span class="nx">options</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="mi">4</span><span class="p">.</span> <span class="s2">&quot;~/.my.cnf&quot;</span> <span class="nx">to</span> <span class="nx">set</span> <span class="nx">user</span><span class="o">-</span><span class="nx">specific</span> <span class="nx">options</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">option</span> <span class="nx">is</span> <span class="nx">defined</span> <span class="nx">multiple</span> <span class="nx">times</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">last</span> <span class="nx">one</span> <span class="nx">will</span> <span class="nx">apply</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">One</span> <span class="nx">can</span> <span class="nx">use</span> <span class="nx">all</span> <span class="kr">long</span> <span class="nx">options</span> <span class="nx">that</span> <span class="nx">the</span> <span class="nx">program</span> <span class="nx">supports</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Run</span> <span class="nx">program</span> <span class="kd">with</span> <span class="o">--</span><span class="nx">help</span> <span class="nx">to</span> <span class="nx">get</span> <span class="nx">a</span> <span class="nx">list</span> <span class="nx">of</span> <span class="nx">available</span> <span class="nx">options</span> <span class="nx">and</span> <span class="kd">with</span>
</span><span class='line'><span class="err">#</span> <span class="o">--</span><span class="nx">print</span><span class="o">-</span><span class="nx">defaults</span> <span class="nx">to</span> <span class="nx">see</span> <span class="nx">which</span> <span class="nx">it</span> <span class="nx">would</span> <span class="nx">actually</span> <span class="nx">understand</span> <span class="nx">and</span> <span class="nx">use</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">group</span> <span class="nx">is</span> <span class="nx">read</span> <span class="nx">both</span> <span class="nx">both</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">client</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">server</span>
</span><span class='line'><span class="err">#</span> <span class="nx">use</span> <span class="nx">it</span> <span class="k">for</span> <span class="nx">options</span> <span class="nx">that</span> <span class="nx">affect</span> <span class="nx">everything</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="p">[</span><span class="nx">client</span><span class="o">-</span><span class="nx">server</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">Import</span> <span class="nx">all</span> <span class="p">.</span><span class="nx">cnf</span> <span class="nx">files</span> <span class="nx">from</span> <span class="nx">configuration</span> <span class="nx">directory</span>
</span><span class='line'><span class="o">!</span><span class="nx">includedir</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">mysql</span><span class="o">/</span><span class="nx">conf</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span>
</span><span class='line'><span class="o">!</span><span class="nx">includedir</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">mysql</span><span class="o">/</span><span class="nx">mariadb</span><span class="p">.</span><span class="nx">conf</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここに書かれている通り、</p>

<ol>
<li><code>/etc/mysql/mariadb.cnf</code>: グローバル設定を書く</li>
<li><code>/etc/mysql/conf.d/*.cnf</code>: グローバルオプション設定を書く</li>
<li><code>/etc/mysql/mariadb.conf.d/*.cnf</code>: MariaDBにのみ有効なオプション設定を書く</li>
<li><code>~/.my.cnf</code>: ユーザ固有のオプション設定を書く</li>
</ol>


<p>というフォルダ構成になっているようです。</p>

<p>また、<code>[client-server]</code>を設定することでMariaDBクライアントとMariaDBサーバの両方から読み込まれる設定ファイルとして定義しています。<br/>
筆者が少し引っかかったのは<code>!includedir</code>構文です。<br/>
これは指定したファイルのインクルードを実行する構文です。<br/>
(<code>!</code>がついているのでインクルードしないのかと思いきや、これでインクルートなんですね&hellip;)</p>

<h5>conf.d/mysql.cnf</h5>

<p>下記しか書かれていません&hellip;<br/>
MySQLクライアントに有効な設定を書くことを想定している書き方に見えますね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span><span class="nx">mysql</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h5>conf.d/mysqldump.cnf</h5>

<p>名前からして<code>mysqldump</code>に関する設定ですね。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span><span class="nx">mysqldump</span><span class="p">]</span>
</span><span class='line'><span class="nx">quick</span>
</span><span class='line'><span class="nx">quote</span><span class="o">-</span><span class="nx">names</span>
</span><span class='line'><span class="nx">max_allowed_packet</span>      <span class="o">=</span> <span class="mi">16</span><span class="nx">M</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>quick</code>: テーブルを1行ずつDumpする設定</li>
<li><code>quote-names</code>: 識別子を逆引用符文字で囲む</li>
<li><code>max_allowed_packet</code>: サーバーとの間で送受信するパケットの最大長</li>
</ul>


<h5>mariadb.conf.d/50-client.cnf</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">group</span> <span class="nx">is</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">client</span> <span class="nx">library</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Use</span> <span class="nx">it</span> <span class="k">for</span> <span class="nx">options</span> <span class="nx">that</span> <span class="nx">affect</span> <span class="nx">all</span> <span class="nx">clients</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">not</span> <span class="nx">the</span> <span class="nx">server</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">client</span><span class="p">]</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Default</span> <span class="nx">is</span> <span class="nx">Latin1</span><span class="p">,</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">need</span> <span class="nx">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="nx">set</span> <span class="k">this</span> <span class="p">(</span><span class="nx">also</span> <span class="k">in</span> <span class="nx">server</span> <span class="nx">section</span><span class="p">)</span>
</span><span class='line'><span class="k">default</span><span class="o">-</span><span class="nx">character</span><span class="o">-</span><span class="nx">set</span> <span class="o">=</span> <span class="nx">utf8mb4</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">group</span> <span class="nx">is</span> <span class="o">*</span><span class="nx">never</span><span class="o">*</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">mysql</span> <span class="nx">client</span> <span class="nx">library</span><span class="p">,</span> <span class="nx">though</span> <span class="k">this</span>
</span><span class='line'><span class="err">#</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">mysql</span><span class="o">/</span><span class="nx">mariadb</span><span class="p">.</span><span class="nx">cnf</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span><span class="nx">client</span><span class="p">.</span><span class="nx">cnf</span> <span class="nx">file</span> <span class="nx">is</span> <span class="nx">not</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">Oracle</span> <span class="nx">MySQL</span>
</span><span class='line'><span class="err">#</span> <span class="nx">client</span> <span class="nx">anyway</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">use</span> <span class="nx">the</span> <span class="nx">same</span> <span class="p">.</span><span class="nx">cnf</span> <span class="nx">file</span> <span class="k">for</span> <span class="nx">MySQL</span> <span class="nx">and</span> <span class="nx">MariaDB</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="nx">use</span> <span class="nx">it</span> <span class="k">for</span> <span class="nx">MariaDB</span><span class="o">-</span><span class="nx">only</span> <span class="nx">client</span> <span class="nx">options</span>
</span><span class='line'><span class="p">[</span><span class="nx">client</span><span class="o">-</span><span class="nx">mariadb</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>MySQL / MariaDBクライアント側のデフォルトの文字コードが<code>utf8mb4</code>と設定されています。<br/>
また、MariaDBクライアントのみ設定を追加したい場合は<code>[client-mariadb]</code>より下の行にオプション設定を書きましょう。</p>

<h5>mariadb.conf.d/50-mysql-clients.cnf</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">These</span> <span class="nx">groups</span> <span class="nx">are</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">MariaDB</span> <span class="nx">command</span><span class="o">-</span><span class="nx">line</span> <span class="nx">tools</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Use</span> <span class="nx">it</span> <span class="k">for</span> <span class="nx">options</span> <span class="nx">that</span> <span class="nx">affect</span> <span class="nx">only</span> <span class="nx">one</span> <span class="nx">utility</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysql</span><span class="p">]</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Default</span> <span class="nx">is</span> <span class="nx">Latin1</span><span class="p">,</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">need</span> <span class="nx">UTF</span><span class="o">-</span><span class="mi">8</span> <span class="nx">set</span> <span class="k">this</span> <span class="p">(</span><span class="nx">also</span> <span class="k">in</span> <span class="nx">server</span> <span class="nx">section</span><span class="p">)</span>
</span><span class='line'><span class="k">default</span><span class="o">-</span><span class="nx">character</span><span class="o">-</span><span class="nx">set</span> <span class="o">=</span> <span class="nx">utf8mb4</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysql_upgrade</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysqladmin</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysqlbinlog</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysqlcheck</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysqldump</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysqlimport</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysqlshow</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nx">mysqlslap</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>MySQLクライアント側のデフォルト文字コードは<code>utf8mb4</code>で設定されています。<br/>
他にもMySQL関連の設定を追加できるようですが、デフォルトでは何も書かれていませんでした。<br/>
一応、それぞれについて簡単に説明しておきます。</p>

<ul>
<li><code>mysqladmin</code>

<ul>
<li>MySQLサーバの管理を行うクライアント</li>
<li>サーバーの構成や現在のステータスの確認、データベースの作成および削除、およびその他の用途に使用</li>
</ul>
</li>
<li><code>mysqlbinlog</code>

<ul>
<li>MySQLのバイナリログの内容を確認</li>
</ul>
</li>
<li><code>mysqlcheck</code>

<ul>
<li>テーブルの保守 (テーブルの検査、修復、最適化、分析) を実行</li>
</ul>
</li>
<li><code>mysqldump</code>

<ul>
<li>MySQLデータのバックアップを実行</li>
</ul>
</li>
<li><code>mysqlimport</code>

<ul>
<li>LOAD DATA INFILE SQL ステートメントにコマンド行インタフェースを提供</li>
<li>ファイルをテーブルにインポート</li>
</ul>
</li>
<li><code>mysqlshow</code>

<ul>
<li>データベース / テーブル / テーブルのカラム / インデックスの存在迅速に確認するために使用</li>
</ul>
</li>
<li><code>mysqlslap</code>

<ul>
<li>MySQL サーバーのクライアント負荷をエミュレートし、各段階のタイミングをレポートする</li>
</ul>
</li>
</ul>


<h5>mariadb.conf.d/50-mysqld_safe.cnf</h5>

<p>エラー発生時の再起動やランタイム情報のエラーログファイルへのロギングなど、いくつかの安全機能を追加するために設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span><span class="nx">mysqld_safe</span><span class="p">]</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">passed</span> <span class="nx">to</span> <span class="nx">all</span> <span class="nx">mysql</span> <span class="nx">clients</span>
</span><span class='line'><span class="err">#</span> <span class="nx">It</span> <span class="nx">has</span> <span class="nx">been</span> <span class="nx">reported</span> <span class="nx">that</span> <span class="nx">passwords</span> <span class="nx">should</span> <span class="nx">be</span> <span class="nx">enclosed</span> <span class="kd">with</span> <span class="nx">ticks</span><span class="o">/</span><span class="nx">quotes</span>
</span><span class='line'><span class="err">#</span> <span class="nx">escpecially</span> <span class="k">if</span> <span class="nx">they</span> <span class="nx">contain</span> <span class="s2">&quot;#&quot;</span> <span class="nx">chars</span><span class="p">...</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Remember</span> <span class="nx">to</span> <span class="nx">edit</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">mysql</span><span class="o">/</span><span class="nx">debian</span><span class="p">.</span><span class="nx">cnf</span> <span class="nx">when</span> <span class="nx">changing</span> <span class="nx">the</span> <span class="nx">socket</span> <span class="nx">location</span><span class="p">.</span>
</span><span class='line'><span class="nx">socket</span>          <span class="o">=</span> <span class="err">/var/run/mysqld/mysqld.sock</span>
</span><span class='line'><span class="nx">nice</span>            <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="nx">skip_log_error</span>
</span><span class='line'><span class="nx">syslog</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>socket</code>: Unixドメインソケット接続を待機するソケットファイル</li>
<li><code>nice</code>: サーバのスケジュール設定の優先順位を設定するために利用します</li>
<li><code>skip_log_error</code>: エラーログの出力をスキップする設定</li>
<li><code>syslog</code>: エラーメッセージをsyslogに書き込むための設定</li>
</ul>


<h5>mariadb.conf.d/50-server.cnf</h5>

<p>文章の長さからしてMariaDB設定のベースとなります。<br/>
分割して見ていきます。<br/>
まずは基本設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">These</span> <span class="nx">groups</span> <span class="nx">are</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">MariaDB</span> <span class="nx">server</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Use</span> <span class="nx">it</span> <span class="k">for</span> <span class="nx">options</span> <span class="nx">that</span> <span class="nx">only</span> <span class="nx">the</span> <span class="nx">server</span> <span class="p">(</span><span class="nx">but</span> <span class="nx">not</span> <span class="nx">clients</span><span class="p">)</span> <span class="nx">should</span> <span class="nx">see</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">See</span> <span class="nx">the</span> <span class="nx">examples</span> <span class="nx">of</span> <span class="nx">server</span> <span class="nx">my</span><span class="p">.</span><span class="nx">cnf</span> <span class="nx">files</span> <span class="k">in</span> <span class="err">/usr/share/mysql/</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="k">this</span> <span class="nx">is</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">standalone</span> <span class="nx">daemon</span> <span class="nx">and</span> <span class="nx">embedded</span> <span class="nx">servers</span>
</span><span class='line'><span class="p">[</span><span class="nx">server</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="k">this</span> <span class="nx">is</span> <span class="nx">only</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">mysqld</span> <span class="nx">standalone</span> <span class="nx">daemon</span>
</span><span class='line'><span class="p">[</span><span class="nx">mysqld</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">Basic</span> <span class="nx">Settings</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="nx">user</span>            <span class="o">=</span> <span class="nx">mysql</span>
</span><span class='line'><span class="nx">pid</span><span class="o">-</span><span class="nx">file</span>        <span class="o">=</span> <span class="err">/var/run/mysqld/mysqld.pid</span>
</span><span class='line'><span class="nx">socket</span>          <span class="o">=</span> <span class="err">/var/run/mysqld/mysqld.sock</span>
</span><span class='line'><span class="nx">port</span>            <span class="o">=</span> <span class="mi">3306</span>
</span><span class='line'><span class="nx">basedir</span>         <span class="o">=</span> <span class="err">/usr</span>
</span><span class='line'><span class="nx">datadir</span>         <span class="o">=</span> <span class="err">/var/lib/mysql</span>
</span><span class='line'><span class="nx">tmpdir</span>          <span class="o">=</span> <span class="err">/tmp</span>
</span><span class='line'><span class="nx">lc</span><span class="o">-</span><span class="nx">messages</span><span class="o">-</span><span class="nx">dir</span> <span class="o">=</span> <span class="err">/usr/share/mysql</span>
</span><span class='line'><span class="nx">skip</span><span class="o">-</span><span class="nx">external</span><span class="o">-</span><span class="nx">locking</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">Instead</span> <span class="nx">of</span> <span class="nx">skip</span><span class="o">-</span><span class="nx">networking</span> <span class="nx">the</span> <span class="k">default</span> <span class="nx">is</span> <span class="nx">now</span> <span class="nx">to</span> <span class="nx">listen</span> <span class="nx">only</span> <span class="nx">on</span>
</span><span class='line'><span class="err">#</span> <span class="nx">localhost</span> <span class="nx">which</span> <span class="nx">is</span> <span class="nx">more</span> <span class="nx">compatible</span> <span class="nx">and</span> <span class="nx">is</span> <span class="nx">not</span> <span class="nx">less</span> <span class="nx">secure</span><span class="p">.</span>
</span><span class='line'><span class="nx">bind</span><span class="o">-</span><span class="nx">address</span>            <span class="o">=</span> <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>user</code>: MariaDBに関連する操作を実行するためのユーザを設定します</li>
<li><code>pid-file</code>: PIDファイルの指定先です</li>
<li><code>socket</code>: Unixドメインソケット接続を待機するソケットファイル</li>
<li><code>port</code>: 接続するためのポート番号です</li>
<li><code>basedir</code>: MariaDBのインストールディレクトリ</li>
<li><code>datadir</code>: MariaDBのデータベースに関するファイルが格納されるディレクトリ</li>
<li><code>tmpdir</code>: ファイルシステムのディレクトリ</li>
<li><code>lc-messages-dir</code>: エラーメッセージの配置ディレクトリ</li>
<li><code>skip-external-locking</code>: 外部ロックを無効にする設定</li>
<li><code>bind-address</code>: MariaDBへの接続を許可するIPアドレスの設定</li>
</ul>


<p>続いて、チューニング周りです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">Fine</span> <span class="nx">Tuning</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="nx">key_buffer_size</span>         <span class="o">=</span> <span class="mi">16</span><span class="nx">M</span>
</span><span class='line'><span class="nx">max_allowed_packet</span>      <span class="o">=</span> <span class="mi">16</span><span class="nx">M</span>
</span><span class='line'><span class="nx">thread_stack</span>            <span class="o">=</span> <span class="mi">192</span><span class="nx">K</span>
</span><span class='line'><span class="nx">thread_cache_size</span>       <span class="o">=</span> <span class="mi">8</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">replaces</span> <span class="nx">the</span> <span class="nx">startup</span> <span class="nx">script</span> <span class="nx">and</span> <span class="nx">checks</span> <span class="nx">MyISAM</span> <span class="nx">tables</span> <span class="k">if</span> <span class="nx">needed</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">first</span> <span class="nx">time</span> <span class="nx">they</span> <span class="nx">are</span> <span class="nx">touched</span>
</span><span class='line'><span class="nx">myisam</span><span class="o">-</span><span class="nx">recover</span>         <span class="o">=</span> <span class="nx">BACKUP</span>
</span><span class='line'><span class="err">#</span><span class="nx">max_connections</span>        <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="err">#</span><span class="nx">table_cache</span>            <span class="o">=</span> <span class="mi">64</span>
</span><span class='line'><span class="err">#</span><span class="nx">thread_concurrency</span>     <span class="o">=</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>key_buffer_size</code>: インデックスをメモリ上で確保するために使う物理メモリの許容量</li>
<li><code>max_allowed_packet</code>: クライアントからMySQLサーバに転送可能な最大パケット数</li>
<li><code>thread_stack</code>: スレッドに割り当てるスタック領域のサイズ</li>
<li><code>thread_cache_size</code>: キャッシュに保持するスレッドの最大数</li>
<li><code>myisam-recover</code>:MyISAMテーブルがクラッシュしたときに自動でリカバリーする設定</li>
<li><code>max_connections</code>: 許容同時接続数</li>
<li><code>table_cache</code>: メモリ上にキャッシュとして保持しておくテーブルの最大数</li>
<li><code>thread_concurrency</code>: 同時実行スレッド数</li>
</ul>


<p>クエリキャッシュの設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">Query</span> <span class="nx">Cache</span> <span class="nx">Configuration</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="nx">query_cache_limit</span>       <span class="o">=</span> <span class="mi">1</span><span class="nx">M</span>
</span><span class='line'><span class="nx">query_cache_size</span>        <span class="o">=</span> <span class="mi">16</span><span class="nx">M</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>query_cache_limit</code>: キャッシュするクエリ結果の最大値</li>
<li><code>query_cache_size</code>: クエリキャッシュのサイズ設定</li>
</ul>


<p>ロギングとレプリケーションに関する設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">Logging</span> <span class="nx">and</span> <span class="nx">Replication</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Both</span> <span class="nx">location</span> <span class="nx">gets</span> <span class="nx">rotated</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">cronjob</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Be</span> <span class="nx">aware</span> <span class="nx">that</span> <span class="k">this</span> <span class="nx">log</span> <span class="nx">type</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">performance</span> <span class="nx">killer</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">As</span> <span class="nx">of</span> <span class="mf">5.1</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">enable</span> <span class="nx">the</span> <span class="nx">log</span> <span class="nx">at</span> <span class="nx">runtime</span><span class="o">!</span>
</span><span class='line'><span class="err">#</span><span class="nx">general_log_file</span>        <span class="o">=</span> <span class="err">/var/log/mysql/mysql.log</span>
</span><span class='line'><span class="err">#</span><span class="nx">general_log</span>             <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nb">Error</span> <span class="nx">log</span> <span class="o">-</span> <span class="nx">should</span> <span class="nx">be</span> <span class="nx">very</span> <span class="nx">few</span> <span class="nx">entries</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="nx">log_error</span> <span class="o">=</span> <span class="err">/var/log/mysql/error.log</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Enable</span> <span class="nx">the</span> <span class="nx">slow</span> <span class="nx">query</span> <span class="nx">log</span> <span class="nx">to</span> <span class="nx">see</span> <span class="nx">queries</span> <span class="kd">with</span> <span class="nx">especially</span> <span class="kr">long</span> <span class="nx">duration</span>
</span><span class='line'><span class="err">#</span><span class="nx">slow_query_log_file</span>    <span class="o">=</span> <span class="err">/var/log/mysql/mariadb-slow.log</span>
</span><span class='line'><span class="err">#</span><span class="nx">long_query_time</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="err">#</span><span class="nx">log_slow_rate_limit</span>    <span class="o">=</span> <span class="mi">1000</span>
</span><span class='line'><span class="err">#</span><span class="nx">log_slow_verbosity</span>     <span class="o">=</span> <span class="nx">query_plan</span>
</span><span class='line'><span class="err">#</span><span class="nx">log</span><span class="o">-</span><span class="nx">queries</span><span class="o">-</span><span class="nx">not</span><span class="o">-</span><span class="nx">using</span><span class="o">-</span><span class="nx">indexes</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">following</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">used</span> <span class="nx">as</span> <span class="nx">easy</span> <span class="nx">to</span> <span class="nx">replay</span> <span class="nx">backup</span> <span class="nx">logs</span> <span class="nx">or</span> <span class="k">for</span> <span class="nx">replication</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">note</span><span class="o">:</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">are</span> <span class="nx">setting</span> <span class="nx">up</span> <span class="nx">a</span> <span class="nx">replication</span> <span class="nx">slave</span><span class="p">,</span> <span class="nx">see</span> <span class="nx">README</span><span class="p">.</span><span class="nx">Debian</span> <span class="nx">about</span>
</span><span class='line'><span class="err">#</span>       <span class="nx">other</span> <span class="nx">settings</span> <span class="nx">you</span> <span class="nx">may</span> <span class="nx">need</span> <span class="nx">to</span> <span class="nx">change</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span><span class="nx">server</span><span class="o">-</span><span class="nx">id</span>              <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="err">#</span><span class="nx">log_bin</span>                        <span class="o">=</span> <span class="err">/var/log/mysql/mysql-bin.log</span>
</span><span class='line'><span class="nx">expire_logs_days</span>        <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="nx">max_binlog_size</span>   <span class="o">=</span> <span class="mi">100</span><span class="nx">M</span>
</span><span class='line'><span class="err">#</span><span class="nx">binlog_do_db</span>           <span class="o">=</span> <span class="nx">include_database_name</span>
</span><span class='line'><span class="err">#</span><span class="nx">binlog_ignore_db</span>       <span class="o">=</span> <span class="nx">include_database_name</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>general_log_file</code>: 一般クエリーログの保存ファイルを指定</li>
<li><code>general_log</code>: 1を指定で一般クエリーログの取得が有効になる</li>
<li><code>log_error</code>: エラーログの保存ファイルを指定</li>
<li><code>slow_query_log_file</code>: スロークエリーログの保存ファイルを指定</li>
<li><code>long_query_time</code>: スロークエリーと判断するための時間(秒)</li>
<li><code>log_slow_rate_limit</code>: スロークエリーを判断するタイミングを設定 (1なら毎クエリごとに調査)</li>
<li><code>log_slow_verbosity</code>: どの程度の詳細レベルでログを出すか決める</li>
<li><code>log-queries-not-using-indexes</code>: Indexを使わない, 使っても全件スキャンになっているクエリはスロークエリとして出力する</li>
<li><code>server-id</code>: 一意なサーバを識別するために設定(レプリケーション組む時に使える)</li>
<li><code>log_bin</code>: バイナリログファイルを保存するファイルの指定</li>
<li><code>expire_logs_day</code>: バイナリログの保存期限日</li>
<li><code>max_binlog_size</code>: バイナリログろログローテーションし始める基準の値</li>
<li><code>binlog_do_db</code>: バイナリログに書き込むデータベースを指定</li>
<li><code>binlog_ignore_db</code>: バイナリログに書き込まないデータベースを指定</li>
</ul>


<p>以下はInnoDB特有の設定のようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">InnoDB</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">InnoDB</span> <span class="nx">is</span> <span class="nx">enabled</span> <span class="nx">by</span> <span class="k">default</span> <span class="kd">with</span> <span class="nx">a</span> <span class="mi">10</span><span class="nx">MB</span> <span class="nx">datafile</span> <span class="k">in</span> <span class="err">/var/lib/mysql/.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Read</span> <span class="nx">the</span> <span class="nx">manual</span> <span class="k">for</span> <span class="nx">more</span> <span class="nx">InnoDB</span> <span class="nx">related</span> <span class="nx">options</span><span class="p">.</span> <span class="nx">There</span> <span class="nx">are</span> <span class="nx">many</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">Security</span> <span class="nx">Features</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Read</span> <span class="nx">the</span> <span class="nx">manual</span><span class="p">,</span> <span class="nx">too</span><span class="p">,</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">want</span> <span class="nx">chroot</span><span class="o">!</span>
</span><span class='line'><span class="err">#</span> <span class="nx">chroot</span> <span class="o">=</span> <span class="err">/var/lib/mysql/</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">For</span> <span class="nx">generating</span> <span class="nx">SSL</span> <span class="nx">certificates</span> <span class="nx">I</span> <span class="nx">recommend</span> <span class="nx">the</span> <span class="nx">OpenSSL</span> <span class="nx">GUI</span> <span class="s2">&quot;tinyca&quot;</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">ssl</span><span class="o">-</span><span class="nx">ca</span><span class="o">=</span><span class="err">/etc/mysql/cacert.pem</span>
</span><span class='line'><span class="err">#</span> <span class="nx">ssl</span><span class="o">-</span><span class="nx">cert</span><span class="o">=</span><span class="err">/etc/mysql/server-cert.pem</span>
</span><span class='line'><span class="err">#</span> <span class="nx">ssl</span><span class="o">-</span><span class="nx">key</span><span class="o">=</span><span class="err">/etc/mysql/server-key.pem</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>ssl-ca</code>: SSL接続のためのCA証明書の指定</li>
<li><code>ssl-cert</code>: SSL接続のためのサーバ証明書の指定</li>
<li><code>ssl-key</code>: SSL接続のための秘密鍵の指定</li>
</ul>


<p>エンコードの設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">Character</span> <span class="nx">sets</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">MySQL</span><span class="o">/</span><span class="nx">MariaDB</span> <span class="k">default</span> <span class="nx">is</span> <span class="nx">Latin1</span><span class="p">,</span> <span class="nx">but</span> <span class="k">in</span> <span class="nx">Debian</span> <span class="nx">we</span> <span class="nx">rather</span> <span class="k">default</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">full</span>
</span><span class='line'><span class="err">#</span> <span class="nx">utf8</span> <span class="mi">4</span><span class="o">-</span><span class="kr">byte</span> <span class="nx">character</span> <span class="nx">set</span><span class="p">.</span> <span class="nx">See</span> <span class="nx">also</span> <span class="nx">client</span><span class="p">.</span><span class="nx">cnf</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="nx">character</span><span class="o">-</span><span class="nx">set</span><span class="o">-</span><span class="nx">server</span>  <span class="o">=</span> <span class="nx">utf8mb4</span>
</span><span class='line'><span class="nx">collation</span><span class="o">-</span><span class="nx">server</span>      <span class="o">=</span> <span class="nx">utf8mb4_general_ci</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>character-set-server</code>: MySQLサーバの文字コード設定</li>
<li><code>collation-server</code>: MySQLサーバのソート順設定</li>
</ul>


<p>その他にオプションを設定する場合は下記に続けて書くように用意されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="o">*</span> <span class="nx">Unix</span> <span class="nx">socket</span> <span class="nx">authentication</span> <span class="nx">plugin</span> <span class="nx">is</span> <span class="nx">built</span><span class="o">-</span><span class="k">in</span> <span class="nx">since</span> <span class="mf">10.0</span><span class="p">.</span><span class="mi">22</span><span class="o">-</span><span class="mi">6</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Needed</span> <span class="nx">so</span> <span class="nx">the</span> <span class="nx">root</span> <span class="nx">database</span> <span class="nx">user</span> <span class="nx">can</span> <span class="nx">authenticate</span> <span class="nx">without</span> <span class="nx">a</span> <span class="nx">password</span> <span class="nx">but</span>
</span><span class='line'><span class="err">#</span> <span class="nx">only</span> <span class="nx">when</span> <span class="nx">running</span> <span class="nx">as</span> <span class="nx">the</span> <span class="nx">unix</span> <span class="nx">root</span> <span class="nx">user</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Also</span> <span class="nx">available</span> <span class="k">for</span> <span class="nx">other</span> <span class="nx">users</span> <span class="k">if</span> <span class="nx">required</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">See</span> <span class="nx">https</span><span class="o">:</span><span class="c1">//mariadb.com/kb/en/unix_socket-authentication-plugin/</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="k">this</span> <span class="nx">is</span> <span class="nx">only</span> <span class="k">for</span> <span class="nx">embedded</span> <span class="nx">server</span>
</span><span class='line'><span class="p">[</span><span class="nx">embedded</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">group</span> <span class="nx">is</span> <span class="nx">only</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">MariaDB</span> <span class="nx">servers</span><span class="p">,</span> <span class="nx">not</span> <span class="nx">by</span> <span class="nx">MySQL</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">use</span> <span class="nx">the</span> <span class="nx">same</span> <span class="p">.</span><span class="nx">cnf</span> <span class="nx">file</span> <span class="k">for</span> <span class="nx">MySQL</span> <span class="nx">and</span> <span class="nx">MariaDB</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">put</span> <span class="nx">MariaDB</span><span class="o">-</span><span class="nx">only</span> <span class="nx">options</span> <span class="nx">here</span>
</span><span class='line'><span class="p">[</span><span class="nx">mariadb</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">group</span> <span class="nx">is</span> <span class="nx">only</span> <span class="nx">read</span> <span class="nx">by</span> <span class="nx">MariaDB</span><span class="o">-</span><span class="mf">10.0</span> <span class="nx">servers</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">use</span> <span class="nx">the</span> <span class="nx">same</span> <span class="p">.</span><span class="nx">cnf</span> <span class="nx">file</span> <span class="k">for</span> <span class="nx">MariaDB</span> <span class="nx">of</span> <span class="nx">different</span> <span class="nx">versions</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="nx">use</span> <span class="k">this</span> <span class="nx">group</span> <span class="k">for</span> <span class="nx">options</span> <span class="nx">that</span> <span class="nx">older</span> <span class="nx">servers</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">understand</span>
</span><span class='line'><span class="p">[</span><span class="nx">mariadb</span><span class="o">-</span><span class="mf">10.0</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>今回はインストールと初期設定、デフォルトで生成される設定ファイルの意味について見ていきました。<br/>
今後は理解を深めるためにMariaDBならではのアーキテクチャを組んで試していければと思います。<br/>
と言ったところで本日はここまで。</p>

<h3>参考</h3>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.6/ja/mysqldump.html">4.5.4 mysqldump — データベースバックアッププログラム</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.6/ja/option-files.html">4.2.6 オプションファイルの使用</a></li>
<li><a href="https://mariadb.com/kb/en/mariadb/mysqld_safe/">mysqld_safe Options</a></li>
<li><a href="https://mariadb.com/kb/en/mariadb/server-system-variables/#log_queries_not_using_indexes">MariaDB System Variable</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerコンテナ内のUbuntuでRedisを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/02/25/docker-for-mac-4/"/>
    <updated>2017-02-25T22:36:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/02/25/docker-for-mac-4</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>今回はDockerコンテナ内のUbuntuに<a href="https://redis.io/">Redis</a>をインストールしてみたいと思います。<br/>
基本的な操作だけでなく、デフォルトの設定とそれらの意味についても見ていきます。</p>

<h3>UbuntuへのRedisのインストール</h3>

<p>まずはインストールをしないと始まりません。<br/>
その方法について見ていきます。<br/>
今回扱う環境は以下の通りです。</p>

<ul>
<li>Ubuntu: 14.04.5 LTS</li>
<li>Redis: 2.8.4</li>
</ul>


<p>バージョン的に最新ではない部分もあるのですが、Dockerコンテナ内のサーバを構築する上で利用したバージョンで進めます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>インストールは実に簡単です。<br/>
<code>apt-get</code>を利用するのみです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">apt</span><span class="o">-</span><span class="nx">get</span> <span class="nx">install</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">server</span>
</span><span class='line'><span class="nx">Reading</span> <span class="kr">package</span> <span class="nx">lists</span><span class="p">...</span> <span class="nx">Done</span>
</span><span class='line'><span class="nx">Building</span> <span class="nx">dependency</span> <span class="nx">tree</span>
</span><span class='line'><span class="nx">Reading</span> <span class="nx">state</span> <span class="nx">information</span><span class="p">...</span> <span class="nx">Done</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="nx">Setting</span> <span class="nx">up</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">server</span> <span class="p">(</span><span class="mi">2</span><span class="o">:</span><span class="mf">2.8</span><span class="p">.</span><span class="mi">4</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="p">...</span>
</span><span class='line'><span class="nx">Starting</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">server</span><span class="o">:</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">server</span><span class="p">.</span>
</span><span class='line'><span class="nx">Processing</span> <span class="nx">triggers</span> <span class="k">for</span> <span class="nx">libc</span><span class="o">-</span><span class="nx">bin</span> <span class="p">(</span><span class="mf">2.19</span><span class="o">-</span><span class="mi">0</span><span class="nx">ubuntu6</span><span class="p">.</span><span class="mi">9</span><span class="p">)</span> <span class="p">...</span>
</span><span class='line'><span class="nx">Processing</span> <span class="nx">triggers</span> <span class="k">for</span> <span class="nx">ureadahead</span> <span class="p">(</span><span class="mf">0.100</span><span class="p">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">16</span><span class="p">)</span> <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のログで<code>Starting redis-server: redis-server.</code>として出力されている通り、インストールが完了すると、Redisを起動してくれます。<br/>
念のため確認してみますが、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">ps</span> <span class="nx">aux</span> <span class="o">|</span> <span class="nx">grep</span> <span class="nx">redis</span>
</span><span class='line'><span class="nx">redis</span>     <span class="mi">8833</span>  <span class="mf">0.0</span>  <span class="mf">0.1</span>  <span class="mi">37000</span>  <span class="mi">3348</span> <span class="o">?</span>        <span class="nx">Ssl</span>  <span class="mi">13</span><span class="o">:</span><span class="mi">25</span>   <span class="mi">0</span><span class="o">:</span><span class="mi">00</span> <span class="o">/</span><span class="nx">usr</span><span class="o">/</span><span class="nx">bin</span><span class="o">/</span><span class="nx">redis</span><span class="o">-</span><span class="nx">server</span> <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span>
</span><span class='line'><span class="nx">root</span>      <span class="mi">8843</span>  <span class="mf">0.0</span>  <span class="mf">0.0</span>   <span class="mi">8868</span>   <span class="mi">784</span> <span class="o">?</span>        <span class="nx">S</span><span class="o">+</span>   <span class="mi">13</span><span class="o">:</span><span class="mi">26</span>   <span class="mi">0</span><span class="o">:</span><span class="mi">00</span> <span class="nx">grep</span> <span class="o">--</span><span class="nx">color</span><span class="o">=</span><span class="nx">auto</span> <span class="nx">redis</span>
</span></code></pre></td></tr></table></div></figure>


<p>ご覧の通り起動しています。</p>

<h3>Redisの起動</h3>

<p>インストール後、自動で起動してくれているものの、手動での起動と停止状態は知っておく必要があります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Redisの起動(続けて操作するためにBG起動)</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">server</span> <span class="o">&amp;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Redisの停止</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">cli</span> <span class="nx">shutdown</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Redisの基本コマンド</h3>

<p>Redisの基本コマンドは以下の通りです。</p>

<ul>
<li><code>keys *</code>: 現時点で保存されているkey全てを表示</li>
<li><code>set key value</code>: keyとvalueの格納</li>
<li><code>get key</code>: 指定したkeyのvalueを取得</li>
<li><code>del key</code>: 指定したkeyのvalueを削除</li>
<li><code>flushdb</code>: 現時点で保存されているkey全てを削除</li>
</ul>


<p>実際に使ってみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">cli</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">keys</span> <span class="o">*</span>
</span><span class='line'><span class="p">(</span><span class="nx">empty</span> <span class="nx">list</span> <span class="nx">or</span> <span class="nx">set</span><span class="p">)</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">set</span> <span class="nx">user</span> <span class="nx">takahiro</span>
</span><span class='line'><span class="nx">OK</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">set</span> <span class="nx">device</span> <span class="nx">iphone</span>
</span><span class='line'><span class="nx">OK</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">keys</span> <span class="o">*</span>
</span><span class='line'><span class="mi">1</span><span class="p">)</span> <span class="s2">&quot;user&quot;</span>
</span><span class='line'><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;device&quot;</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">get</span> <span class="nx">user</span>
</span><span class='line'><span class="s2">&quot;takahiro&quot;</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">get</span> <span class="nx">device</span>
</span><span class='line'><span class="s2">&quot;iphone&quot;</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">del</span> <span class="nx">device</span>
</span><span class='line'><span class="p">(</span><span class="nx">integer</span><span class="p">)</span> <span class="mi">1</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">keys</span> <span class="o">*</span>
</span><span class='line'><span class="mi">1</span><span class="p">)</span> <span class="s2">&quot;user&quot;</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">flushdb</span>
</span><span class='line'><span class="nx">OK</span>
</span><span class='line'><span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="o">:</span><span class="mi">6379</span><span class="o">&gt;</span> <span class="nx">keys</span> <span class="o">*</span>
</span><span class='line'><span class="p">(</span><span class="nx">empty</span> <span class="nx">list</span> <span class="nx">or</span> <span class="nx">set</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Redisのデフォルト設定</h3>

<p>続いて、Redisの設定を見ていきます。<br/>
インストール後、<code>redis.conf</code>ファイルが<code>/etc/redis/</code>配下に作成されます。<br/>
デフォルトでこのファイルの中身には多くのことが書かれています。<br/>
1つずつ見ていきましょう。</p>

<h4>単位指定について</h4>

<p>まずはメモリ単位関連の説明です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">configuration</span> <span class="nx">file</span> <span class="nx">example</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">Note</span> <span class="nx">on</span> <span class="nx">units</span><span class="o">:</span> <span class="nx">when</span> <span class="nx">memory</span> <span class="nx">size</span> <span class="nx">is</span> <span class="nx">needed</span><span class="p">,</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">specify</span>
</span><span class='line'><span class="err">#</span> <span class="nx">it</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">usual</span> <span class="nx">form</span> <span class="nx">of</span> <span class="mi">1</span><span class="nx">k</span> <span class="mi">5</span><span class="nx">GB</span> <span class="mi">4</span><span class="nx">M</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">forth</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="nx">k</span> <span class="o">=&gt;</span> <span class="mi">1000</span> <span class="nx">bytes</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="nx">kb</span> <span class="o">=&gt;</span> <span class="mi">1024</span> <span class="nx">bytes</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="nx">m</span> <span class="o">=&gt;</span> <span class="mi">1000000</span> <span class="nx">bytes</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="nx">mb</span> <span class="o">=&gt;</span> <span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span> <span class="nx">bytes</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="nx">g</span> <span class="o">=&gt;</span> <span class="mi">1000000000</span> <span class="nx">bytes</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="nx">gb</span> <span class="o">=&gt;</span> <span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span><span class="o">*</span><span class="mi">1024</span> <span class="nx">bytes</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">units</span> <span class="nx">are</span> <span class="k">case</span> <span class="nx">insensitive</span> <span class="nx">so</span> <span class="mi">1</span><span class="nx">GB</span> <span class="mi">1</span><span class="nx">Gb</span> <span class="mi">1</span><span class="nx">gB</span> <span class="nx">are</span> <span class="nx">all</span> <span class="nx">the</span> <span class="nx">same</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>もう上記のままですね。<br/>
<code>1k</code>か<code>1kb</code>なのか微妙に書き方を気をつけないと想定外の容量指定になるので気をつけましょう。<br/>
ただし、<code>1GB</code> / <code>1Gb</code> / <code>1gB</code>は微妙に書き方が異なりますが指定容量は同じです。</p>

<h4>includeによる設定ファイルの分割について</h4>

<p>Apacheなどでもよくある通り<code>include</code>を利用することもできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">##################################</span> <span class="nx">INCLUDES</span> <span class="err">###################################</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">Include</span> <span class="nx">one</span> <span class="nx">or</span> <span class="nx">more</span> <span class="nx">other</span> <span class="nx">config</span> <span class="nx">files</span> <span class="nx">here</span><span class="p">.</span>  <span class="nx">This</span> <span class="nx">is</span> <span class="nx">useful</span> <span class="k">if</span> <span class="nx">you</span>
</span><span class='line'><span class="err">#</span> <span class="nx">have</span> <span class="nx">a</span> <span class="nx">standard</span> <span class="nx">template</span> <span class="nx">that</span> <span class="nx">goes</span> <span class="nx">to</span> <span class="nx">all</span> <span class="nx">Redis</span> <span class="nx">server</span> <span class="nx">but</span> <span class="nx">also</span> <span class="nx">need</span>
</span><span class='line'><span class="err">#</span> <span class="nx">to</span> <span class="nx">customize</span> <span class="nx">a</span> <span class="nx">few</span> <span class="nx">per</span><span class="o">-</span><span class="nx">server</span> <span class="nx">settings</span><span class="p">.</span>  <span class="nx">Include</span> <span class="nx">files</span> <span class="nx">can</span> <span class="nx">include</span>
</span><span class='line'><span class="err">#</span> <span class="nx">other</span> <span class="nx">files</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">use</span> <span class="k">this</span> <span class="nx">wisely</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Notice</span> <span class="nx">option</span> <span class="s2">&quot;include&quot;</span> <span class="nx">won</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">be</span> <span class="nx">rewritten</span> <span class="nx">by</span> <span class="nx">command</span> <span class="s2">&quot;CONFIG REWRITE&quot;</span>
</span><span class='line'><span class="err">#</span> <span class="nx">from</span> <span class="nx">admin</span> <span class="nx">or</span> <span class="nx">Redis</span> <span class="nx">Sentinel</span><span class="p">.</span> <span class="nx">Since</span> <span class="nx">Redis</span> <span class="nx">always</span> <span class="nx">uses</span> <span class="nx">the</span> <span class="nx">last</span> <span class="nx">processed</span>
</span><span class='line'><span class="err">#</span> <span class="nx">line</span> <span class="nx">as</span> <span class="nx">value</span> <span class="nx">of</span> <span class="nx">a</span> <span class="nx">configuration</span> <span class="nx">directive</span><span class="p">,</span> <span class="nx">you</span><span class="err">‘</span><span class="nx">d</span> <span class="nx">better</span> <span class="nx">put</span> <span class="nx">includes</span>
</span><span class='line'><span class="err">#</span> <span class="nx">at</span> <span class="nx">the</span> <span class="nx">beginning</span> <span class="nx">of</span> <span class="k">this</span> <span class="nx">file</span> <span class="nx">to</span> <span class="nx">avoid</span> <span class="nx">overwriting</span> <span class="nx">config</span> <span class="nx">change</span> <span class="nx">at</span> <span class="nx">runtime</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">instead</span> <span class="nx">you</span> <span class="nx">are</span> <span class="nx">interested</span> <span class="k">in</span> <span class="nx">using</span> <span class="nx">includes</span> <span class="nx">to</span> <span class="nx">override</span> <span class="nx">configuration</span>
</span><span class='line'><span class="err">#</span> <span class="nx">options</span><span class="p">,</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">better</span> <span class="nx">to</span> <span class="nx">use</span> <span class="nx">include</span> <span class="nx">as</span> <span class="nx">the</span> <span class="nx">last</span> <span class="nx">line</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">include</span> <span class="o">/</span><span class="nx">path</span><span class="o">/</span><span class="nx">to</span><span class="o">/</span><span class="nx">local</span><span class="p">.</span><span class="nx">conf</span>
</span><span class='line'><span class="err">#</span> <span class="nx">include</span> <span class="o">/</span><span class="nx">path</span><span class="o">/</span><span class="nx">to</span><span class="o">/</span><span class="nx">other</span><span class="p">.</span><span class="nx">conf</span>
</span></code></pre></td></tr></table></div></figure>


<p>サーバごとに設定を分けたいとか、第三者が見やすいように設定単位でファイルを分けたいとか様々な用途で便利に利用できるはずです。<br/>
<code>include</code>したファイルに定義した内容で<code>redis.conf</code>の定義内容を書き換えるのであれば、<code>redis.conf</code>の一番最後に<code>include</code>を書いた方が良いでしょう。<br/>
(逆に、書き換えたくないのであれば、<code>redis.conf</code>の初めに書きましょう。)</p>

<h4>一般設定について</h4>

<p>さて、最も基本となる設定です。<br/>
少々、長いので細かめに分割してみていきましょう。</p>

<h5>デーモン化の有無</h5>

<p>デーモン化の有無は下記で設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">Redis</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">run</span> <span class="nx">as</span> <span class="nx">a</span> <span class="nx">daemon</span><span class="p">.</span> <span class="nx">Use</span> <span class="s1">&#39;yes&#39;</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">need</span> <span class="nx">it</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">write</span> <span class="nx">a</span> <span class="nx">pid</span> <span class="nx">file</span> <span class="k">in</span> <span class="err">/var/run/redis.pid when daemonized.</span>
</span><span class='line'><span class="nx">daemonize</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<p>デフォルト設定ではデーモン起動はしないようになっています。<br/>
* yes: デーモン起動する<br/>
* no: デーモン起動しない</p>

<p>PIDファイルはデフォルトで<code>/var/run/redis.pid</code>に出力します。</p>

<h5>PIDファイルの指定</h5>

<p>デフォルトとは異なる場所にPIDファイルを出力したい場合に指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">When</span> <span class="nx">running</span> <span class="nx">daemonized</span><span class="p">,</span> <span class="nx">Redis</span> <span class="nx">writes</span> <span class="nx">a</span> <span class="nx">pid</span> <span class="nx">file</span> <span class="k">in</span> <span class="err">/var/run/redis.pid by</span>
</span><span class='line'><span class="err">#</span> <span class="k">default</span><span class="p">.</span> <span class="nx">You</span> <span class="nx">can</span> <span class="nx">specify</span> <span class="nx">a</span> <span class="nx">custom</span> <span class="nx">pid</span> <span class="nx">file</span> <span class="nx">location</span> <span class="nx">here</span><span class="p">.</span>
</span><span class='line'><span class="nx">pidfile</span> <span class="o">/</span><span class="kd">var</span><span class="err">/run/redis/redis-server.pid</span>
</span></code></pre></td></tr></table></div></figure>


<h5>ボート番号の指定</h5>

<p>Redisを起動する際のポート番号を指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Accept</span> <span class="nx">connections</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">port</span><span class="p">,</span> <span class="k">default</span> <span class="nx">is</span> <span class="mi">6379</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">port</span> <span class="mi">0</span> <span class="nx">is</span> <span class="nx">specified</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">not</span> <span class="nx">listen</span> <span class="nx">on</span> <span class="nx">a</span> <span class="nx">TCP</span> <span class="nx">socket</span><span class="p">.</span>
</span><span class='line'><span class="nx">port</span> <span class="mi">6379</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>デフォルトポート番号: 6379</li>
<li>0指定: TCPソケット通信を受け付けない</li>
</ul>


<h5>IPアドレスの指定</h5>

<p>Redisを起動する際の接続するIPアドレスを指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">Redis</span> <span class="nx">listens</span> <span class="k">for</span> <span class="nx">connections</span> <span class="nx">from</span> <span class="nx">all</span> <span class="nx">the</span> <span class="nx">network</span> <span class="nx">interfaces</span>
</span><span class='line'><span class="err">#</span> <span class="nx">available</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">server</span><span class="p">.</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">listen</span> <span class="nx">to</span> <span class="nx">just</span> <span class="nx">one</span> <span class="nx">or</span> <span class="nx">multiple</span>
</span><span class='line'><span class="err">#</span> <span class="nx">interfaces</span> <span class="nx">using</span> <span class="nx">the</span> <span class="s2">&quot;bind&quot;</span> <span class="nx">configuration</span> <span class="nx">directive</span><span class="p">,</span> <span class="nx">followed</span> <span class="nx">by</span> <span class="nx">one</span> <span class="nx">or</span>
</span><span class='line'><span class="err">#</span> <span class="nx">more</span> <span class="nx">IP</span> <span class="nx">addresses</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Examples</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">bind</span> <span class="mf">192.168</span><span class="p">.</span><span class="mf">1.100</span> <span class="mf">10.0</span><span class="p">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="nx">bind</span> <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span>
</span></code></pre></td></tr></table></div></figure>


<p>複数のIPアドレスを指定する場合は半角スペースを挟んで連続して書きましょう。</p>

<h5>Unixドメインソケット通信の設定</h5>

<p>TCP通信だけでなく、Unixドメインソケット通信を受け付ける場合に設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Specify</span> <span class="nx">the</span> <span class="nx">path</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">unix</span> <span class="nx">socket</span> <span class="nx">that</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">used</span> <span class="nx">to</span> <span class="nx">listen</span> <span class="k">for</span>
</span><span class='line'><span class="err">#</span> <span class="nx">incoming</span> <span class="nx">connections</span><span class="p">.</span> <span class="nx">There</span> <span class="nx">is</span> <span class="nx">no</span> <span class="k">default</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">not</span> <span class="nx">listen</span>
</span><span class='line'><span class="err">#</span> <span class="nx">on</span> <span class="nx">a</span> <span class="nx">unix</span> <span class="nx">socket</span> <span class="nx">when</span> <span class="nx">not</span> <span class="nx">specified</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">unixsocket</span> <span class="o">/</span><span class="kd">var</span><span class="err">/run/redis/redis.sock</span>
</span><span class='line'><span class="err">#</span> <span class="nx">unixsocketperm</span> <span class="mi">755</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>デフォルトではコメントアウトされている

<ul>
<li>同一サーバ内での受付はTCPより良いという話も&hellip;!?</li>
</ul>
</li>
<li><code>unixsocket</code>: <code>socket</code>ファイルのパス指定</li>
<li><code>unixsocketperm</code>: <code>socket</code>ファイルへのアクセス権</li>
</ul>


<h5>タイムアウトの設定</h5>

<p>クライアントからの接続タイムアウト設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Close</span> <span class="nx">the</span> <span class="nx">connection</span> <span class="nx">after</span> <span class="nx">a</span> <span class="nx">client</span> <span class="nx">is</span> <span class="nx">idle</span> <span class="k">for</span> <span class="nx">N</span> <span class="nx">seconds</span> <span class="p">(</span><span class="mi">0</span> <span class="nx">to</span> <span class="nx">disable</span><span class="p">)</span>
</span><span class='line'><span class="nx">timeout</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>0を設定すると、タイムアウトは無効になります。</p>

<h5>TCP KeepAlive設定</h5>

<p>TCP通信の生存確認に関する設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">TCP</span> <span class="nx">keepalive</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">non</span><span class="o">-</span><span class="nx">zero</span><span class="p">,</span> <span class="nx">use</span> <span class="nx">SO_KEEPALIVE</span> <span class="nx">to</span> <span class="nx">send</span> <span class="nx">TCP</span> <span class="nx">ACKs</span> <span class="nx">to</span> <span class="nx">clients</span> <span class="k">in</span> <span class="nx">absence</span>
</span><span class='line'><span class="err">#</span> <span class="nx">of</span> <span class="nx">communication</span><span class="p">.</span> <span class="nx">This</span> <span class="nx">is</span> <span class="nx">useful</span> <span class="k">for</span> <span class="nx">two</span> <span class="nx">reasons</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="p">)</span> <span class="nx">Detect</span> <span class="nx">dead</span> <span class="nx">peers</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="mi">2</span><span class="p">)</span> <span class="nx">Take</span> <span class="nx">the</span> <span class="nx">connection</span> <span class="nx">alive</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">point</span> <span class="nx">of</span> <span class="nx">view</span> <span class="nx">of</span> <span class="nx">network</span>
</span><span class='line'><span class="err">#</span>    <span class="nx">equipment</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">middle</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">On</span> <span class="nx">Linux</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">value</span> <span class="p">(</span><span class="k">in</span> <span class="nx">seconds</span><span class="p">)</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">period</span> <span class="nx">used</span> <span class="nx">to</span> <span class="nx">send</span> <span class="nx">ACKs</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="nx">to</span> <span class="nx">close</span> <span class="nx">the</span> <span class="nx">connection</span> <span class="nx">the</span> <span class="kr">double</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">time</span> <span class="nx">is</span> <span class="nx">needed</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">On</span> <span class="nx">other</span> <span class="nx">kernels</span> <span class="nx">the</span> <span class="nx">period</span> <span class="nx">depends</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">kernel</span> <span class="nx">configuration</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">A</span> <span class="nx">reasonable</span> <span class="nx">value</span> <span class="k">for</span> <span class="k">this</span> <span class="nx">option</span> <span class="nx">is</span> <span class="mi">60</span> <span class="nx">seconds</span><span class="p">.</span>
</span><span class='line'><span class="nx">tcp</span><span class="o">-</span><span class="nx">keepalive</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>有効にすることで、通信断(Dead Peer)状態を防いだり、コネクションの接続生存を確認することができます</li>
<li>適切な値として <code>60秒</code> が推奨されています</li>
</ul>


<h5>ログレベルの設定</h5>

<p>ログの出力量を調整するために設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Specify</span> <span class="nx">the</span> <span class="nx">server</span> <span class="nx">verbosity</span> <span class="nx">level</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">one</span> <span class="nx">of</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span> <span class="nx">debug</span> <span class="p">(</span><span class="nx">a</span> <span class="nx">lot</span> <span class="nx">of</span> <span class="nx">information</span><span class="p">,</span> <span class="nx">useful</span> <span class="k">for</span> <span class="nx">development</span><span class="o">/</span><span class="nx">testing</span><span class="p">)</span>
</span><span class='line'><span class="err">#</span> <span class="nx">verbose</span> <span class="p">(</span><span class="nx">many</span> <span class="nx">rarely</span> <span class="nx">useful</span> <span class="nx">info</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">not</span> <span class="nx">a</span> <span class="nx">mess</span> <span class="nx">like</span> <span class="nx">the</span> <span class="nx">debug</span> <span class="nx">level</span><span class="p">)</span>
</span><span class='line'><span class="err">#</span> <span class="nx">notice</span> <span class="p">(</span><span class="nx">moderately</span> <span class="nx">verbose</span><span class="p">,</span> <span class="nx">what</span> <span class="nx">you</span> <span class="nx">want</span> <span class="k">in</span> <span class="nx">production</span> <span class="nx">probably</span><span class="p">)</span>
</span><span class='line'><span class="err">#</span> <span class="nx">warning</span> <span class="p">(</span><span class="nx">only</span> <span class="nx">very</span> <span class="nx">important</span> <span class="o">/</span> <span class="nx">critical</span> <span class="nx">messages</span> <span class="nx">are</span> <span class="nx">logged</span><span class="p">)</span>
</span><span class='line'><span class="nx">loglevel</span> <span class="nx">notice</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>debug</code>: 開発やテスト用に利用。大量のログを出力します</li>
<li><code>verbose</code>: <code>debug</code>よりは少ないものの多くのログを出力します</li>
<li><code>notice</code>: 商用に適した設定です</li>
<li><code>warning</code>: 重要またはクリティカルなメッセージのみログに出します</li>
</ul>


<h5>ログファイルの出力先の指定</h5>

<p>ログファイルの出力先のパスを指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Specify</span> <span class="nx">the</span> <span class="nx">log</span> <span class="nx">file</span> <span class="nx">name</span><span class="p">.</span> <span class="nx">Also</span> <span class="nx">the</span> <span class="nx">empty</span> <span class="nx">string</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">used</span> <span class="nx">to</span> <span class="nx">force</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">to</span> <span class="nx">log</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">standard</span> <span class="nx">output</span><span class="p">.</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">use</span> <span class="nx">standard</span>
</span><span class='line'><span class="err">#</span> <span class="nx">output</span> <span class="k">for</span> <span class="nx">logging</span> <span class="nx">but</span> <span class="nx">daemonize</span><span class="p">,</span> <span class="nx">logs</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">sent</span> <span class="nx">to</span> <span class="o">/</span><span class="nx">dev</span><span class="o">/</span><span class="kc">null</span>
</span><span class='line'><span class="nx">logfile</span> <span class="o">/</span><span class="kd">var</span><span class="err">/log/redis/redis-server.log</span>
</span></code></pre></td></tr></table></div></figure>


<h5>システムログの設定</h5>

<p>システムログに関する設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">To</span> <span class="nx">enable</span> <span class="nx">logging</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">system</span> <span class="nx">logger</span><span class="p">,</span> <span class="nx">just</span> <span class="nx">set</span> <span class="s1">&#39;syslog-enabled&#39;</span> <span class="nx">to</span> <span class="nx">yes</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="nx">and</span> <span class="nx">optionally</span> <span class="nx">update</span> <span class="nx">the</span> <span class="nx">other</span> <span class="nx">syslog</span> <span class="nx">parameters</span> <span class="nx">to</span> <span class="nx">suit</span> <span class="nx">your</span> <span class="nx">needs</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">syslog</span><span class="o">-</span><span class="nx">enabled</span> <span class="nx">no</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">Specify</span> <span class="nx">the</span> <span class="nx">syslog</span> <span class="nx">identity</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">syslog</span><span class="o">-</span><span class="nx">ident</span> <span class="nx">redis</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">Specify</span> <span class="nx">the</span> <span class="nx">syslog</span> <span class="nx">facility</span><span class="p">.</span> <span class="nx">Must</span> <span class="nx">be</span> <span class="nx">USER</span> <span class="nx">or</span> <span class="nx">between</span> <span class="nx">LOCAL0</span><span class="o">-</span><span class="nx">LOCAL7</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">syslog</span><span class="o">-</span><span class="nx">facility</span> <span class="nx">local0</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>syslog-enabled</code>: システムログのロギングの有無を設定します</li>
<li><code>syslog-ident</code>: システムログの識別子の設定をします</li>
<li><code>syslog-facility</code>: システムログの分類を設定します

<ul>
<li><code>user</code>: ユーザプロセスのメッセージを記録するために設定します</li>
<li><code>local0 〜 7</code>: セキュリティやネットワークなど細かく設定できます</li>
</ul>
</li>
</ul>


<p><code>local0 〜 7</code>については<a href="https://www.furukawa.co.jp/fitelnet/f/man/100/command-config/global_config/syslog_facility.htm#facility">syslog facility</a>が参考になりそうです。</p>

<h5>データベースの設定</h5>

<p>使用するデータベース番号を指定します。<br/>
デフォルトで<code>16</code>が指定されていることで利用可能なデータベース番号は<code>0 〜 15</code>となっています。<br/>
特に何もしなければ<code>DB 0</code>を利用します。<br/>
<code>SELECT</code>文を利用することでデータベースを指定して使うこともできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Set</span> <span class="nx">the</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">databases</span><span class="p">.</span> <span class="nx">The</span> <span class="k">default</span> <span class="nx">database</span> <span class="nx">is</span> <span class="nx">DB</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">select</span>
</span><span class='line'><span class="err">#</span> <span class="nx">a</span> <span class="nx">different</span> <span class="nx">one</span> <span class="nx">on</span> <span class="nx">a</span> <span class="nx">per</span><span class="o">-</span><span class="nx">connection</span> <span class="nx">basis</span> <span class="nx">using</span> <span class="nx">SELECT</span> <span class="o">&lt;</span><span class="nx">dbid</span><span class="o">&gt;</span> <span class="nx">where</span>
</span><span class='line'><span class="err">#</span> <span class="nx">dbid</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">number</span> <span class="nx">between</span> <span class="mi">0</span> <span class="nx">and</span> <span class="s1">&#39;databases&#39;</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="nx">databases</span> <span class="mi">16</span>
</span></code></pre></td></tr></table></div></figure>


<h4>スナップショット(バックアップ)設定</h4>

<p>こちらもかなり重要な設定となります。<br/>
利用用途にもよりますが、サービス上、消えてしまってはまずいデータを扱うのであれば堅牢な仕組みになるように設定を考える必要があります。</p>

<h5>ディスク保存の頻度設定</h5>

<p><code>key</code>の変更数と保存までに時間を設定します。<br/>
これにより、ある程度自由に堅牢性を設定することが可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Save</span> <span class="nx">the</span> <span class="nx">DB</span> <span class="nx">on</span> <span class="nx">disk</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">save</span> <span class="o">&lt;</span><span class="nx">seconds</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="nx">changes</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">Will</span> <span class="nx">save</span> <span class="nx">the</span> <span class="nx">DB</span> <span class="k">if</span> <span class="nx">both</span> <span class="nx">the</span> <span class="nx">given</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">seconds</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">given</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">number</span> <span class="nx">of</span> <span class="nx">write</span> <span class="nx">operations</span> <span class="nx">against</span> <span class="nx">the</span> <span class="nx">DB</span> <span class="nx">occurred</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">In</span> <span class="nx">the</span> <span class="nx">example</span> <span class="nx">below</span> <span class="nx">the</span> <span class="nx">behaviour</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">to</span> <span class="nx">save</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">after</span> <span class="mi">900</span> <span class="nx">sec</span> <span class="p">(</span><span class="mi">15</span> <span class="nx">min</span><span class="p">)</span> <span class="k">if</span> <span class="nx">at</span> <span class="nx">least</span> <span class="mi">1</span> <span class="nx">key</span> <span class="nx">changed</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">after</span> <span class="mi">300</span> <span class="nx">sec</span> <span class="p">(</span><span class="mi">5</span> <span class="nx">min</span><span class="p">)</span> <span class="k">if</span> <span class="nx">at</span> <span class="nx">least</span> <span class="mi">10</span> <span class="nx">keys</span> <span class="nx">changed</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">after</span> <span class="mi">60</span> <span class="nx">sec</span> <span class="k">if</span> <span class="nx">at</span> <span class="nx">least</span> <span class="mi">10000</span> <span class="nx">keys</span> <span class="nx">changed</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">Note</span><span class="o">:</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">disable</span> <span class="nx">saving</span> <span class="nx">at</span> <span class="nx">all</span> <span class="nx">commenting</span> <span class="nx">all</span> <span class="nx">the</span> <span class="s2">&quot;save&quot;</span> <span class="nx">lines</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">It</span> <span class="nx">is</span> <span class="nx">also</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">remove</span> <span class="nx">all</span> <span class="nx">the</span> <span class="nx">previously</span> <span class="nx">configured</span> <span class="nx">save</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">points</span> <span class="nx">by</span> <span class="nx">adding</span> <span class="nx">a</span> <span class="nx">save</span> <span class="nx">directive</span> <span class="kd">with</span> <span class="nx">a</span> <span class="nx">single</span> <span class="nx">empty</span> <span class="nx">string</span> <span class="nx">argument</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">like</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">example</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>   <span class="nx">save</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">save</span> <span class="mi">900</span> <span class="mi">1</span>
</span><span class='line'><span class="nx">save</span> <span class="mi">300</span> <span class="mi">10</span>
</span><span class='line'><span class="nx">save</span> <span class="mi">60</span> <span class="mi">10000</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記デフォルト設定の意味は下記です。<br/>
* <code>save 900 1</code>: 1個の<code>key</code>が変更されたら、15分後にディスクにその状態を保存<br/>
* <code>sabe 300 10</code>: 10個の<code>key</code>が変更されたら、5分後にディスクにその状態を保存<br/>
* <code>save 60 10000</code>: 10000個の<code>key</code>が変更されたら、1分後にディスクにその状態を保存</p>

<p>もしディスク保存したくなければ(インメモリでの利用のみであれば)<code>save ""</code>を指定しましょう。</p>

<h5>エラー発生時の保存挙動の設定</h5>

<p>これはエラーが発生したときにディスク保存をどうするかを決める設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">stop</span> <span class="nx">accepting</span> <span class="nx">writes</span> <span class="k">if</span> <span class="nx">RDB</span> <span class="nx">snapshots</span> <span class="nx">are</span> <span class="nx">enabled</span>
</span><span class='line'><span class="err">#</span> <span class="p">(</span><span class="nx">at</span> <span class="nx">least</span> <span class="nx">one</span> <span class="nx">save</span> <span class="nx">point</span><span class="p">)</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">latest</span> <span class="nx">background</span> <span class="nx">save</span> <span class="nx">failed</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">will</span> <span class="nx">make</span> <span class="nx">the</span> <span class="nx">user</span> <span class="nx">aware</span> <span class="p">(</span><span class="k">in</span> <span class="nx">a</span> <span class="nx">hard</span> <span class="nx">way</span><span class="p">)</span> <span class="nx">that</span> <span class="nx">data</span> <span class="nx">is</span> <span class="nx">not</span> <span class="nx">persisting</span>
</span><span class='line'><span class="err">#</span> <span class="nx">on</span> <span class="nx">disk</span> <span class="nx">properly</span><span class="p">,</span> <span class="nx">otherwise</span> <span class="nx">chances</span> <span class="nx">are</span> <span class="nx">that</span> <span class="nx">no</span> <span class="nx">one</span> <span class="nx">will</span> <span class="nx">notice</span> <span class="nx">and</span> <span class="nx">some</span>
</span><span class='line'><span class="err">#</span> <span class="nx">disaster</span> <span class="nx">will</span> <span class="nx">happen</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">the</span> <span class="nx">background</span> <span class="nx">saving</span> <span class="nx">process</span> <span class="nx">will</span> <span class="nx">start</span> <span class="nx">working</span> <span class="nx">again</span> <span class="nx">Redis</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span> <span class="nx">automatically</span> <span class="nx">allow</span> <span class="nx">writes</span> <span class="nx">again</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">However</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">have</span> <span class="nx">setup</span> <span class="nx">your</span> <span class="nx">proper</span> <span class="nx">monitoring</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">Redis</span> <span class="nx">server</span>
</span><span class='line'><span class="err">#</span> <span class="nx">and</span> <span class="nx">persistence</span><span class="p">,</span> <span class="nx">you</span> <span class="nx">may</span> <span class="nx">want</span> <span class="nx">to</span> <span class="nx">disable</span> <span class="k">this</span> <span class="nx">feature</span> <span class="nx">so</span> <span class="nx">that</span> <span class="nx">Redis</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span> <span class="k">continue</span> <span class="nx">to</span> <span class="nx">work</span> <span class="nx">as</span> <span class="nx">usual</span> <span class="nx">even</span> <span class="k">if</span> <span class="nx">there</span> <span class="nx">are</span> <span class="nx">problems</span> <span class="kd">with</span> <span class="nx">disk</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="nx">permissions</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">forth</span><span class="p">.</span>
</span><span class='line'><span class="nx">stop</span><span class="o">-</span><span class="nx">writes</span><span class="o">-</span><span class="nx">on</span><span class="o">-</span><span class="nx">bgsave</span><span class="o">-</span><span class="nx">error</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>yes: 保存を止めます</li>
<li>no: 書き込みを続けます</li>
</ul>


<h5>Dump時の圧縮設定</h5>

<p>データをDumpする際に<code>LZF</code>圧縮をかけるか否かを設定できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Compress</span> <span class="nx">string</span> <span class="nx">objects</span> <span class="nx">using</span> <span class="nx">LZF</span> <span class="nx">when</span> <span class="nx">dump</span> <span class="p">.</span><span class="nx">rdb</span> <span class="nx">databases</span><span class="o">?</span>
</span><span class='line'><span class="err">#</span> <span class="nx">For</span> <span class="k">default</span> <span class="nx">that</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">set</span> <span class="nx">to</span> <span class="s1">&#39;yes&#39;</span> <span class="nx">as</span> <span class="nx">it</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">almost</span> <span class="nx">always</span> <span class="nx">a</span> <span class="nx">win</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">want</span> <span class="nx">to</span> <span class="nx">save</span> <span class="nx">some</span> <span class="nx">CPU</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">saving</span> <span class="nx">child</span> <span class="nx">set</span> <span class="nx">it</span> <span class="nx">to</span> <span class="s1">&#39;no&#39;</span> <span class="nx">but</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">dataset</span> <span class="nx">will</span> <span class="nx">likely</span> <span class="nx">be</span> <span class="nx">bigger</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">have</span> <span class="nx">compressible</span> <span class="nx">values</span> <span class="nx">or</span> <span class="nx">keys</span><span class="p">.</span>
</span><span class='line'><span class="nx">rdbcompression</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>yes: 圧縮します(CPU負荷が上がる一方で小容量)</li>
<li>no: 圧縮しません(CPU負荷が下がる一方で大容量)</li>
</ul>


<h5>Checksum設定</h5>

<p>これはデータの整合性を検証するための設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Since</span> <span class="nx">version</span> <span class="mi">5</span> <span class="nx">of</span> <span class="nx">RDB</span> <span class="nx">a</span> <span class="nx">CRC64</span> <span class="nx">checksum</span> <span class="nx">is</span> <span class="nx">placed</span> <span class="nx">at</span> <span class="nx">the</span> <span class="nx">end</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">file</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">makes</span> <span class="nx">the</span> <span class="nx">format</span> <span class="nx">more</span> <span class="nx">resistant</span> <span class="nx">to</span> <span class="nx">corruption</span> <span class="nx">but</span> <span class="nx">there</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">performance</span>
</span><span class='line'><span class="err">#</span> <span class="nx">hit</span> <span class="nx">to</span> <span class="nx">pay</span> <span class="p">(</span><span class="nx">around</span> <span class="mi">10</span><span class="o">%</span><span class="p">)</span> <span class="nx">when</span> <span class="nx">saving</span> <span class="nx">and</span> <span class="nx">loading</span> <span class="nx">RDB</span> <span class="nx">files</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">disable</span> <span class="nx">it</span>
</span><span class='line'><span class="err">#</span> <span class="k">for</span> <span class="nx">maximum</span> <span class="nx">performances</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">RDB</span> <span class="nx">files</span> <span class="nx">created</span> <span class="kd">with</span> <span class="nx">checksum</span> <span class="nx">disabled</span> <span class="nx">have</span> <span class="nx">a</span> <span class="nx">checksum</span> <span class="nx">of</span> <span class="nx">zero</span> <span class="nx">that</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span> <span class="nx">tell</span> <span class="nx">the</span> <span class="nx">loading</span> <span class="nx">code</span> <span class="nx">to</span> <span class="nx">skip</span> <span class="nx">the</span> <span class="nx">check</span><span class="p">.</span>
</span><span class='line'><span class="nx">rdbchecksum</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<p>データ保存時にRDBファイルの読み込みを行うため、10%の性能劣化が発生するが、堅牢なデータを担保したいのであれば設定して損はないでしょう。</p>

<h5>Dumpファイル名の設定</h5>

<p>Dumpしたファイルの名称を指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">filename</span> <span class="nx">where</span> <span class="nx">to</span> <span class="nx">dump</span> <span class="nx">the</span> <span class="nx">DB</span>
</span><span class='line'><span class="nx">dbfilename</span> <span class="nx">dump</span><span class="p">.</span><span class="nx">rdb</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Dumpファイルの保存場所の設定</h5>

<p>どこにDumpファイルを配置するかの設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">working</span> <span class="nx">directory</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">DB</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">written</span> <span class="nx">inside</span> <span class="k">this</span> <span class="nx">directory</span><span class="p">,</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">filename</span> <span class="nx">specified</span>
</span><span class='line'><span class="err">#</span> <span class="nx">above</span> <span class="nx">using</span> <span class="nx">the</span> <span class="s1">&#39;dbfilename&#39;</span> <span class="nx">configuration</span> <span class="nx">directive</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">Append</span> <span class="nx">Only</span> <span class="nx">File</span> <span class="nx">will</span> <span class="nx">also</span> <span class="nx">be</span> <span class="nx">created</span> <span class="nx">inside</span> <span class="k">this</span> <span class="nx">directory</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="nx">you</span> <span class="nx">must</span> <span class="nx">specify</span> <span class="nx">a</span> <span class="nx">directory</span> <span class="nx">here</span><span class="p">,</span> <span class="nx">not</span> <span class="nx">a</span> <span class="nx">file</span> <span class="nx">name</span><span class="p">.</span>
</span><span class='line'><span class="nx">dir</span> <span class="o">/</span><span class="kd">var</span><span class="err">/lib/redis</span>
</span></code></pre></td></tr></table></div></figure>


<h4>レプリケーション設定</h4>

<p>障害発生時に利用するレプリケーションの設定についてもデフォルトで説明書きがなされています。</p>

<h5>スレーブ設定</h5>

<p>スレーブのコピー元となるマスターを指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Master</span><span class="o">-</span><span class="nx">Slave</span> <span class="nx">replication</span><span class="p">.</span> <span class="nx">Use</span> <span class="nx">slaveof</span> <span class="nx">to</span> <span class="nx">make</span> <span class="nx">a</span> <span class="nx">Redis</span> <span class="nx">instance</span> <span class="nx">a</span> <span class="nx">copy</span> <span class="nx">of</span>
</span><span class='line'><span class="err">#</span> <span class="nx">another</span> <span class="nx">Redis</span> <span class="nx">server</span><span class="p">.</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="nx">the</span> <span class="nx">configuration</span> <span class="nx">is</span> <span class="nx">local</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">slave</span>
</span><span class='line'><span class="err">#</span> <span class="nx">so</span> <span class="k">for</span> <span class="nx">example</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">configure</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">to</span> <span class="nx">save</span> <span class="nx">the</span> <span class="nx">DB</span> <span class="kd">with</span> <span class="nx">a</span>
</span><span class='line'><span class="err">#</span> <span class="nx">different</span> <span class="nx">interval</span><span class="p">,</span> <span class="nx">or</span> <span class="nx">to</span> <span class="nx">listen</span> <span class="nx">to</span> <span class="nx">another</span> <span class="nx">port</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">on</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">slaveof</span> <span class="o">&lt;</span><span class="nx">masterip</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="nx">masterport</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>スレーブ側のRedisに設定を記載します。<br/>
マスター側とDB保存間隔の設定や接続時のポート番号が異なっていたとしても何ら問題はありません。</p>

<h5>マスターのパスワード設定</h5>

<p>マスター側がパスワード認証を必要している場合、スレーブ側でマスターのパスワードを設定していないとリクエスト要求が通りません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">the</span> <span class="nx">master</span> <span class="nx">is</span> <span class="nx">password</span> <span class="kr">protected</span> <span class="p">(</span><span class="nx">using</span> <span class="nx">the</span> <span class="s2">&quot;requirepass&quot;</span> <span class="nx">configuration</span>
</span><span class='line'><span class="err">#</span> <span class="nx">directive</span> <span class="nx">below</span><span class="p">)</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">tell</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">to</span> <span class="nx">authenticate</span> <span class="nx">before</span>
</span><span class='line'><span class="err">#</span> <span class="nx">starting</span> <span class="nx">the</span> <span class="nx">replication</span> <span class="nx">synchronization</span> <span class="nx">process</span><span class="p">,</span> <span class="nx">otherwise</span> <span class="nx">the</span> <span class="nx">master</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span> <span class="nx">refuse</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">request</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">masterauth</span> <span class="o">&lt;</span><span class="nx">master</span><span class="o">-</span><span class="nx">password</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>マスターとの同期が最新でない場合のスレーブ挙動の設定</h5>

<p>スレーブがマスターと同期が取れなくなることは長く運用を続けていく上で必ず発生しうるものです。<br/>
その際にスレーブがどのような振る舞いをすべきか設定しておきましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">When</span> <span class="nx">a</span> <span class="nx">slave</span> <span class="nx">loses</span> <span class="nx">its</span> <span class="nx">connection</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">master</span><span class="p">,</span> <span class="nx">or</span> <span class="nx">when</span> <span class="nx">the</span> <span class="nx">replication</span>
</span><span class='line'><span class="err">#</span> <span class="nx">is</span> <span class="nx">still</span> <span class="k">in</span> <span class="nx">progress</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">can</span> <span class="nx">act</span> <span class="k">in</span> <span class="nx">two</span> <span class="nx">different</span> <span class="nx">ways</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="nx">slave</span><span class="o">-</span><span class="nx">serve</span><span class="o">-</span><span class="nx">stale</span><span class="o">-</span><span class="nx">data</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="s1">&#39;yes&#39;</span> <span class="p">(</span><span class="nx">the</span> <span class="k">default</span><span class="p">)</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span>    <span class="nx">still</span> <span class="nx">reply</span> <span class="nx">to</span> <span class="nx">client</span> <span class="nx">requests</span><span class="p">,</span> <span class="nx">possibly</span> <span class="kd">with</span> <span class="nx">out</span> <span class="nx">of</span> <span class="nx">date</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">or</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span>    <span class="nx">data</span> <span class="nx">set</span> <span class="nx">may</span> <span class="nx">just</span> <span class="nx">be</span> <span class="nx">empty</span> <span class="k">if</span> <span class="k">this</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">first</span> <span class="nx">synchronization</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="mi">2</span><span class="p">)</span> <span class="k">if</span> <span class="nx">slave</span><span class="o">-</span><span class="nx">serve</span><span class="o">-</span><span class="nx">stale</span><span class="o">-</span><span class="nx">data</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="s1">&#39;no&#39;</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">will</span> <span class="nx">reply</span> <span class="kd">with</span>
</span><span class='line'><span class="err">#</span>    <span class="nx">an</span> <span class="nx">error</span> <span class="s2">&quot;SYNC with master in progress&quot;</span> <span class="nx">to</span> <span class="nx">all</span> <span class="nx">the</span> <span class="nx">kind</span> <span class="nx">of</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span>    <span class="nx">but</span> <span class="nx">to</span> <span class="nx">INFO</span> <span class="nx">and</span> <span class="nx">SLAVEOF</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="nx">slave</span><span class="o">-</span><span class="nx">serve</span><span class="o">-</span><span class="nx">stale</span><span class="o">-</span><span class="nx">data</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>yes</code>: 最後に同期が取れた際の最新データを返却</li>
<li><code>no</code>: 最新の同期が取れていないためエラーを返却</li>
</ul>


<h5>スレーブの書き込み権限の設定</h5>

<p>特別な理由がない限り、<code>yes</code>で良さそうな設定です。<br/>
スレーブは基本的にマスターに障害が発生した場合に利用する想定なので、直接書き込み権限をつける必要はないでしょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">You</span> <span class="nx">can</span> <span class="nx">configure</span> <span class="nx">a</span> <span class="nx">slave</span> <span class="nx">instance</span> <span class="nx">to</span> <span class="nx">accept</span> <span class="nx">writes</span> <span class="nx">or</span> <span class="nx">not</span><span class="p">.</span> <span class="nx">Writing</span> <span class="nx">against</span>
</span><span class='line'><span class="err">#</span> <span class="nx">a</span> <span class="nx">slave</span> <span class="nx">instance</span> <span class="nx">may</span> <span class="nx">be</span> <span class="nx">useful</span> <span class="nx">to</span> <span class="nx">store</span> <span class="nx">some</span> <span class="nx">ephemeral</span> <span class="nx">data</span> <span class="p">(</span><span class="nx">because</span> <span class="nx">data</span>
</span><span class='line'><span class="err">#</span> <span class="nx">written</span> <span class="nx">on</span> <span class="nx">a</span> <span class="nx">slave</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">easily</span> <span class="nx">deleted</span> <span class="nx">after</span> <span class="nx">resync</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">master</span><span class="p">)</span> <span class="nx">but</span>
</span><span class='line'><span class="err">#</span> <span class="nx">may</span> <span class="nx">also</span> <span class="nx">cause</span> <span class="nx">problems</span> <span class="k">if</span> <span class="nx">clients</span> <span class="nx">are</span> <span class="nx">writing</span> <span class="nx">to</span> <span class="nx">it</span> <span class="nx">because</span> <span class="nx">of</span> <span class="nx">a</span>
</span><span class='line'><span class="err">#</span> <span class="nx">misconfiguration</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Since</span> <span class="nx">Redis</span> <span class="mf">2.6</span> <span class="nx">by</span> <span class="k">default</span> <span class="nx">slaves</span> <span class="nx">are</span> <span class="nx">read</span><span class="o">-</span><span class="nx">only</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Note</span><span class="o">:</span> <span class="nx">read</span> <span class="nx">only</span> <span class="nx">slaves</span> <span class="nx">are</span> <span class="nx">not</span> <span class="nx">designed</span> <span class="nx">to</span> <span class="nx">be</span> <span class="nx">exposed</span> <span class="nx">to</span> <span class="nx">untrusted</span> <span class="nx">clients</span>
</span><span class='line'><span class="err">#</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">internet</span><span class="p">.</span> <span class="nx">It</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">just</span> <span class="nx">a</span> <span class="nx">protection</span> <span class="nx">layer</span> <span class="nx">against</span> <span class="nx">misuse</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">instance</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Still</span> <span class="nx">a</span> <span class="nx">read</span> <span class="nx">only</span> <span class="nx">slave</span> <span class="nx">exports</span> <span class="nx">by</span> <span class="k">default</span> <span class="nx">all</span> <span class="nx">the</span> <span class="nx">administrative</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span> <span class="nx">such</span> <span class="nx">as</span> <span class="nx">CONFIG</span><span class="p">,</span> <span class="nx">DEBUG</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">forth</span><span class="p">.</span> <span class="nx">To</span> <span class="nx">a</span> <span class="nx">limited</span> <span class="nx">extent</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">improve</span>
</span><span class='line'><span class="err">#</span> <span class="nx">security</span> <span class="nx">of</span> <span class="nx">read</span> <span class="nx">only</span> <span class="nx">slaves</span> <span class="nx">using</span> <span class="s1">&#39;rename-command&#39;</span> <span class="nx">to</span> <span class="nx">shadow</span> <span class="nx">all</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">administrative</span> <span class="o">/</span> <span class="nx">dangerous</span> <span class="nx">commands</span><span class="p">.</span>
</span><span class='line'><span class="nx">slave</span><span class="o">-</span><span class="nx">read</span><span class="o">-</span><span class="nx">only</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意すべきこととしては、<code>slave-read-only</code>を<code>yes</code>に設定したとしても、<code>CONFIG</code>コマンドなどで設定値を変更することができてしまいます。<br/>
もし、それを防止したいのであれば、<code>rename-command</code>を利用することで予めコマンド名を第三者からはわからないもに変えておきましょう。</p>

<h5>マスターへのヘルスチェック設定</h5>

<p>スレーブがマスターの生存を確認するために流し込む<code>ping</code>の時間の間隔設定です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Slaves</span> <span class="nx">send</span> <span class="nx">PINGs</span> <span class="nx">to</span> <span class="nx">server</span> <span class="k">in</span> <span class="nx">a</span> <span class="nx">predefined</span> <span class="nx">interval</span><span class="p">.</span> <span class="nx">It</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">change</span>
</span><span class='line'><span class="err">#</span> <span class="k">this</span> <span class="nx">interval</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">repl_ping_slave_period</span> <span class="nx">option</span><span class="p">.</span> <span class="nx">The</span> <span class="k">default</span> <span class="nx">value</span> <span class="nx">is</span> <span class="mi">10</span>
</span><span class='line'><span class="err">#</span> <span class="nx">seconds</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">repl</span><span class="o">-</span><span class="nx">ping</span><span class="o">-</span><span class="nx">slave</span><span class="o">-</span><span class="nx">period</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<h5>レプリケーションのタイムアウト設定</h5>

<p>マスタースレーブ間で同期を取る際などにリクエスト/レスポンスが発生します。<br/>
その際のタイムアウト設定となります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">following</span> <span class="nx">option</span> <span class="nx">sets</span> <span class="nx">the</span> <span class="nx">replication</span> <span class="nx">timeout</span> <span class="k">for</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="mi">1</span><span class="p">)</span> <span class="nx">Bulk</span> <span class="nx">transfer</span> <span class="nx">I</span><span class="o">/</span><span class="nx">O</span> <span class="nx">during</span> <span class="nx">SYNC</span><span class="p">,</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">point</span> <span class="nx">of</span> <span class="nx">view</span> <span class="nx">of</span> <span class="nx">slave</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="mi">2</span><span class="p">)</span> <span class="nx">Master</span> <span class="nx">timeout</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">point</span> <span class="nx">of</span> <span class="nx">view</span> <span class="nx">of</span> <span class="nx">slaves</span> <span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">pings</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span> <span class="mi">3</span><span class="p">)</span> <span class="nx">Slave</span> <span class="nx">timeout</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">point</span> <span class="nx">of</span> <span class="nx">view</span> <span class="nx">of</span> <span class="nx">masters</span> <span class="p">(</span><span class="nx">REPLCONF</span> <span class="nx">ACK</span> <span class="nx">pings</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">important</span> <span class="nx">to</span> <span class="nx">make</span> <span class="nx">sure</span> <span class="nx">that</span> <span class="k">this</span> <span class="nx">value</span> <span class="nx">is</span> <span class="nx">greater</span> <span class="nx">than</span> <span class="nx">the</span> <span class="nx">value</span>
</span><span class='line'><span class="err">#</span> <span class="nx">specified</span> <span class="k">for</span> <span class="nx">repl</span><span class="o">-</span><span class="nx">ping</span><span class="o">-</span><span class="nx">slave</span><span class="o">-</span><span class="nx">period</span> <span class="nx">otherwise</span> <span class="nx">a</span> <span class="nx">timeout</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">detected</span>
</span><span class='line'><span class="err">#</span> <span class="nx">every</span> <span class="nx">time</span> <span class="nx">there</span> <span class="nx">is</span> <span class="nx">low</span> <span class="nx">traffic</span> <span class="nx">between</span> <span class="nx">the</span> <span class="nx">master</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">slave</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">repl</span><span class="o">-</span><span class="nx">timeout</span> <span class="mi">60</span>
</span></code></pre></td></tr></table></div></figure>


<p>注意点としては、<code>repl-ping-slave-period</code>よりも大きな設定をしないと毎回<code>ping</code>でタイムアウトすることになります。</p>

<h5>TCPの遅延に関する設定</h5>

<p>TCP通信時の帯域幅の占有可否と遅延の許容可否の優先度を決めます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Disable</span> <span class="nx">TCP_NODELAY</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">socket</span> <span class="nx">after</span> <span class="nx">SYNC</span><span class="o">?</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">select</span> <span class="s2">&quot;yes&quot;</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">use</span> <span class="nx">a</span> <span class="nx">smaller</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">TCP</span> <span class="nx">packets</span> <span class="nx">and</span>
</span><span class='line'><span class="err">#</span> <span class="nx">less</span> <span class="nx">bandwidth</span> <span class="nx">to</span> <span class="nx">send</span> <span class="nx">data</span> <span class="nx">to</span> <span class="nx">slaves</span><span class="p">.</span> <span class="nx">But</span> <span class="k">this</span> <span class="nx">can</span> <span class="nx">add</span> <span class="nx">a</span> <span class="nx">delay</span> <span class="k">for</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">data</span> <span class="nx">to</span> <span class="nx">appear</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">side</span><span class="p">,</span> <span class="nx">up</span> <span class="nx">to</span> <span class="mi">40</span> <span class="nx">milliseconds</span> <span class="kd">with</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Linux</span> <span class="nx">kernels</span> <span class="nx">using</span> <span class="nx">a</span> <span class="k">default</span> <span class="nx">configuration</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">select</span> <span class="s2">&quot;no&quot;</span> <span class="nx">the</span> <span class="nx">delay</span> <span class="k">for</span> <span class="nx">data</span> <span class="nx">to</span> <span class="nx">appear</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">side</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span> <span class="nx">be</span> <span class="nx">reduced</span> <span class="nx">but</span> <span class="nx">more</span> <span class="nx">bandwidth</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">used</span> <span class="k">for</span> <span class="nx">replication</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">we</span> <span class="nx">optimize</span> <span class="k">for</span> <span class="nx">low</span> <span class="nx">latency</span><span class="p">,</span> <span class="nx">but</span> <span class="k">in</span> <span class="nx">very</span> <span class="nx">high</span> <span class="nx">traffic</span> <span class="nx">conditions</span>
</span><span class='line'><span class="err">#</span> <span class="nx">or</span> <span class="nx">when</span> <span class="nx">the</span> <span class="nx">master</span> <span class="nx">and</span> <span class="nx">slaves</span> <span class="nx">are</span> <span class="nx">many</span> <span class="nx">hops</span> <span class="nx">away</span><span class="p">,</span> <span class="nx">turning</span> <span class="k">this</span> <span class="nx">to</span> <span class="s2">&quot;yes&quot;</span> <span class="nx">may</span>
</span><span class='line'><span class="err">#</span> <span class="nx">be</span> <span class="nx">a</span> <span class="nx">good</span> <span class="nx">idea</span><span class="p">.</span>
</span><span class='line'><span class="nx">repl</span><span class="o">-</span><span class="nx">disable</span><span class="o">-</span><span class="nx">tcp</span><span class="o">-</span><span class="nx">nodelay</span> <span class="nx">no</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>yes</code>: TCP通信時のパケット数を小さく抑えることで、帯域幅の占有率を下げることができます。一方で遅延は増加します。</li>
<li><code>no</code>: TCP通信時に帯域幅を広く使うことで遅延を減少させます。</li>
</ul>


<h5>スレーブのバックアップログサイズの設定</h5>

<p>マスターからスレーブへの接続が切断されてしまっている間に保存しておく差分の最大サイズです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Set</span> <span class="nx">the</span> <span class="nx">replication</span> <span class="nx">backlog</span> <span class="nx">size</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">backlog</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">buffer</span> <span class="nx">that</span> <span class="nx">accumulates</span>
</span><span class='line'><span class="err">#</span> <span class="nx">slave</span> <span class="nx">data</span> <span class="nx">when</span> <span class="nx">slaves</span> <span class="nx">are</span> <span class="nx">disconnected</span> <span class="k">for</span> <span class="nx">some</span> <span class="nx">time</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">that</span> <span class="nx">when</span> <span class="nx">a</span> <span class="nx">slave</span>
</span><span class='line'><span class="err">#</span> <span class="nx">wants</span> <span class="nx">to</span> <span class="nx">reconnect</span> <span class="nx">again</span><span class="p">,</span> <span class="nx">often</span> <span class="nx">a</span> <span class="nx">full</span> <span class="nx">resync</span> <span class="nx">is</span> <span class="nx">not</span> <span class="nx">needed</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">a</span> <span class="nx">partial</span>
</span><span class='line'><span class="err">#</span> <span class="nx">resync</span> <span class="nx">is</span> <span class="nx">enough</span><span class="p">,</span> <span class="nx">just</span> <span class="nx">passing</span> <span class="nx">the</span> <span class="nx">portion</span> <span class="nx">of</span> <span class="nx">data</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">missed</span> <span class="k">while</span>
</span><span class='line'><span class="err">#</span> <span class="nx">disconnected</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">biggest</span> <span class="nx">the</span> <span class="nx">replication</span> <span class="nx">backlog</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">longer</span> <span class="nx">the</span> <span class="nx">time</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">can</span> <span class="nx">be</span>
</span><span class='line'><span class="err">#</span> <span class="nx">disconnected</span> <span class="nx">and</span> <span class="nx">later</span> <span class="nx">be</span> <span class="nx">able</span> <span class="nx">to</span> <span class="nx">perform</span> <span class="nx">a</span> <span class="nx">partial</span> <span class="nx">resynchronization</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">backlog</span> <span class="nx">is</span> <span class="nx">only</span> <span class="nx">allocated</span> <span class="nx">once</span> <span class="nx">there</span> <span class="nx">is</span> <span class="nx">at</span> <span class="nx">least</span> <span class="nx">a</span> <span class="nx">slave</span> <span class="nx">connected</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">repl</span><span class="o">-</span><span class="nx">backlog</span><span class="o">-</span><span class="nx">size</span> <span class="mi">1</span><span class="nx">mb</span>
</span></code></pre></td></tr></table></div></figure>


<h5>バックログファイルの維持許容時間の設定</h5>

<p>スレーブが切断されている間にバックアップのためのログ保存を行う一方で、そのバックログファイルを解放する設定も可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">After</span> <span class="nx">a</span> <span class="nx">master</span> <span class="nx">has</span> <span class="nx">no</span> <span class="nx">longer</span> <span class="nx">connected</span> <span class="nx">slaves</span> <span class="k">for</span> <span class="nx">some</span> <span class="nx">time</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">backlog</span>
</span><span class='line'><span class="err">#</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">freed</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">following</span> <span class="nx">option</span> <span class="nx">configures</span> <span class="nx">the</span> <span class="nx">amount</span> <span class="nx">of</span> <span class="nx">seconds</span> <span class="nx">that</span>
</span><span class='line'><span class="err">#</span> <span class="nx">need</span> <span class="nx">to</span> <span class="nx">elapse</span><span class="p">,</span> <span class="nx">starting</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">time</span> <span class="nx">the</span> <span class="nx">last</span> <span class="nx">slave</span> <span class="nx">disconnected</span><span class="p">,</span> <span class="k">for</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">backlog</span> <span class="nx">buffer</span> <span class="nx">to</span> <span class="nx">be</span> <span class="nx">freed</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">A</span> <span class="nx">value</span> <span class="nx">of</span> <span class="mi">0</span> <span class="nx">means</span> <span class="nx">to</span> <span class="nx">never</span> <span class="nx">release</span> <span class="nx">the</span> <span class="nx">backlog</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">repl</span><span class="o">-</span><span class="nx">backlog</span><span class="o">-</span><span class="nx">ttl</span> <span class="mi">3600</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記設定でコメントアウトを外せば、1時間はバックアップログファイルを維持します。<br/>
<code>0</code>を設定した場合、ファイルの解放は実施しません。</p>

<h5>スレーブの優先度設定</h5>

<p>マスターが何らかの障害により動作できなくなった場合にスレーブがマスターに昇格することになります。<br/>
もし、スレーブが複数台存在していたら、どれをマスターに昇格させるべきか選ぶ必要があります。<br/>
その際に参考とする値となっています。(実際には <code>Redis Sentinel</code> が参考にする値)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">slave</span> <span class="nx">priority</span> <span class="nx">is</span> <span class="nx">an</span> <span class="nx">integer</span> <span class="nx">number</span> <span class="nx">published</span> <span class="nx">by</span> <span class="nx">Redis</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">INFO</span> <span class="nx">output</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">Redis</span> <span class="nx">Sentinel</span> <span class="k">in</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">select</span> <span class="nx">a</span> <span class="nx">slave</span> <span class="nx">to</span> <span class="nx">promote</span> <span class="nx">into</span> <span class="nx">a</span>
</span><span class='line'><span class="err">#</span> <span class="nx">master</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">master</span> <span class="nx">is</span> <span class="nx">no</span> <span class="nx">longer</span> <span class="nx">working</span> <span class="nx">correctly</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">A</span> <span class="nx">slave</span> <span class="kd">with</span> <span class="nx">a</span> <span class="nx">low</span> <span class="nx">priority</span> <span class="nx">number</span> <span class="nx">is</span> <span class="nx">considered</span> <span class="nx">better</span> <span class="k">for</span> <span class="nx">promotion</span><span class="p">,</span> <span class="nx">so</span>
</span><span class='line'><span class="err">#</span> <span class="k">for</span> <span class="nx">instance</span> <span class="k">if</span> <span class="nx">there</span> <span class="nx">are</span> <span class="nx">three</span> <span class="nx">slaves</span> <span class="kd">with</span> <span class="nx">priority</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">25</span> <span class="nx">Sentinel</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span> <span class="nx">pick</span> <span class="nx">the</span> <span class="nx">one</span> <span class="kd">with</span> <span class="nx">priority</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">that</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">lowest</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">However</span> <span class="nx">a</span> <span class="nx">special</span> <span class="nx">priority</span> <span class="nx">of</span> <span class="mi">0</span> <span class="nx">marks</span> <span class="nx">the</span> <span class="nx">slave</span> <span class="nx">as</span> <span class="nx">not</span> <span class="nx">able</span> <span class="nx">to</span> <span class="nx">perform</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">role</span> <span class="nx">of</span> <span class="nx">master</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">a</span> <span class="nx">slave</span> <span class="kd">with</span> <span class="nx">priority</span> <span class="nx">of</span> <span class="mi">0</span> <span class="nx">will</span> <span class="nx">never</span> <span class="nx">be</span> <span class="nx">selected</span> <span class="nx">by</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">Sentinel</span> <span class="k">for</span> <span class="nx">promotion</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">the</span> <span class="nx">priority</span> <span class="nx">is</span> <span class="mi">100</span><span class="p">.</span>
</span><span class='line'><span class="nx">slave</span><span class="o">-</span><span class="nx">priority</span> <span class="mi">100</span>
</span></code></pre></td></tr></table></div></figure>


<h5>マスターへの書き込み権限の設定</h5>

<p>Redis2.8系から導入された設定です。<br/>
『マスターに最低 N スレーブが接続している場合にかぎり、書き込み要求を受け付ける設定』です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="k">for</span> <span class="nx">a</span> <span class="nx">master</span> <span class="nx">to</span> <span class="nx">stop</span> <span class="nx">accepting</span> <span class="nx">writes</span> <span class="k">if</span> <span class="nx">there</span> <span class="nx">are</span> <span class="nx">less</span> <span class="nx">than</span>
</span><span class='line'><span class="err">#</span> <span class="nx">N</span> <span class="nx">slaves</span> <span class="nx">connected</span><span class="p">,</span> <span class="nx">having</span> <span class="nx">a</span> <span class="nx">lag</span> <span class="nx">less</span> <span class="nx">or</span> <span class="nx">equal</span> <span class="nx">than</span> <span class="nx">M</span> <span class="nx">seconds</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">N</span> <span class="nx">slaves</span> <span class="nx">need</span> <span class="nx">to</span> <span class="nx">be</span> <span class="k">in</span> <span class="s2">&quot;online&quot;</span> <span class="nx">state</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">lag</span> <span class="k">in</span> <span class="nx">seconds</span><span class="p">,</span> <span class="nx">that</span> <span class="nx">must</span> <span class="nx">be</span> <span class="o">&lt;=</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">value</span><span class="p">,</span> <span class="nx">is</span> <span class="nx">calculated</span> <span class="nx">from</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">last</span> <span class="nx">ping</span> <span class="nx">received</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">slave</span><span class="p">,</span> <span class="nx">that</span> <span class="nx">is</span> <span class="nx">usually</span> <span class="nx">sent</span> <span class="nx">every</span> <span class="nx">second</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">option</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">GUARANTEES</span> <span class="nx">that</span> <span class="nx">N</span> <span class="nx">replicas</span> <span class="nx">will</span> <span class="nx">accept</span> <span class="nx">the</span> <span class="nx">write</span><span class="p">,</span> <span class="nx">but</span>
</span><span class='line'><span class="err">#</span> <span class="nx">will</span> <span class="nx">limit</span> <span class="nx">the</span> <span class="nb">window</span> <span class="nx">of</span> <span class="nx">exposure</span> <span class="k">for</span> <span class="nx">lost</span> <span class="nx">writes</span> <span class="k">in</span> <span class="k">case</span> <span class="nx">not</span> <span class="nx">enough</span> <span class="nx">slaves</span>
</span><span class='line'><span class="err">#</span> <span class="nx">are</span> <span class="nx">available</span><span class="p">,</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">seconds</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">For</span> <span class="nx">example</span> <span class="nx">to</span> <span class="nx">require</span> <span class="nx">at</span> <span class="nx">least</span> <span class="mi">3</span> <span class="nx">slaves</span> <span class="kd">with</span> <span class="nx">a</span> <span class="nx">lag</span> <span class="o">&lt;=</span> <span class="mi">10</span> <span class="nx">seconds</span> <span class="nx">use</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">min</span><span class="o">-</span><span class="nx">slaves</span><span class="o">-</span><span class="nx">to</span><span class="o">-</span><span class="nx">write</span> <span class="mi">3</span>
</span><span class='line'><span class="err">#</span> <span class="nx">min</span><span class="o">-</span><span class="nx">slaves</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">lag</span> <span class="mi">10</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Setting</span> <span class="nx">one</span> <span class="nx">or</span> <span class="nx">the</span> <span class="nx">other</span> <span class="nx">to</span> <span class="mi">0</span> <span class="nx">disables</span> <span class="nx">the</span> <span class="nx">feature</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">min</span><span class="o">-</span><span class="nx">slaves</span><span class="o">-</span><span class="nx">to</span><span class="o">-</span><span class="nx">write</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="mi">0</span> <span class="p">(</span><span class="nx">feature</span> <span class="nx">disabled</span><span class="p">)</span> <span class="nx">and</span>
</span><span class='line'><span class="err">#</span> <span class="nx">min</span><span class="o">-</span><span class="nx">slaves</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">lag</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="mi">10</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>min-slaves-to-write</code>: 書き込むために必要な最少接続スレーブ数の設定</li>
<li><code>min-slaves-max-lag</code>: 書き込むために必要な最大タイムラグの設定</li>
</ul>


<h4>セキュリティ関連の設定</h4>

<p>セキュリティ面で設定が必要な場合に活用します。</p>

<h5>認証パスワードの設定</h5>

<p>クライアントからコマンドを叩かれる前にパスワードを要求することでセキュリティを高めます。<br/>
クライアントからRedisに対して直接コマンドを叩くケースがある場合は設定しておきましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Require</span> <span class="nx">clients</span> <span class="nx">to</span> <span class="nx">issue</span> <span class="nx">AUTH</span> <span class="o">&lt;</span><span class="nx">PASSWORD</span><span class="o">&gt;</span> <span class="nx">before</span> <span class="nx">processing</span> <span class="nx">any</span> <span class="nx">other</span>
</span><span class='line'><span class="err">#</span> <span class="nx">commands</span><span class="p">.</span>  <span class="nx">This</span> <span class="nx">might</span> <span class="nx">be</span> <span class="nx">useful</span> <span class="k">in</span> <span class="nx">environments</span> <span class="k">in</span> <span class="nx">which</span> <span class="nx">you</span> <span class="k">do</span> <span class="nx">not</span> <span class="nx">trust</span>
</span><span class='line'><span class="err">#</span> <span class="nx">others</span> <span class="kd">with</span> <span class="nx">access</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">host</span> <span class="nx">running</span> <span class="nx">redis</span><span class="o">-</span><span class="nx">server</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">should</span> <span class="nx">stay</span> <span class="nx">commented</span> <span class="nx">out</span> <span class="k">for</span> <span class="nx">backward</span> <span class="nx">compatibility</span> <span class="nx">and</span> <span class="nx">because</span> <span class="nx">most</span>
</span><span class='line'><span class="err">#</span> <span class="nx">people</span> <span class="k">do</span> <span class="nx">not</span> <span class="nx">need</span> <span class="nx">auth</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="nx">they</span> <span class="nx">run</span> <span class="nx">their</span> <span class="nx">own</span> <span class="nx">servers</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Warning</span><span class="o">:</span> <span class="nx">since</span> <span class="nx">Redis</span> <span class="nx">is</span> <span class="nx">pretty</span> <span class="nx">fast</span> <span class="nx">an</span> <span class="nx">outside</span> <span class="nx">user</span> <span class="nx">can</span> <span class="k">try</span> <span class="nx">up</span> <span class="nx">to</span>
</span><span class='line'><span class="err">#</span> <span class="mi">150</span><span class="nx">k</span> <span class="nx">passwords</span> <span class="nx">per</span> <span class="nx">second</span> <span class="nx">against</span> <span class="nx">a</span> <span class="nx">good</span> <span class="nx">box</span><span class="p">.</span> <span class="nx">This</span> <span class="nx">means</span> <span class="nx">that</span> <span class="nx">you</span> <span class="nx">should</span>
</span><span class='line'><span class="err">#</span> <span class="nx">use</span> <span class="nx">a</span> <span class="nx">very</span> <span class="nx">strong</span> <span class="nx">password</span> <span class="nx">otherwise</span> <span class="nx">it</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">very</span> <span class="nx">easy</span> <span class="nx">to</span> <span class="k">break</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">requirepass</span> <span class="nx">foobared</span>
</span></code></pre></td></tr></table></div></figure>


<h5>コマンド名の変更</h5>

<p><code>slave-read-only</code>で少し触れましたが、<code>CONFIG</code>コマンドを直接クライアントから叩かれたりすると困るかもしれません。<br/>
そういったケースが想定される場合は設定しておきましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Command</span> <span class="nx">renaming</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">change</span> <span class="nx">the</span> <span class="nx">name</span> <span class="nx">of</span> <span class="nx">dangerous</span> <span class="nx">commands</span> <span class="k">in</span> <span class="nx">a</span> <span class="nx">shared</span>
</span><span class='line'><span class="err">#</span> <span class="nx">environment</span><span class="p">.</span> <span class="nx">For</span> <span class="nx">instance</span> <span class="nx">the</span> <span class="nx">CONFIG</span> <span class="nx">command</span> <span class="nx">may</span> <span class="nx">be</span> <span class="nx">renamed</span> <span class="nx">into</span> <span class="nx">something</span>
</span><span class='line'><span class="err">#</span> <span class="nx">hard</span> <span class="nx">to</span> <span class="nx">guess</span> <span class="nx">so</span> <span class="nx">that</span> <span class="nx">it</span> <span class="nx">will</span> <span class="nx">still</span> <span class="nx">be</span> <span class="nx">available</span> <span class="k">for</span> <span class="nx">internal</span><span class="o">-</span><span class="nx">use</span> <span class="nx">tools</span>
</span><span class='line'><span class="err">#</span> <span class="nx">but</span> <span class="nx">not</span> <span class="nx">available</span> <span class="k">for</span> <span class="nx">general</span> <span class="nx">clients</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Example</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">rename</span><span class="o">-</span><span class="nx">command</span> <span class="nx">CONFIG</span> <span class="nx">b840fc02d524045429941cc15f59e41cb7be6c52</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">also</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">completely</span> <span class="nx">kill</span> <span class="nx">a</span> <span class="nx">command</span> <span class="nx">by</span> <span class="nx">renaming</span> <span class="nx">it</span> <span class="nx">into</span>
</span><span class='line'><span class="err">#</span> <span class="nx">an</span> <span class="nx">empty</span> <span class="nx">string</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">rename</span><span class="o">-</span><span class="nx">command</span> <span class="nx">CONFIG</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Please</span> <span class="nx">note</span> <span class="nx">that</span> <span class="nx">changing</span> <span class="nx">the</span> <span class="nx">name</span> <span class="nx">of</span> <span class="nx">commands</span> <span class="nx">that</span> <span class="nx">are</span> <span class="nx">logged</span> <span class="nx">into</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">AOF</span> <span class="nx">file</span> <span class="nx">or</span> <span class="nx">transmitted</span> <span class="nx">to</span> <span class="nx">slaves</span> <span class="nx">may</span> <span class="nx">cause</span> <span class="nx">problems</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<h4>リソース制限に関する設定</h4>

<p>サーバはリソースが限られているため、利用ケースに合わせてリソース制限を適切に設定することが必要です。</p>

<h5>最大同時接続クライアント数の設定</h5>

<p>デフォルト<code>10000</code>ですが、実際にはRedis Serverの予約数である<code>32</code>がそこから引かれます。<br/>
もし、設定した同時接続数を超えた場合はエラーを返却します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Set</span> <span class="nx">the</span> <span class="nx">max</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">connected</span> <span class="nx">clients</span> <span class="nx">at</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">time</span><span class="p">.</span> <span class="nx">By</span> <span class="k">default</span>
</span><span class='line'><span class="err">#</span> <span class="k">this</span> <span class="nx">limit</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="mi">10000</span> <span class="nx">clients</span><span class="p">,</span> <span class="nx">however</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">Redis</span> <span class="nx">server</span> <span class="nx">is</span> <span class="nx">not</span>
</span><span class='line'><span class="err">#</span> <span class="nx">able</span> <span class="nx">to</span> <span class="nx">configure</span> <span class="nx">the</span> <span class="nx">process</span> <span class="nx">file</span> <span class="nx">limit</span> <span class="nx">to</span> <span class="nx">allow</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">limit</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">max</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">allowed</span> <span class="nx">clients</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">current</span> <span class="nx">file</span> <span class="nx">limit</span>
</span><span class='line'><span class="err">#</span> <span class="nx">minus</span> <span class="mi">32</span> <span class="p">(</span><span class="nx">as</span> <span class="nx">Redis</span> <span class="nx">reserves</span> <span class="nx">a</span> <span class="nx">few</span> <span class="nx">file</span> <span class="nx">descriptors</span> <span class="k">for</span> <span class="nx">internal</span> <span class="nx">uses</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Once</span> <span class="nx">the</span> <span class="nx">limit</span> <span class="nx">is</span> <span class="nx">reached</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">close</span> <span class="nx">all</span> <span class="nx">the</span> <span class="k">new</span> <span class="nx">connections</span> <span class="nx">sending</span>
</span><span class='line'><span class="err">#</span> <span class="nx">an</span> <span class="nx">error</span> <span class="s1">&#39;max number of clients reached&#39;</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">maxclients</span> <span class="mi">10000</span>
</span></code></pre></td></tr></table></div></figure>


<h5>利用するメモリ上限の設定</h5>

<p>指定した分までメモリを利用します。<br/>
デフォルトはコメントアウトされているため、システム上限までメモリを利用できます。<br/>
上限までメモリを利用した場合の挙動については<code>maxmemory-policy</code>で指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">use</span> <span class="nx">more</span> <span class="nx">memory</span> <span class="nx">than</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">amount</span> <span class="nx">of</span> <span class="nx">bytes</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">When</span> <span class="nx">the</span> <span class="nx">memory</span> <span class="nx">limit</span> <span class="nx">is</span> <span class="nx">reached</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="k">try</span> <span class="nx">to</span> <span class="nx">remove</span> <span class="nx">keys</span>
</span><span class='line'><span class="err">#</span> <span class="nx">according</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">eviction</span> <span class="nx">policy</span> <span class="nx">selected</span> <span class="p">(</span><span class="nx">see</span> <span class="nx">maxmemory</span><span class="o">-</span><span class="nx">policy</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">Redis</span> <span class="nx">can</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">remove</span> <span class="nx">keys</span> <span class="nx">according</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">policy</span><span class="p">,</span> <span class="nx">or</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">policy</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">set</span> <span class="nx">to</span> <span class="s1">&#39;noeviction&#39;</span><span class="p">,</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">start</span> <span class="nx">to</span> <span class="nx">reply</span> <span class="kd">with</span> <span class="nx">errors</span> <span class="nx">to</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span> <span class="nx">that</span> <span class="nx">would</span> <span class="nx">use</span> <span class="nx">more</span> <span class="nx">memory</span><span class="p">,</span> <span class="nx">like</span> <span class="nx">SET</span><span class="p">,</span> <span class="nx">LPUSH</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">on</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">will</span> <span class="k">continue</span>
</span><span class='line'><span class="err">#</span> <span class="nx">to</span> <span class="nx">reply</span> <span class="nx">to</span> <span class="nx">read</span><span class="o">-</span><span class="nx">only</span> <span class="nx">commands</span> <span class="nx">like</span> <span class="nx">GET</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">option</span> <span class="nx">is</span> <span class="nx">usually</span> <span class="nx">useful</span> <span class="nx">when</span> <span class="nx">using</span> <span class="nx">Redis</span> <span class="nx">as</span> <span class="nx">an</span> <span class="nx">LRU</span> <span class="nx">cache</span><span class="p">,</span> <span class="nx">or</span> <span class="nx">to</span> <span class="nx">set</span>
</span><span class='line'><span class="err">#</span> <span class="nx">a</span> <span class="nx">hard</span> <span class="nx">memory</span> <span class="nx">limit</span> <span class="k">for</span> <span class="nx">an</span> <span class="nx">instance</span> <span class="p">(</span><span class="nx">using</span> <span class="nx">the</span> <span class="s1">&#39;noeviction&#39;</span> <span class="nx">policy</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">WARNING</span><span class="o">:</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">have</span> <span class="nx">slaves</span> <span class="nx">attached</span> <span class="nx">to</span> <span class="nx">an</span> <span class="nx">instance</span> <span class="kd">with</span> <span class="nx">maxmemory</span> <span class="nx">on</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">size</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">output</span> <span class="nx">buffers</span> <span class="nx">needed</span> <span class="nx">to</span> <span class="nx">feed</span> <span class="nx">the</span> <span class="nx">slaves</span> <span class="nx">are</span> <span class="nx">subtracted</span>
</span><span class='line'><span class="err">#</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">used</span> <span class="nx">memory</span> <span class="nx">count</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">that</span> <span class="nx">network</span> <span class="nx">problems</span> <span class="o">/</span> <span class="nx">resyncs</span> <span class="nx">will</span>
</span><span class='line'><span class="err">#</span> <span class="nx">not</span> <span class="nx">trigger</span> <span class="nx">a</span> <span class="nx">loop</span> <span class="nx">where</span> <span class="nx">keys</span> <span class="nx">are</span> <span class="nx">evicted</span><span class="p">,</span> <span class="nx">and</span> <span class="k">in</span> <span class="nx">turn</span> <span class="nx">the</span> <span class="nx">output</span>
</span><span class='line'><span class="err">#</span> <span class="nx">buffer</span> <span class="nx">of</span> <span class="nx">slaves</span> <span class="nx">is</span> <span class="nx">full</span> <span class="kd">with</span> <span class="nx">DELs</span> <span class="nx">of</span> <span class="nx">keys</span> <span class="nx">evicted</span> <span class="nx">triggering</span> <span class="nx">the</span> <span class="nx">deletion</span>
</span><span class='line'><span class="err">#</span> <span class="nx">of</span> <span class="nx">more</span> <span class="nx">keys</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">forth</span> <span class="nx">until</span> <span class="nx">the</span> <span class="nx">database</span> <span class="nx">is</span> <span class="nx">completely</span> <span class="nx">emptied</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">In</span> <span class="kr">short</span><span class="p">...</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">have</span> <span class="nx">slaves</span> <span class="nx">attached</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">suggested</span> <span class="nx">that</span> <span class="nx">you</span> <span class="nx">set</span> <span class="nx">a</span> <span class="nx">lower</span>
</span><span class='line'><span class="err">#</span> <span class="nx">limit</span> <span class="k">for</span> <span class="nx">maxmemory</span> <span class="nx">so</span> <span class="nx">that</span> <span class="nx">there</span> <span class="nx">is</span> <span class="nx">some</span> <span class="nx">free</span> <span class="nx">RAM</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">system</span> <span class="k">for</span> <span class="nx">slave</span>
</span><span class='line'><span class="err">#</span> <span class="nx">output</span> <span class="nx">buffers</span> <span class="p">(</span><span class="nx">but</span> <span class="k">this</span> <span class="nx">is</span> <span class="nx">not</span> <span class="nx">needed</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">policy</span> <span class="nx">is</span> <span class="s1">&#39;noeviction&#39;</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">maxmemory</span> <span class="o">&lt;</span><span class="nx">bytes</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>許容メモリ利用上限に達した場合の挙動の設定</h5>

<p>幾つか用意されたポリシーの中から挙動を選択します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">MAXMEMORY</span> <span class="nx">POLICY</span><span class="o">:</span> <span class="nx">how</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">select</span> <span class="nx">what</span> <span class="nx">to</span> <span class="nx">remove</span> <span class="nx">when</span> <span class="nx">maxmemory</span>
</span><span class='line'><span class="err">#</span> <span class="nx">is</span> <span class="nx">reached</span><span class="p">.</span> <span class="nx">You</span> <span class="nx">can</span> <span class="nx">select</span> <span class="nx">among</span> <span class="nx">five</span> <span class="nx">behaviors</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="kr">volatile</span><span class="o">-</span><span class="nx">lru</span> <span class="o">-&gt;</span> <span class="nx">remove</span> <span class="nx">the</span> <span class="nx">key</span> <span class="kd">with</span> <span class="nx">an</span> <span class="nx">expire</span> <span class="nx">set</span> <span class="nx">using</span> <span class="nx">an</span> <span class="nx">LRU</span> <span class="nx">algorithm</span>
</span><span class='line'><span class="err">#</span> <span class="nx">allkeys</span><span class="o">-</span><span class="nx">lru</span> <span class="o">-&gt;</span> <span class="nx">remove</span> <span class="nx">any</span> <span class="nx">key</span> <span class="nx">accordingly</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">LRU</span> <span class="nx">algorithm</span>
</span><span class='line'><span class="err">#</span> <span class="kr">volatile</span><span class="o">-</span><span class="nx">random</span> <span class="o">-&gt;</span> <span class="nx">remove</span> <span class="nx">a</span> <span class="nx">random</span> <span class="nx">key</span> <span class="kd">with</span> <span class="nx">an</span> <span class="nx">expire</span> <span class="nx">set</span>
</span><span class='line'><span class="err">#</span> <span class="nx">allkeys</span><span class="o">-</span><span class="nx">random</span> <span class="o">-&gt;</span> <span class="nx">remove</span> <span class="nx">a</span> <span class="nx">random</span> <span class="nx">key</span><span class="p">,</span> <span class="nx">any</span> <span class="nx">key</span>
</span><span class='line'><span class="err">#</span> <span class="kr">volatile</span><span class="o">-</span><span class="nx">ttl</span> <span class="o">-&gt;</span> <span class="nx">remove</span> <span class="nx">the</span> <span class="nx">key</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">nearest</span> <span class="nx">expire</span> <span class="nx">time</span> <span class="p">(</span><span class="nx">minor</span> <span class="nx">TTL</span><span class="p">)</span>
</span><span class='line'><span class="err">#</span> <span class="nx">noeviction</span> <span class="o">-&gt;</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">expire</span> <span class="nx">at</span> <span class="nx">all</span><span class="p">,</span> <span class="nx">just</span> <span class="k">return</span> <span class="nx">an</span> <span class="nx">error</span> <span class="nx">on</span> <span class="nx">write</span> <span class="nx">operations</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Note</span><span class="o">:</span> <span class="kd">with</span> <span class="nx">any</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">above</span> <span class="nx">policies</span><span class="p">,</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="k">return</span> <span class="nx">an</span> <span class="nx">error</span> <span class="nx">on</span> <span class="nx">write</span>
</span><span class='line'><span class="err">#</span>       <span class="nx">operations</span><span class="p">,</span> <span class="nx">when</span> <span class="nx">there</span> <span class="nx">are</span> <span class="nx">not</span> <span class="nx">suitable</span> <span class="nx">keys</span> <span class="k">for</span> <span class="nx">eviction</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>       <span class="nx">At</span> <span class="nx">the</span> <span class="nx">date</span> <span class="nx">of</span> <span class="nx">writing</span> <span class="k">this</span> <span class="nx">commands</span> <span class="nx">are</span><span class="o">:</span> <span class="nx">set</span> <span class="nx">setnx</span> <span class="nx">setex</span> <span class="nx">append</span>
</span><span class='line'><span class="err">#</span>       <span class="nx">incr</span> <span class="nx">decr</span> <span class="nx">rpush</span> <span class="nx">lpush</span> <span class="nx">rpushx</span> <span class="nx">lpushx</span> <span class="nx">linsert</span> <span class="nx">lset</span> <span class="nx">rpoplpush</span> <span class="nx">sadd</span>
</span><span class='line'><span class="err">#</span>       <span class="nx">sinter</span> <span class="nx">sinterstore</span> <span class="nx">sunion</span> <span class="nx">sunionstore</span> <span class="nx">sdiff</span> <span class="nx">sdiffstore</span> <span class="nx">zadd</span> <span class="nx">zincrby</span>
</span><span class='line'><span class="err">#</span>       <span class="nx">zunionstore</span> <span class="nx">zinterstore</span> <span class="nx">hset</span> <span class="nx">hsetnx</span> <span class="nx">hmset</span> <span class="nx">hincrby</span> <span class="nx">incrby</span> <span class="nx">decrby</span>
</span><span class='line'><span class="err">#</span>       <span class="nx">getset</span> <span class="nx">mset</span> <span class="nx">msetnx</span> <span class="nx">exec</span> <span class="nx">sort</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="k">default</span> <span class="nx">is</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">maxmemory</span><span class="o">-</span><span class="nx">policy</span> <span class="kr">volatile</span><span class="o">-</span><span class="nx">lru</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>volatile-lru</code>: LRUアルゴリズムに基づき、期限切れ<code>key</code>を削除</li>
<li><code>allkeys-lru</code>: LRUアルゴリズムに基づき、期限に関係なく<code>key</code>を削除</li>
<li><code>volatile-random</code>: 期限切れ<code>key</code>をランダム削除</li>
<li><code>allkeys-random</code>: 全ての<code>key</code>を対象にランダム削除</li>
<li><code>volatile-ttl</code>: 期限切れの中でも最も古い<code>key</code>から順に削除</li>
<li><code>noeviction</code>: <code>key</code>に期限切れが存在しないため、上限以上の書き込みに対してはエラーを返却する</li>
</ul>


<p>LRUアルゴリズムについては<a href="https://ja.wikipedia.org/wiki/Least_Recently_Used">Least Recently Used &ndash; Wikipedia</a>を読みましょう。</p>

<h5>近似LRUアルゴリズムの精緻設定</h5>

<p>先程LRUアルゴリズムを利用する設定があることに触れましたが、Redisではメモリ消費を抑えるために正確なLRUアルゴリズムを採用してはいません。<br/>
代替手段で近似的LRUアルゴリズムを実現しているのですが、その精緻をサンプラーの数を設定することで自由度高く決めることができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">LRU</span> <span class="nx">and</span> <span class="nx">minimal</span> <span class="nx">TTL</span> <span class="nx">algorithms</span> <span class="nx">are</span> <span class="nx">not</span> <span class="nx">precise</span> <span class="nx">algorithms</span> <span class="nx">but</span> <span class="nx">approximated</span>
</span><span class='line'><span class="err">#</span> <span class="nx">algorithms</span> <span class="p">(</span><span class="k">in</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">save</span> <span class="nx">memory</span><span class="p">),</span> <span class="nx">so</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">select</span> <span class="nx">as</span> <span class="nx">well</span> <span class="nx">the</span> <span class="nx">sample</span>
</span><span class='line'><span class="err">#</span> <span class="nx">size</span> <span class="nx">to</span> <span class="nx">check</span><span class="p">.</span> <span class="nx">For</span> <span class="nx">instance</span> <span class="k">for</span> <span class="k">default</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">check</span> <span class="nx">three</span> <span class="nx">keys</span> <span class="nx">and</span>
</span><span class='line'><span class="err">#</span> <span class="nx">pick</span> <span class="nx">the</span> <span class="nx">one</span> <span class="nx">that</span> <span class="nx">was</span> <span class="nx">used</span> <span class="nx">less</span> <span class="nx">recently</span><span class="p">,</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">change</span> <span class="nx">the</span> <span class="nx">sample</span> <span class="nx">size</span>
</span><span class='line'><span class="err">#</span> <span class="nx">using</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">configuration</span> <span class="nx">directive</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">maxmemory</span><span class="o">-</span><span class="nx">samples</span> <span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<h4>AOFに関する設定</h4>

<p>AOFとは<code>Append Only File</code>の略語で追記専用ファイルを利用することによるデータ永続化を目指す設定です。</p>

<h5>AOFの利用設定</h5>

<p>AOFの利用可否を設定します。もちろん<code>yes</code>にすればAOFが利用できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">Redis</span> <span class="nx">asynchronously</span> <span class="nx">dumps</span> <span class="nx">the</span> <span class="nx">dataset</span> <span class="nx">on</span> <span class="nx">disk</span><span class="p">.</span> <span class="nx">This</span> <span class="nx">mode</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">good</span> <span class="nx">enough</span> <span class="k">in</span> <span class="nx">many</span> <span class="nx">applications</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">an</span> <span class="nx">issue</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">Redis</span> <span class="nx">process</span> <span class="nx">or</span>
</span><span class='line'><span class="err">#</span> <span class="nx">a</span> <span class="nx">power</span> <span class="nx">outage</span> <span class="nx">may</span> <span class="nx">result</span> <span class="nx">into</span> <span class="nx">a</span> <span class="nx">few</span> <span class="nx">minutes</span> <span class="nx">of</span> <span class="nx">writes</span> <span class="nx">lost</span> <span class="p">(</span><span class="nx">depending</span> <span class="nx">on</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">configured</span> <span class="nx">save</span> <span class="nx">points</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">Append</span> <span class="nx">Only</span> <span class="nx">File</span> <span class="nx">is</span> <span class="nx">an</span> <span class="nx">alternative</span> <span class="nx">persistence</span> <span class="nx">mode</span> <span class="nx">that</span> <span class="nx">provides</span>
</span><span class='line'><span class="err">#</span> <span class="nx">much</span> <span class="nx">better</span> <span class="nx">durability</span><span class="p">.</span> <span class="nx">For</span> <span class="nx">instance</span> <span class="nx">using</span> <span class="nx">the</span> <span class="k">default</span> <span class="nx">data</span> <span class="nx">fsync</span> <span class="nx">policy</span>
</span><span class='line'><span class="err">#</span> <span class="p">(</span><span class="nx">see</span> <span class="nx">later</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">config</span> <span class="nx">file</span><span class="p">)</span> <span class="nx">Redis</span> <span class="nx">can</span> <span class="nx">lose</span> <span class="nx">just</span> <span class="nx">one</span> <span class="nx">second</span> <span class="nx">of</span> <span class="nx">writes</span> <span class="k">in</span> <span class="nx">a</span>
</span><span class='line'><span class="err">#</span> <span class="nx">dramatic</span> <span class="nx">event</span> <span class="nx">like</span> <span class="nx">a</span> <span class="nx">server</span> <span class="nx">power</span> <span class="nx">outage</span><span class="p">,</span> <span class="nx">or</span> <span class="nx">a</span> <span class="nx">single</span> <span class="nx">write</span> <span class="k">if</span> <span class="nx">something</span>
</span><span class='line'><span class="err">#</span> <span class="nx">wrong</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">Redis</span> <span class="nx">process</span> <span class="nx">itself</span> <span class="nx">happens</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">the</span> <span class="nx">operating</span> <span class="nx">system</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">still</span> <span class="nx">running</span> <span class="nx">correctly</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">AOF</span> <span class="nx">and</span> <span class="nx">RDB</span> <span class="nx">persistence</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">enabled</span> <span class="nx">at</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">time</span> <span class="nx">without</span> <span class="nx">problems</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">is</span> <span class="nx">enabled</span> <span class="nx">on</span> <span class="nx">startup</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">load</span> <span class="nx">the</span> <span class="nx">AOF</span><span class="p">,</span> <span class="nx">that</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">file</span>
</span><span class='line'><span class="err">#</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">better</span> <span class="nx">durability</span> <span class="nx">guarantees</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Please</span> <span class="nx">check</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//redis.io/topics/persistence for more information.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">appendonly</span> <span class="nx">no</span>
</span></code></pre></td></tr></table></div></figure>


<h5>AOFファイル名の設定</h5>

<p>ファイル名を設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">name</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">append</span> <span class="nx">only</span> <span class="nx">file</span> <span class="p">(</span><span class="k">default</span><span class="o">:</span> <span class="s2">&quot;appendonly.aof&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">appendfilename</span> <span class="s2">&quot;appendonly.aof&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>AOFへの同期タイミングの設定</h5>

<p>Redisには3つのモードが存在します。</p>

<ul>
<li><code>no</code>: <code>fsync</code>を利用せずOSに全てを任せます。高速です。</li>
<li><code>always</code>: 追記専用ログへの書き込み発生する際に必ず<code>fsync</code>を実行します。遅いですが安全です。</li>
<li><code>everysec</code>: 毎秒ごとに<code>fsync</code>を実行します。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">fsync</span><span class="p">()</span> <span class="nx">call</span> <span class="nx">tells</span> <span class="nx">the</span> <span class="nx">Operating</span> <span class="nx">System</span> <span class="nx">to</span> <span class="nx">actually</span> <span class="nx">write</span> <span class="nx">data</span> <span class="nx">on</span> <span class="nx">disk</span>
</span><span class='line'><span class="err">#</span> <span class="nx">instead</span> <span class="nx">to</span> <span class="nx">wait</span> <span class="k">for</span> <span class="nx">more</span> <span class="nx">data</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">output</span> <span class="nx">buffer</span><span class="p">.</span> <span class="nx">Some</span> <span class="nx">OS</span> <span class="nx">will</span> <span class="nx">really</span> <span class="nx">flush</span>
</span><span class='line'><span class="err">#</span> <span class="nx">data</span> <span class="nx">on</span> <span class="nx">disk</span><span class="p">,</span> <span class="nx">some</span> <span class="nx">other</span> <span class="nx">OS</span> <span class="nx">will</span> <span class="nx">just</span> <span class="k">try</span> <span class="nx">to</span> <span class="k">do</span> <span class="nx">it</span> <span class="nx">ASAP</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">supports</span> <span class="nx">three</span> <span class="nx">different</span> <span class="nx">modes</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">no</span><span class="o">:</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">fsync</span><span class="p">,</span> <span class="nx">just</span> <span class="kd">let</span> <span class="nx">the</span> <span class="nx">OS</span> <span class="nx">flush</span> <span class="nx">the</span> <span class="nx">data</span> <span class="nx">when</span> <span class="nx">it</span> <span class="nx">wants</span><span class="p">.</span> <span class="nx">Faster</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">always</span><span class="o">:</span> <span class="nx">fsync</span> <span class="nx">after</span> <span class="nx">every</span> <span class="nx">write</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">append</span> <span class="nx">only</span> <span class="nx">log</span> <span class="p">.</span> <span class="nx">Slow</span><span class="p">,</span> <span class="nx">Safest</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">everysec</span><span class="o">:</span> <span class="nx">fsync</span> <span class="nx">only</span> <span class="nx">one</span> <span class="nx">time</span> <span class="nx">every</span> <span class="nx">second</span><span class="p">.</span> <span class="nx">Compromise</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="k">default</span> <span class="nx">is</span> <span class="s2">&quot;everysec&quot;</span><span class="p">,</span> <span class="nx">as</span> <span class="nx">that</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">usually</span> <span class="nx">the</span> <span class="nx">right</span> <span class="nx">compromise</span> <span class="nx">between</span>
</span><span class='line'><span class="err">#</span> <span class="nx">speed</span> <span class="nx">and</span> <span class="nx">data</span> <span class="nx">safety</span><span class="p">.</span> <span class="nx">It</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">up</span> <span class="nx">to</span> <span class="nx">you</span> <span class="nx">to</span> <span class="nx">understand</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">relax</span> <span class="k">this</span> <span class="nx">to</span>
</span><span class='line'><span class="err">#</span> <span class="s2">&quot;no&quot;</span> <span class="nx">that</span> <span class="nx">will</span> <span class="kd">let</span> <span class="nx">the</span> <span class="nx">operating</span> <span class="nx">system</span> <span class="nx">flush</span> <span class="nx">the</span> <span class="nx">output</span> <span class="nx">buffer</span> <span class="nx">when</span>
</span><span class='line'><span class="err">#</span> <span class="nx">it</span> <span class="nx">wants</span><span class="p">,</span> <span class="k">for</span> <span class="nx">better</span> <span class="nx">performances</span> <span class="p">(</span><span class="nx">but</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">can</span> <span class="nx">live</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">idea</span> <span class="nx">of</span>
</span><span class='line'><span class="err">#</span> <span class="nx">some</span> <span class="nx">data</span> <span class="nx">loss</span> <span class="nx">consider</span> <span class="nx">the</span> <span class="k">default</span> <span class="nx">persistence</span> <span class="nx">mode</span> <span class="nx">that</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">snapshotting</span><span class="p">),</span>
</span><span class='line'><span class="err">#</span> <span class="nx">or</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">contrary</span><span class="p">,</span> <span class="nx">use</span> <span class="s2">&quot;always&quot;</span> <span class="nx">that</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">very</span> <span class="nx">slow</span> <span class="nx">but</span> <span class="nx">a</span> <span class="nx">bit</span> <span class="nx">safer</span> <span class="nx">than</span>
</span><span class='line'><span class="err">#</span> <span class="nx">everysec</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">More</span> <span class="nx">details</span> <span class="nx">please</span> <span class="nx">check</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">article</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//antirez.com/post/redis-persistence-demystified.html</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">unsure</span><span class="p">,</span> <span class="nx">use</span> <span class="s2">&quot;everysec&quot;</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">appendfsync</span> <span class="nx">always</span>
</span><span class='line'><span class="nx">appendfsync</span> <span class="nx">everysec</span>
</span><span class='line'><span class="err">#</span> <span class="nx">appendfsync</span> <span class="nx">no</span>
</span></code></pre></td></tr></table></div></figure>


<p>デフォルトは<code>everysec</code>が設定されています。</p>

<h5>ディスクI/O遅延に対する設定</h5>

<p><code>save</code>プロセスがディスクに対して大量のI/Oを発生させていた場合、<code>fsync</code>呼び出し時にRedisが長時間ブロックする可能性があります。<br/>
バックグラウンドプロセスで<code>save</code>が動いている場合は<code>fsync</code>を止めるように設定することで、この問題を回避することができます。<br/>
(<code>no-appendfsync-on-rewrite</code>は文字通りそういった意味ですね。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">When</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">fsync</span> <span class="nx">policy</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="nx">always</span> <span class="nx">or</span> <span class="nx">everysec</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">a</span> <span class="nx">background</span>
</span><span class='line'><span class="err">#</span> <span class="nx">saving</span> <span class="nx">process</span> <span class="p">(</span><span class="nx">a</span> <span class="nx">background</span> <span class="nx">save</span> <span class="nx">or</span> <span class="nx">AOF</span> <span class="nx">log</span> <span class="nx">background</span> <span class="nx">rewriting</span><span class="p">)</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">performing</span> <span class="nx">a</span> <span class="nx">lot</span> <span class="nx">of</span> <span class="nx">I</span><span class="o">/</span><span class="nx">O</span> <span class="nx">against</span> <span class="nx">the</span> <span class="nx">disk</span><span class="p">,</span> <span class="k">in</span> <span class="nx">some</span> <span class="nx">Linux</span> <span class="nx">configurations</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">may</span> <span class="nx">block</span> <span class="nx">too</span> <span class="kr">long</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">fsync</span><span class="p">()</span> <span class="nx">call</span><span class="p">.</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="nx">there</span> <span class="nx">is</span> <span class="nx">no</span> <span class="nx">fix</span> <span class="k">for</span>
</span><span class='line'><span class="err">#</span> <span class="k">this</span> <span class="nx">currently</span><span class="p">,</span> <span class="nx">as</span> <span class="nx">even</span> <span class="nx">performing</span> <span class="nx">fsync</span> <span class="k">in</span> <span class="nx">a</span> <span class="nx">different</span> <span class="nx">thread</span> <span class="nx">will</span> <span class="nx">block</span>
</span><span class='line'><span class="err">#</span> <span class="nx">our</span> <span class="nx">synchronous</span> <span class="nx">write</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="nx">call</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">In</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">mitigate</span> <span class="k">this</span> <span class="nx">problem</span> <span class="nx">it</span><span class="err">‘</span><span class="nx">s</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">use</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">option</span>
</span><span class='line'><span class="err">#</span> <span class="nx">that</span> <span class="nx">will</span> <span class="nx">prevent</span> <span class="nx">fsync</span><span class="p">()</span> <span class="nx">from</span> <span class="nx">being</span> <span class="nx">called</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">main</span> <span class="nx">process</span> <span class="k">while</span> <span class="nx">a</span>
</span><span class='line'><span class="err">#</span> <span class="nx">BGSAVE</span> <span class="nx">or</span> <span class="nx">BGREWRITEAOF</span> <span class="nx">is</span> <span class="k">in</span> <span class="nx">progress</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">means</span> <span class="nx">that</span> <span class="k">while</span> <span class="nx">another</span> <span class="nx">child</span> <span class="nx">is</span> <span class="nx">saving</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">durability</span> <span class="nx">of</span> <span class="nx">Redis</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">as</span> <span class="s2">&quot;appendfsync none&quot;</span><span class="p">.</span> <span class="nx">In</span> <span class="nx">practical</span> <span class="nx">terms</span><span class="p">,</span> <span class="k">this</span> <span class="nx">means</span> <span class="nx">that</span> <span class="nx">it</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">lose</span> <span class="nx">up</span> <span class="nx">to</span> <span class="mi">30</span> <span class="nx">seconds</span> <span class="nx">of</span> <span class="nx">log</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">worst</span> <span class="nx">scenario</span> <span class="p">(</span><span class="kd">with</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="k">default</span> <span class="nx">Linux</span> <span class="nx">settings</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">have</span> <span class="nx">latency</span> <span class="nx">problems</span> <span class="nx">turn</span> <span class="k">this</span> <span class="nx">to</span> <span class="s2">&quot;yes&quot;</span><span class="p">.</span> <span class="nx">Otherwise</span> <span class="nx">leave</span> <span class="nx">it</span> <span class="nx">as</span>
</span><span class='line'><span class="err">#</span> <span class="s2">&quot;no&quot;</span> <span class="nx">that</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">safest</span> <span class="nx">pick</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">point</span> <span class="nx">of</span> <span class="nx">view</span> <span class="nx">of</span> <span class="nx">durability</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">no</span><span class="o">-</span><span class="nx">appendfsync</span><span class="o">-</span><span class="nx">on</span><span class="o">-</span><span class="nx">rewrite</span> <span class="nx">no</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>yes</code>: バックグランドプロセスで<code>save</code>が動いていたら<code>fsync</code>しない</li>
<li><code>no</code>: 上記縛りを設定しない</li>
</ul>


<h5>AOFのログファイル自動書き換え設定</h5>

<p>AOFファイルサイズが肥大したときに対処するための基準を設定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Automatic</span> <span class="nx">rewrite</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">append</span> <span class="nx">only</span> <span class="nx">file</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">is</span> <span class="nx">able</span> <span class="nx">to</span> <span class="nx">automatically</span> <span class="nx">rewrite</span> <span class="nx">the</span> <span class="nx">log</span> <span class="nx">file</span> <span class="nx">implicitly</span> <span class="nx">calling</span>
</span><span class='line'><span class="err">#</span> <span class="nx">BGREWRITEAOF</span> <span class="nx">when</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">log</span> <span class="nx">size</span> <span class="nx">grows</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">percentage</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">is</span> <span class="nx">how</span> <span class="nx">it</span> <span class="nx">works</span><span class="o">:</span> <span class="nx">Redis</span> <span class="nx">remembers</span> <span class="nx">the</span> <span class="nx">size</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">file</span> <span class="nx">after</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">latest</span> <span class="nx">rewrite</span> <span class="p">(</span><span class="k">if</span> <span class="nx">no</span> <span class="nx">rewrite</span> <span class="nx">has</span> <span class="nx">happened</span> <span class="nx">since</span> <span class="nx">the</span> <span class="nx">restart</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">size</span> <span class="nx">of</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">at</span> <span class="nx">startup</span> <span class="nx">is</span> <span class="nx">used</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">base</span> <span class="nx">size</span> <span class="nx">is</span> <span class="nx">compared</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">current</span> <span class="nx">size</span><span class="p">.</span> <span class="nx">If</span> <span class="nx">the</span> <span class="nx">current</span> <span class="nx">size</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">bigger</span> <span class="nx">than</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">percentage</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">rewrite</span> <span class="nx">is</span> <span class="nx">triggered</span><span class="p">.</span> <span class="nx">Also</span>
</span><span class='line'><span class="err">#</span> <span class="nx">you</span> <span class="nx">need</span> <span class="nx">to</span> <span class="nx">specify</span> <span class="nx">a</span> <span class="nx">minimal</span> <span class="nx">size</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">file</span> <span class="nx">to</span> <span class="nx">be</span> <span class="nx">rewritten</span><span class="p">,</span> <span class="k">this</span>
</span><span class='line'><span class="err">#</span> <span class="nx">is</span> <span class="nx">useful</span> <span class="nx">to</span> <span class="nx">avoid</span> <span class="nx">rewriting</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">file</span> <span class="nx">even</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">percentage</span> <span class="nx">increase</span>
</span><span class='line'><span class="err">#</span> <span class="nx">is</span> <span class="nx">reached</span> <span class="nx">but</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">still</span> <span class="nx">pretty</span> <span class="nx">small</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Specify</span> <span class="nx">a</span> <span class="nx">percentage</span> <span class="nx">of</span> <span class="nx">zero</span> <span class="k">in</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">disable</span> <span class="nx">the</span> <span class="nx">automatic</span> <span class="nx">AOF</span>
</span><span class='line'><span class="err">#</span> <span class="nx">rewrite</span> <span class="nx">feature</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">auto</span><span class="o">-</span><span class="nx">aof</span><span class="o">-</span><span class="nx">rewrite</span><span class="o">-</span><span class="nx">percentage</span> <span class="mi">100</span>
</span><span class='line'><span class="nx">auto</span><span class="o">-</span><span class="nx">aof</span><span class="o">-</span><span class="nx">rewrite</span><span class="o">-</span><span class="nx">min</span><span class="o">-</span><span class="nx">size</span> <span class="mi">64</span><span class="nx">mb</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>auto-aof-rewrite-percentage</code>: 書き換えを発生させるファイルサイズの基準</li>
<li><code>auto-aof-rewrite-min-size</code>: ここで指定したファイルサイズ以内であれば書き換えを実行しません</li>
</ul>


<h4>LUAスクリプトに関する設定</h4>

<p>LUAスクリプトを実行する場合に必要な設定です。<br/>
と言っても最大実行時間しかありません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Max</span> <span class="nx">execution</span> <span class="nx">time</span> <span class="nx">of</span> <span class="nx">a</span> <span class="nx">Lua</span> <span class="nx">script</span> <span class="k">in</span> <span class="nx">milliseconds</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">the</span> <span class="nx">maximum</span> <span class="nx">execution</span> <span class="nx">time</span> <span class="nx">is</span> <span class="nx">reached</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">log</span> <span class="nx">that</span> <span class="nx">a</span> <span class="nx">script</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">still</span> <span class="k">in</span> <span class="nx">execution</span> <span class="nx">after</span> <span class="nx">the</span> <span class="nx">maximum</span> <span class="nx">allowed</span> <span class="nx">time</span> <span class="nx">and</span> <span class="nx">will</span> <span class="nx">start</span> <span class="nx">to</span>
</span><span class='line'><span class="err">#</span> <span class="nx">reply</span> <span class="nx">to</span> <span class="nx">queries</span> <span class="kd">with</span> <span class="nx">an</span> <span class="nx">error</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">When</span> <span class="nx">a</span> <span class="kr">long</span> <span class="nx">running</span> <span class="nx">script</span> <span class="nx">exceed</span> <span class="nx">the</span> <span class="nx">maximum</span> <span class="nx">execution</span> <span class="nx">time</span> <span class="nx">only</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">SCRIPT</span> <span class="nx">KILL</span> <span class="nx">and</span> <span class="nx">SHUTDOWN</span> <span class="nx">NOSAVE</span> <span class="nx">commands</span> <span class="nx">are</span> <span class="nx">available</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">first</span> <span class="nx">can</span> <span class="nx">be</span>
</span><span class='line'><span class="err">#</span> <span class="nx">used</span> <span class="nx">to</span> <span class="nx">stop</span> <span class="nx">a</span> <span class="nx">script</span> <span class="nx">that</span> <span class="nx">did</span> <span class="nx">not</span> <span class="nx">yet</span> <span class="nx">called</span> <span class="nx">write</span> <span class="nx">commands</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">second</span>
</span><span class='line'><span class="err">#</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">only</span> <span class="nx">way</span> <span class="nx">to</span> <span class="nx">shut</span> <span class="nx">down</span> <span class="nx">the</span> <span class="nx">server</span> <span class="k">in</span> <span class="nx">the</span> <span class="k">case</span> <span class="nx">a</span> <span class="nx">write</span> <span class="nx">commands</span> <span class="nx">was</span>
</span><span class='line'><span class="err">#</span> <span class="nx">already</span> <span class="nx">issue</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">script</span> <span class="nx">but</span> <span class="nx">the</span> <span class="nx">user</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">want</span> <span class="nx">to</span> <span class="nx">wait</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">natural</span>
</span><span class='line'><span class="err">#</span> <span class="nx">termination</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">script</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Set</span> <span class="nx">it</span> <span class="nx">to</span> <span class="mi">0</span> <span class="nx">or</span> <span class="nx">a</span> <span class="nx">negative</span> <span class="nx">value</span> <span class="k">for</span> <span class="nx">unlimited</span> <span class="nx">execution</span> <span class="nx">without</span> <span class="nx">warnings</span><span class="p">.</span>
</span><span class='line'><span class="nx">lua</span><span class="o">-</span><span class="nx">time</span><span class="o">-</span><span class="nx">limit</span> <span class="mi">5000</span>
</span></code></pre></td></tr></table></div></figure>


<h4>スローログの設定</h4>

<p>サービスレベルに耐えられないスロークエリを事前に検出するための設定です。<br/>
サービスレベル上、許容できないスロークエリの閾値を指定することで、その閾値を超えたクエリをログファイルに記録します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">Redis</span> <span class="nx">Slow</span> <span class="nx">Log</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">system</span> <span class="nx">to</span> <span class="nx">log</span> <span class="nx">queries</span> <span class="nx">that</span> <span class="nx">exceeded</span> <span class="nx">a</span> <span class="nx">specified</span>
</span><span class='line'><span class="err">#</span> <span class="nx">execution</span> <span class="nx">time</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">execution</span> <span class="nx">time</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">include</span> <span class="nx">the</span> <span class="nx">I</span><span class="o">/</span><span class="nx">O</span> <span class="nx">operations</span>
</span><span class='line'><span class="err">#</span> <span class="nx">like</span> <span class="nx">talking</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">client</span><span class="p">,</span> <span class="nx">sending</span> <span class="nx">the</span> <span class="nx">reply</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">forth</span><span class="p">,</span>
</span><span class='line'><span class="err">#</span> <span class="nx">but</span> <span class="nx">just</span> <span class="nx">the</span> <span class="nx">time</span> <span class="nx">needed</span> <span class="nx">to</span> <span class="nx">actually</span> <span class="nx">execute</span> <span class="nx">the</span> <span class="nx">command</span> <span class="p">(</span><span class="k">this</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">only</span>
</span><span class='line'><span class="err">#</span> <span class="nx">stage</span> <span class="nx">of</span> <span class="nx">command</span> <span class="nx">execution</span> <span class="nx">where</span> <span class="nx">the</span> <span class="nx">thread</span> <span class="nx">is</span> <span class="nx">blocked</span> <span class="nx">and</span> <span class="nx">can</span> <span class="nx">not</span> <span class="nx">serve</span>
</span><span class='line'><span class="err">#</span> <span class="nx">other</span> <span class="nx">requests</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">meantime</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">You</span> <span class="nx">can</span> <span class="nx">configure</span> <span class="nx">the</span> <span class="nx">slow</span> <span class="nx">log</span> <span class="kd">with</span> <span class="nx">two</span> <span class="nx">parameters</span><span class="o">:</span> <span class="nx">one</span> <span class="nx">tells</span> <span class="nx">Redis</span>
</span><span class='line'><span class="err">#</span> <span class="nx">what</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">execution</span> <span class="nx">time</span><span class="p">,</span> <span class="k">in</span> <span class="nx">microseconds</span><span class="p">,</span> <span class="nx">to</span> <span class="nx">exceed</span> <span class="k">in</span> <span class="nx">order</span> <span class="k">for</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">command</span> <span class="nx">to</span> <span class="nx">get</span> <span class="nx">logged</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">other</span> <span class="nx">parameter</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">length</span> <span class="nx">of</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">slow</span> <span class="nx">log</span><span class="p">.</span> <span class="nx">When</span> <span class="nx">a</span> <span class="k">new</span> <span class="nx">command</span> <span class="nx">is</span> <span class="nx">logged</span> <span class="nx">the</span> <span class="nx">oldest</span> <span class="nx">one</span> <span class="nx">is</span> <span class="nx">removed</span> <span class="nx">from</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">queue</span> <span class="nx">of</span> <span class="nx">logged</span> <span class="nx">commands</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">following</span> <span class="nx">time</span> <span class="nx">is</span> <span class="nx">expressed</span> <span class="k">in</span> <span class="nx">microseconds</span><span class="p">,</span> <span class="nx">so</span> <span class="mi">1000000</span> <span class="nx">is</span> <span class="nx">equivalent</span>
</span><span class='line'><span class="err">#</span> <span class="nx">to</span> <span class="nx">one</span> <span class="nx">second</span><span class="p">.</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="nx">a</span> <span class="nx">negative</span> <span class="nx">number</span> <span class="nx">disables</span> <span class="nx">the</span> <span class="nx">slow</span> <span class="nx">log</span><span class="p">,</span> <span class="k">while</span>
</span><span class='line'><span class="err">#</span> <span class="nx">a</span> <span class="nx">value</span> <span class="nx">of</span> <span class="nx">zero</span> <span class="nx">forces</span> <span class="nx">the</span> <span class="nx">logging</span> <span class="nx">of</span> <span class="nx">every</span> <span class="nx">command</span><span class="p">.</span>
</span><span class='line'><span class="nx">slowlog</span><span class="o">-</span><span class="nx">log</span><span class="o">-</span><span class="nx">slower</span><span class="o">-</span><span class="nx">than</span> <span class="mi">10000</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">There</span> <span class="nx">is</span> <span class="nx">no</span> <span class="nx">limit</span> <span class="nx">to</span> <span class="k">this</span> <span class="nx">length</span><span class="p">.</span> <span class="nx">Just</span> <span class="nx">be</span> <span class="nx">aware</span> <span class="nx">that</span> <span class="nx">it</span> <span class="nx">will</span> <span class="nx">consume</span> <span class="nx">memory</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">You</span> <span class="nx">can</span> <span class="nx">reclaim</span> <span class="nx">memory</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">slow</span> <span class="nx">log</span> <span class="kd">with</span> <span class="nx">SLOWLOG</span> <span class="nx">RESET</span><span class="p">.</span>
</span><span class='line'><span class="nx">slowlog</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">len</span> <span class="mi">128</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>slowlog-log-slower-than</code>: スロークエリとみなす実行時間の閾値。マイクロ秒です。</li>
<li><code>slowlog-max-len</code>: スロークエリログとして記録する容量の閾値。超えると古い順に削除します。</li>
</ul>


<h4>イベント通知設定</h4>

<p>Pub/Sub利用時に設定するようです。<br/>
Redisが通知するイベントは幾つかあるのですが、全て1文字で表現されており、<code>notify-keyspace-events</code>に指定することで通知イベントを決定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">can</span> <span class="nx">notify</span> <span class="nx">Pub</span><span class="o">/</span><span class="nx">Sub</span> <span class="nx">clients</span> <span class="nx">about</span> <span class="nx">events</span> <span class="nx">happening</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">key</span> <span class="nx">space</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">This</span> <span class="nx">feature</span> <span class="nx">is</span> <span class="nx">documented</span> <span class="nx">at</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//redis.io/topics/keyspace-events</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">For</span> <span class="nx">instance</span> <span class="k">if</span> <span class="nx">keyspace</span> <span class="nx">events</span> <span class="nx">notification</span> <span class="nx">is</span> <span class="nx">enabled</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">a</span> <span class="nx">client</span>
</span><span class='line'><span class="err">#</span> <span class="nx">performs</span> <span class="nx">a</span> <span class="nx">DEL</span> <span class="nx">operation</span> <span class="nx">on</span> <span class="nx">key</span> <span class="s2">&quot;foo&quot;</span> <span class="nx">stored</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">Database</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">two</span>
</span><span class='line'><span class="err">#</span> <span class="nx">messages</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">published</span> <span class="nx">via</span> <span class="nx">Pub</span><span class="o">/</span><span class="nx">Sub</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">PUBLISH</span> <span class="nx">__keyspace</span><span class="err">@</span><span class="mi">0</span><span class="nx">__</span><span class="o">:</span><span class="nx">foo</span> <span class="nx">del</span>
</span><span class='line'><span class="err">#</span> <span class="nx">PUBLISH</span> <span class="nx">__keyevent</span><span class="err">@</span><span class="mi">0</span><span class="nx">__</span><span class="o">:</span><span class="nx">del</span> <span class="nx">foo</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">select</span> <span class="nx">the</span> <span class="nx">events</span> <span class="nx">that</span> <span class="nx">Redis</span> <span class="nx">will</span> <span class="nx">notify</span> <span class="nx">among</span> <span class="nx">a</span> <span class="nx">set</span>
</span><span class='line'><span class="err">#</span> <span class="nx">of</span> <span class="nx">classes</span><span class="p">.</span> <span class="nx">Every</span> <span class="kr">class</span> <span class="nx">is</span> <span class="nx">identified</span> <span class="nx">by</span> <span class="nx">a</span> <span class="nx">single</span> <span class="nx">character</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">K</span>     <span class="nx">Keyspace</span> <span class="nx">events</span><span class="p">,</span> <span class="nx">published</span> <span class="kd">with</span> <span class="nx">__keyspace</span><span class="err">@</span><span class="o">&lt;</span><span class="nx">db</span><span class="o">&gt;</span><span class="nx">__</span> <span class="nx">prefix</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">E</span>     <span class="nx">Keyevent</span> <span class="nx">events</span><span class="p">,</span> <span class="nx">published</span> <span class="kd">with</span> <span class="nx">__keyevent</span><span class="err">@</span><span class="o">&lt;</span><span class="nx">db</span><span class="o">&gt;</span><span class="nx">__</span> <span class="nx">prefix</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">g</span>     <span class="nx">Generic</span> <span class="nx">commands</span> <span class="p">(</span><span class="nx">non</span><span class="o">-</span><span class="nx">type</span> <span class="nx">specific</span><span class="p">)</span> <span class="nx">like</span> <span class="nx">DEL</span><span class="p">,</span> <span class="nx">EXPIRE</span><span class="p">,</span> <span class="nx">RENAME</span><span class="p">,</span> <span class="p">...</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">$</span>     <span class="nb">String</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">l</span>     <span class="nx">List</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">s</span>     <span class="nx">Set</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">h</span>     <span class="nx">Hash</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">z</span>     <span class="nx">Sorted</span> <span class="nx">set</span> <span class="nx">commands</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">x</span>     <span class="nx">Expired</span> <span class="nx">events</span> <span class="p">(</span><span class="nx">events</span> <span class="nx">generated</span> <span class="nx">every</span> <span class="nx">time</span> <span class="nx">a</span> <span class="nx">key</span> <span class="nx">expires</span><span class="p">)</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">e</span>     <span class="nx">Evicted</span> <span class="nx">events</span> <span class="p">(</span><span class="nx">events</span> <span class="nx">generated</span> <span class="nx">when</span> <span class="nx">a</span> <span class="nx">key</span> <span class="nx">is</span> <span class="nx">evicted</span> <span class="k">for</span> <span class="nx">maxmemory</span><span class="p">)</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">A</span>     <span class="nx">Alias</span> <span class="k">for</span> <span class="nx">g$lshzxe</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">that</span> <span class="nx">the</span> <span class="s2">&quot;AKE&quot;</span> <span class="nx">string</span> <span class="nx">means</span> <span class="nx">all</span> <span class="nx">the</span> <span class="nx">events</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">The</span> <span class="s2">&quot;notify-keyspace-events&quot;</span> <span class="nx">takes</span> <span class="nx">as</span> <span class="nx">argument</span> <span class="nx">a</span> <span class="nx">string</span> <span class="nx">that</span> <span class="nx">is</span> <span class="nx">composed</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">by</span> <span class="nx">zero</span> <span class="nx">or</span> <span class="nx">multiple</span> <span class="nx">characters</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">empty</span> <span class="nx">string</span> <span class="nx">means</span> <span class="nx">that</span> <span class="nx">notifications</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">are</span> <span class="nx">disabled</span> <span class="nx">at</span> <span class="nx">all</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">Example</span><span class="o">:</span> <span class="nx">to</span> <span class="nx">enable</span> <span class="nx">list</span> <span class="nx">and</span> <span class="nx">generic</span> <span class="nx">events</span><span class="p">,</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">point</span> <span class="nx">of</span> <span class="nx">view</span> <span class="nx">of</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span>           <span class="nx">event</span> <span class="nx">name</span><span class="p">,</span> <span class="nx">use</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">notify</span><span class="o">-</span><span class="nx">keyspace</span><span class="o">-</span><span class="nx">events</span> <span class="nx">Elg</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">Example</span> <span class="mi">2</span><span class="o">:</span> <span class="nx">to</span> <span class="nx">get</span> <span class="nx">the</span> <span class="nx">stream</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">expired</span> <span class="nx">keys</span> <span class="nx">subscribing</span> <span class="nx">to</span> <span class="nx">channel</span>
</span><span class='line'><span class="err">#</span>             <span class="nx">name</span> <span class="nx">__keyevent</span><span class="err">@</span><span class="mi">0</span><span class="nx">__</span><span class="o">:</span><span class="nx">expired</span> <span class="nx">use</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">notify</span><span class="o">-</span><span class="nx">keyspace</span><span class="o">-</span><span class="nx">events</span> <span class="nx">Ex</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">By</span> <span class="k">default</span> <span class="nx">all</span> <span class="nx">notifications</span> <span class="nx">are</span> <span class="nx">disabled</span> <span class="nx">because</span> <span class="nx">most</span> <span class="nx">users</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">need</span>
</span><span class='line'><span class="err">#</span>  <span class="k">this</span> <span class="nx">feature</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">feature</span> <span class="nx">has</span> <span class="nx">some</span> <span class="nx">overhead</span><span class="p">.</span> <span class="nx">Note</span> <span class="nx">that</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span>
</span><span class='line'><span class="err">#</span>  <span class="nx">specify</span> <span class="nx">at</span> <span class="nx">least</span> <span class="nx">one</span> <span class="nx">of</span> <span class="nx">K</span> <span class="nx">or</span> <span class="nx">E</span><span class="p">,</span> <span class="nx">no</span> <span class="nx">events</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">delivered</span><span class="p">.</span>
</span><span class='line'><span class="nx">notify</span><span class="o">-</span><span class="nx">keyspace</span><span class="o">-</span><span class="nx">events</span> <span class="s2">&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>AKE</code>: これを設定することで全ての通知タイプに対応します。</li>
<li><code>空文字</code>: これを設定することで全ての通知を無効にします。</li>
</ul>


<h4>高度な設定</h4>

<p>この辺りが意識して触れるようになったらRedis上級者と見なせるのではないでしょうか。</p>

<h5>Hash型データのメモリ効率設定</h5>

<p>CPUとメモリのトレードオフにはなるのですが、「要素数の上限」と「1要素あたりの上限サイズ」の2つの閾値以内に収まる場合に、非常にメモリ効率の良い方法でエンコードされます。<br/>
これによりメモリが最大10分の1、平均でも5分の1に抑えられます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Hashes</span> <span class="nx">are</span> <span class="nx">encoded</span> <span class="nx">using</span> <span class="nx">a</span> <span class="nx">memory</span> <span class="nx">efficient</span> <span class="nx">data</span> <span class="nx">structure</span> <span class="nx">when</span> <span class="nx">they</span> <span class="nx">have</span> <span class="nx">a</span>
</span><span class='line'><span class="err">#</span> <span class="nx">small</span> <span class="nx">number</span> <span class="nx">of</span> <span class="nx">entries</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">biggest</span> <span class="nx">entry</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">exceed</span> <span class="nx">a</span> <span class="nx">given</span>
</span><span class='line'><span class="err">#</span> <span class="nx">threshold</span><span class="p">.</span> <span class="nx">These</span> <span class="nx">thresholds</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">configured</span> <span class="nx">using</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">directives</span><span class="p">.</span>
</span><span class='line'><span class="nx">hash</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">ziplist</span><span class="o">-</span><span class="nx">entries</span> <span class="mi">512</span>
</span><span class='line'><span class="nx">hash</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">ziplist</span><span class="o">-</span><span class="nx">value</span> <span class="mi">64</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>hash-max-ziplist-entries</code>: 要素数の上限</li>
<li><code>hash-max-ziplist-value</code>: 1要素あたりの上限サイズ</li>
</ul>


<h5>List型データのメモリ効率設定</h5>

<p>List型データに対する設定です。(各々の意味はHash型と同じです。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Similarly</span> <span class="nx">to</span> <span class="nx">hashes</span><span class="p">,</span> <span class="nx">small</span> <span class="nx">lists</span> <span class="nx">are</span> <span class="nx">also</span> <span class="nx">encoded</span> <span class="k">in</span> <span class="nx">a</span> <span class="nx">special</span> <span class="nx">way</span> <span class="k">in</span> <span class="nx">order</span>
</span><span class='line'><span class="err">#</span> <span class="nx">to</span> <span class="nx">save</span> <span class="nx">a</span> <span class="nx">lot</span> <span class="nx">of</span> <span class="nx">space</span><span class="p">.</span> <span class="nx">The</span> <span class="nx">special</span> <span class="nx">representation</span> <span class="nx">is</span> <span class="nx">only</span> <span class="nx">used</span> <span class="nx">when</span>
</span><span class='line'><span class="err">#</span> <span class="nx">you</span> <span class="nx">are</span> <span class="nx">under</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">limits</span><span class="o">:</span>
</span><span class='line'><span class="nx">list</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">ziplist</span><span class="o">-</span><span class="nx">entries</span> <span class="mi">512</span>
</span><span class='line'><span class="nx">list</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">ziplist</span><span class="o">-</span><span class="nx">value</span> <span class="mi">64</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Set型データのメモリ効率設定</h5>

<p>Set型データに対する設定です。<br/>
Set型のみ圧縮方式が<code>ziplist</code>ではなく<code>intset</code>であるためか設定項目数が異なります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Sets</span> <span class="nx">have</span> <span class="nx">a</span> <span class="nx">special</span> <span class="nx">encoding</span> <span class="k">in</span> <span class="nx">just</span> <span class="nx">one</span> <span class="k">case</span><span class="o">:</span> <span class="nx">when</span> <span class="nx">a</span> <span class="nx">set</span> <span class="nx">is</span> <span class="nx">composed</span>
</span><span class='line'><span class="err">#</span> <span class="nx">of</span> <span class="nx">just</span> <span class="nx">strings</span> <span class="nx">that</span> <span class="nx">happens</span> <span class="nx">to</span> <span class="nx">be</span> <span class="nx">integers</span> <span class="k">in</span> <span class="nx">radix</span> <span class="mi">10</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">range</span>
</span><span class='line'><span class="err">#</span> <span class="nx">of</span> <span class="mi">64</span> <span class="nx">bit</span> <span class="nx">signed</span> <span class="nx">integers</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">following</span> <span class="nx">configuration</span> <span class="nx">setting</span> <span class="nx">sets</span> <span class="nx">the</span> <span class="nx">limit</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">size</span> <span class="nx">of</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">set</span> <span class="k">in</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">use</span> <span class="k">this</span> <span class="nx">special</span> <span class="nx">memory</span> <span class="nx">saving</span> <span class="nx">encoding</span><span class="p">.</span>
</span><span class='line'><span class="nx">set</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">intset</span><span class="o">-</span><span class="nx">entries</span> <span class="mi">512</span>
</span></code></pre></td></tr></table></div></figure>


<h5>ZSet型データのメモリ効率設定</h5>

<p>ZSet型データに対する設定です。(各々の意味はHash型と同じです。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Similarly</span> <span class="nx">to</span> <span class="nx">hashes</span> <span class="nx">and</span> <span class="nx">lists</span><span class="p">,</span> <span class="nx">sorted</span> <span class="nx">sets</span> <span class="nx">are</span> <span class="nx">also</span> <span class="nx">specially</span> <span class="nx">encoded</span> <span class="k">in</span>
</span><span class='line'><span class="err">#</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">save</span> <span class="nx">a</span> <span class="nx">lot</span> <span class="nx">of</span> <span class="nx">space</span><span class="p">.</span> <span class="nx">This</span> <span class="nx">encoding</span> <span class="nx">is</span> <span class="nx">only</span> <span class="nx">used</span> <span class="nx">when</span> <span class="nx">the</span> <span class="nx">length</span> <span class="nx">and</span>
</span><span class='line'><span class="err">#</span> <span class="nx">elements</span> <span class="nx">of</span> <span class="nx">a</span> <span class="nx">sorted</span> <span class="nx">set</span> <span class="nx">are</span> <span class="nx">below</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">limits</span><span class="o">:</span>
</span><span class='line'><span class="nx">zset</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">ziplist</span><span class="o">-</span><span class="nx">entries</span> <span class="mi">128</span>
</span><span class='line'><span class="nx">zset</span><span class="o">-</span><span class="nx">max</span><span class="o">-</span><span class="nx">ziplist</span><span class="o">-</span><span class="nx">value</span> <span class="mi">64</span>
</span></code></pre></td></tr></table></div></figure>


<h5>再ハッシュ設定</h5>

<p>これは、『100ミリ秒ごとに1ミリ秒のCPU時間を使用して、Redisのメインのハッシュテーブル(トップレベルのキーと値を保持している)の再ハッシュ化を行う』設定です。<br/>
<code>yes</code>にすることでメモリが効率的に利用されるようになる一方で最大2ミリ秒間の遅延が発生する可能性があります。<br/>
この2ミリ秒間の遅延を許容できない場合は<code>no</code>に設定を変更しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Active</span> <span class="nx">rehashing</span> <span class="nx">uses</span> <span class="mi">1</span> <span class="nx">millisecond</span> <span class="nx">every</span> <span class="mi">100</span> <span class="nx">milliseconds</span> <span class="nx">of</span> <span class="nx">CPU</span> <span class="nx">time</span> <span class="k">in</span>
</span><span class='line'><span class="err">#</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">help</span> <span class="nx">rehashing</span> <span class="nx">the</span> <span class="nx">main</span> <span class="nx">Redis</span> <span class="nx">hash</span> <span class="nx">table</span> <span class="p">(</span><span class="nx">the</span> <span class="nx">one</span> <span class="nx">mapping</span> <span class="nx">top</span><span class="o">-</span><span class="nx">level</span>
</span><span class='line'><span class="err">#</span> <span class="nx">keys</span> <span class="nx">to</span> <span class="nx">values</span><span class="p">).</span> <span class="nx">The</span> <span class="nx">hash</span> <span class="nx">table</span> <span class="nx">implementation</span> <span class="nx">Redis</span> <span class="nx">uses</span> <span class="p">(</span><span class="nx">see</span> <span class="nx">dict</span><span class="p">.</span><span class="nx">c</span><span class="p">)</span>
</span><span class='line'><span class="err">#</span> <span class="nx">performs</span> <span class="nx">a</span> <span class="nx">lazy</span> <span class="nx">rehashing</span><span class="o">:</span> <span class="nx">the</span> <span class="nx">more</span> <span class="nx">operation</span> <span class="nx">you</span> <span class="nx">run</span> <span class="nx">into</span> <span class="nx">a</span> <span class="nx">hash</span> <span class="nx">table</span>
</span><span class='line'><span class="err">#</span> <span class="nx">that</span> <span class="nx">is</span> <span class="nx">rehashing</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">more</span> <span class="nx">rehashing</span> <span class="s2">&quot;steps&quot;</span> <span class="nx">are</span> <span class="nx">performed</span><span class="p">,</span> <span class="nx">so</span> <span class="k">if</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">server</span> <span class="nx">is</span> <span class="nx">idle</span> <span class="nx">the</span> <span class="nx">rehashing</span> <span class="nx">is</span> <span class="nx">never</span> <span class="nx">complete</span> <span class="nx">and</span> <span class="nx">some</span> <span class="nx">more</span> <span class="nx">memory</span> <span class="nx">is</span> <span class="nx">used</span>
</span><span class='line'><span class="err">#</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">hash</span> <span class="nx">table</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="k">default</span> <span class="nx">is</span> <span class="nx">to</span> <span class="nx">use</span> <span class="k">this</span> <span class="nx">millisecond</span> <span class="mi">10</span> <span class="nx">times</span> <span class="nx">every</span> <span class="nx">second</span> <span class="k">in</span> <span class="nx">order</span> <span class="nx">to</span>
</span><span class='line'><span class="err">#</span> <span class="nx">active</span> <span class="nx">rehashing</span> <span class="nx">the</span> <span class="nx">main</span> <span class="nx">dictionaries</span><span class="p">,</span> <span class="nx">freeing</span> <span class="nx">memory</span> <span class="nx">when</span> <span class="nx">possible</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">If</span> <span class="nx">unsure</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span> <span class="nx">use</span> <span class="s2">&quot;activerehashing no&quot;</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">have</span> <span class="nx">hard</span> <span class="nx">latency</span> <span class="nx">requirements</span> <span class="nx">and</span> <span class="nx">it</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="nx">not</span> <span class="nx">a</span> <span class="nx">good</span> <span class="nx">thing</span> <span class="k">in</span> <span class="nx">your</span> <span class="nx">environment</span> <span class="nx">that</span> <span class="nx">Redis</span> <span class="nx">can</span> <span class="nx">reply</span> <span class="nx">form</span> <span class="nx">time</span> <span class="nx">to</span> <span class="nx">time</span>
</span><span class='line'><span class="err">#</span> <span class="nx">to</span> <span class="nx">queries</span> <span class="kd">with</span> <span class="mi">2</span> <span class="nx">milliseconds</span> <span class="nx">delay</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">use</span> <span class="s2">&quot;activerehashing yes&quot;</span> <span class="k">if</span> <span class="nx">you</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">have</span> <span class="nx">such</span> <span class="nx">hard</span> <span class="nx">requirements</span> <span class="nx">but</span>
</span><span class='line'><span class="err">#</span> <span class="nx">want</span> <span class="nx">to</span> <span class="nx">free</span> <span class="nx">memory</span> <span class="nx">asap</span> <span class="nx">when</span> <span class="nx">possible</span><span class="p">.</span>
</span><span class='line'><span class="nx">activerehashing</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<p>2ミリ秒の遅延も許せないサービスってあるんだろうか&hellip;と思いつつも。</p>

<h5>クライアントの出力バッファ制限の設定</h5>

<p>指定した値以上に出力バッファが到達するとクライアントとの接続を強制的に切断します。<br/>
出力バッファが制限値に到達し続けるということは、想定した出力バッファサイズと処理速度を見誤っている可能性があるということです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">client</span> <span class="nx">output</span> <span class="nx">buffer</span> <span class="nx">limits</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">used</span> <span class="nx">to</span> <span class="nx">force</span> <span class="nx">disconnection</span> <span class="nx">of</span> <span class="nx">clients</span>
</span><span class='line'><span class="err">#</span> <span class="nx">that</span> <span class="nx">are</span> <span class="nx">not</span> <span class="nx">reading</span> <span class="nx">data</span> <span class="nx">from</span> <span class="nx">the</span> <span class="nx">server</span> <span class="nx">fast</span> <span class="nx">enough</span> <span class="k">for</span> <span class="nx">some</span> <span class="nx">reason</span> <span class="p">(</span><span class="nx">a</span>
</span><span class='line'><span class="err">#</span> <span class="nx">common</span> <span class="nx">reason</span> <span class="nx">is</span> <span class="nx">that</span> <span class="nx">a</span> <span class="nx">Pub</span><span class="o">/</span><span class="nx">Sub</span> <span class="nx">client</span> <span class="nx">can</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">consume</span> <span class="nx">messages</span> <span class="nx">as</span> <span class="nx">fast</span> <span class="nx">as</span> <span class="nx">the</span>
</span><span class='line'><span class="err">#</span> <span class="nx">publisher</span> <span class="nx">can</span> <span class="nx">produce</span> <span class="nx">them</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">limit</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">set</span> <span class="nx">differently</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">three</span> <span class="nx">different</span> <span class="nx">classes</span> <span class="nx">of</span> <span class="nx">clients</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">normal</span> <span class="o">-&gt;</span> <span class="nx">normal</span> <span class="nx">clients</span>
</span><span class='line'><span class="err">#</span> <span class="nx">slave</span>  <span class="o">-&gt;</span> <span class="nx">slave</span> <span class="nx">clients</span> <span class="nx">and</span> <span class="nx">MONITOR</span> <span class="nx">clients</span>
</span><span class='line'><span class="err">#</span> <span class="nx">pubsub</span> <span class="o">-&gt;</span> <span class="nx">clients</span> <span class="nx">subscribed</span> <span class="nx">to</span> <span class="nx">at</span> <span class="nx">least</span> <span class="nx">one</span> <span class="nx">pubsub</span> <span class="nx">channel</span> <span class="nx">or</span> <span class="nx">pattern</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">syntax</span> <span class="nx">of</span> <span class="nx">every</span> <span class="nx">client</span><span class="o">-</span><span class="nx">output</span><span class="o">-</span><span class="nx">buffer</span><span class="o">-</span><span class="nx">limit</span> <span class="nx">directive</span> <span class="nx">is</span> <span class="nx">the</span> <span class="nx">following</span><span class="o">:</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">client</span><span class="o">-</span><span class="nx">output</span><span class="o">-</span><span class="nx">buffer</span><span class="o">-</span><span class="nx">limit</span> <span class="o">&lt;</span><span class="kr">class</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="nx">hard</span> <span class="nx">limit</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="nx">soft</span> <span class="nx">limit</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="nx">soft</span> <span class="nx">seconds</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">A</span> <span class="nx">client</span> <span class="nx">is</span> <span class="nx">immediately</span> <span class="nx">disconnected</span> <span class="nx">once</span> <span class="nx">the</span> <span class="nx">hard</span> <span class="nx">limit</span> <span class="nx">is</span> <span class="nx">reached</span><span class="p">,</span> <span class="nx">or</span> <span class="k">if</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">soft</span> <span class="nx">limit</span> <span class="nx">is</span> <span class="nx">reached</span> <span class="nx">and</span> <span class="nx">remains</span> <span class="nx">reached</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">number</span> <span class="nx">of</span>
</span><span class='line'><span class="err">#</span> <span class="nx">seconds</span> <span class="p">(</span><span class="nx">continuously</span><span class="p">).</span>
</span><span class='line'><span class="err">#</span> <span class="nx">So</span> <span class="k">for</span> <span class="nx">instance</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">hard</span> <span class="nx">limit</span> <span class="nx">is</span> <span class="mi">32</span> <span class="nx">megabytes</span> <span class="nx">and</span> <span class="nx">the</span> <span class="nx">soft</span> <span class="nx">limit</span> <span class="nx">is</span>
</span><span class='line'><span class="err">#</span> <span class="mi">16</span> <span class="nx">megabytes</span> <span class="o">/</span> <span class="mi">10</span> <span class="nx">seconds</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">client</span> <span class="nx">will</span> <span class="nx">get</span> <span class="nx">disconnected</span> <span class="nx">immediately</span>
</span><span class='line'><span class="err">#</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">size</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">output</span> <span class="nx">buffers</span> <span class="nx">reach</span> <span class="mi">32</span> <span class="nx">megabytes</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">will</span> <span class="nx">also</span> <span class="nx">get</span>
</span><span class='line'><span class="err">#</span> <span class="nx">disconnected</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">client</span> <span class="nx">reaches</span> <span class="mi">16</span> <span class="nx">megabytes</span> <span class="nx">and</span> <span class="nx">continuously</span> <span class="nx">overcomes</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">limit</span> <span class="k">for</span> <span class="mi">10</span> <span class="nx">seconds</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="nx">normal</span> <span class="nx">clients</span> <span class="nx">are</span> <span class="nx">not</span> <span class="nx">limited</span> <span class="nx">because</span> <span class="nx">they</span> <span class="nx">don</span><span class="err">‘</span><span class="nx">t</span> <span class="nx">receive</span> <span class="nx">data</span>
</span><span class='line'><span class="err">#</span> <span class="nx">without</span> <span class="nx">asking</span> <span class="p">(</span><span class="k">in</span> <span class="nx">a</span> <span class="nx">push</span> <span class="nx">way</span><span class="p">),</span> <span class="nx">but</span> <span class="nx">just</span> <span class="nx">after</span> <span class="nx">a</span> <span class="nx">request</span><span class="p">,</span> <span class="nx">so</span> <span class="nx">only</span>
</span><span class='line'><span class="err">#</span> <span class="nx">asynchronous</span> <span class="nx">clients</span> <span class="nx">may</span> <span class="nx">create</span> <span class="nx">a</span> <span class="nx">scenario</span> <span class="nx">where</span> <span class="nx">data</span> <span class="nx">is</span> <span class="nx">requested</span> <span class="nx">faster</span>
</span><span class='line'><span class="err">#</span> <span class="nx">than</span> <span class="nx">it</span> <span class="nx">can</span> <span class="nx">read</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Instead</span> <span class="nx">there</span> <span class="nx">is</span> <span class="nx">a</span> <span class="k">default</span> <span class="nx">limit</span> <span class="k">for</span> <span class="nx">pubsub</span> <span class="nx">and</span> <span class="nx">slave</span> <span class="nx">clients</span><span class="p">,</span> <span class="nx">since</span>
</span><span class='line'><span class="err">#</span> <span class="nx">subscribers</span> <span class="nx">and</span> <span class="nx">slaves</span> <span class="nx">receive</span> <span class="nx">data</span> <span class="k">in</span> <span class="nx">a</span> <span class="nx">push</span> <span class="nx">fashion</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Both</span> <span class="nx">the</span> <span class="nx">hard</span> <span class="nx">or</span> <span class="nx">the</span> <span class="nx">soft</span> <span class="nx">limit</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">disabled</span> <span class="nx">by</span> <span class="nx">setting</span> <span class="nx">them</span> <span class="nx">to</span> <span class="nx">zero</span><span class="p">.</span>
</span><span class='line'><span class="nx">client</span><span class="o">-</span><span class="nx">output</span><span class="o">-</span><span class="nx">buffer</span><span class="o">-</span><span class="nx">limit</span> <span class="nx">normal</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">0</span>
</span><span class='line'><span class="nx">client</span><span class="o">-</span><span class="nx">output</span><span class="o">-</span><span class="nx">buffer</span><span class="o">-</span><span class="nx">limit</span> <span class="nx">slave</span> <span class="mi">256</span><span class="nx">mb</span> <span class="mi">64</span><span class="nx">mb</span> <span class="mi">60</span>
</span><span class='line'><span class="nx">client</span><span class="o">-</span><span class="nx">output</span><span class="o">-</span><span class="nx">buffer</span><span class="o">-</span><span class="nx">limit</span> <span class="nx">pubsub</span> <span class="mi">32</span><span class="nx">mb</span> <span class="mi">8</span><span class="nx">mb</span> <span class="mi">60</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>client-output-buffer-limit normal 0 0 0</code>

<ul>
<li>通常クライアントに対する設定</li>
<li>hard limit / soft limit を0設定して無効化している</li>
</ul>
</li>
<li><code>client-output-buffer-limit slave 256mb 64mb 60</code>

<ul>
<li>スレーブクライアントに対する設定</li>
<li>hard limitが256mbなので、256MBに到達した時点で即時切断します</li>
<li>soft limitが64mb, soft secondsが60なので、出力バッファが60秒間64MBに到達し続けた場合に切断します</li>
<li>ここはレプリケーション設定にも関わってくるため設定値は考えてつける必要があります</li>
</ul>
</li>
<li><code>client-output-buffer-limit pubsub 32mb 8mb 60</code>

<ul>
<li>Pub/Sub(購読)クライアントに対する設定</li>
<li>hard limitが32mbなので、32MBに到達した時点で即時切断します</li>
<li>soft limitが8mb, soft secondsが60なので、出力バッファが60秒間8MBに到達し続けた場合に切断します</li>
</ul>
</li>
</ul>


<h5>バックグラウンド処理の頻度に関する設定</h5>

<p>Redisはバックグランドタスクとして、タイムアウトしたクライアントとのコネクションの切断 / 期限切れキーの削除などを実施しています。<br/>
その頻度を<code>hz</code>の値によって決めています。<br/>
基本的に推奨値は<code>10</code>なので変更することは少ないと思われます。<br/>
低レイテンシを厳しく求められる環境でのみ<code>100</code>を設定しても良いでしょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">calls</span> <span class="nx">an</span> <span class="nx">internal</span> <span class="kd">function</span> <span class="nx">to</span> <span class="nx">perform</span> <span class="nx">many</span> <span class="nx">background</span> <span class="nx">tasks</span><span class="p">,</span> <span class="nx">like</span>
</span><span class='line'><span class="err">#</span> <span class="nx">closing</span> <span class="nx">connections</span> <span class="nx">of</span> <span class="nx">clients</span> <span class="k">in</span> <span class="nx">timeout</span><span class="p">,</span> <span class="nx">purging</span> <span class="nx">expired</span> <span class="nx">keys</span> <span class="nx">that</span> <span class="nx">are</span>
</span><span class='line'><span class="err">#</span> <span class="nx">never</span> <span class="nx">requested</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">so</span> <span class="nx">forth</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Not</span> <span class="nx">all</span> <span class="nx">tasks</span> <span class="nx">are</span> <span class="nx">performed</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">frequency</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">Redis</span> <span class="nx">checks</span> <span class="k">for</span>
</span><span class='line'><span class="err">#</span> <span class="nx">tasks</span> <span class="nx">to</span> <span class="nx">perform</span> <span class="nx">accordingly</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="s2">&quot;hz&quot;</span> <span class="nx">value</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">By</span> <span class="k">default</span> <span class="s2">&quot;hz&quot;</span> <span class="nx">is</span> <span class="nx">set</span> <span class="nx">to</span> <span class="mi">10</span><span class="p">.</span> <span class="nx">Raising</span> <span class="nx">the</span> <span class="nx">value</span> <span class="nx">will</span> <span class="nx">use</span> <span class="nx">more</span> <span class="nx">CPU</span> <span class="nx">when</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Redis</span> <span class="nx">is</span> <span class="nx">idle</span><span class="p">,</span> <span class="nx">but</span> <span class="nx">at</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">time</span> <span class="nx">will</span> <span class="nx">make</span> <span class="nx">Redis</span> <span class="nx">more</span> <span class="nx">responsive</span> <span class="nx">when</span>
</span><span class='line'><span class="err">#</span> <span class="nx">there</span> <span class="nx">are</span> <span class="nx">many</span> <span class="nx">keys</span> <span class="nx">expiring</span> <span class="nx">at</span> <span class="nx">the</span> <span class="nx">same</span> <span class="nx">time</span><span class="p">,</span> <span class="nx">and</span> <span class="nx">timeouts</span> <span class="nx">may</span> <span class="nx">be</span>
</span><span class='line'><span class="err">#</span> <span class="nx">handled</span> <span class="kd">with</span> <span class="nx">more</span> <span class="nx">precision</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="err">#</span> <span class="nx">The</span> <span class="nx">range</span> <span class="nx">is</span> <span class="nx">between</span> <span class="mi">1</span> <span class="nx">and</span> <span class="mi">500</span><span class="p">,</span> <span class="nx">however</span> <span class="nx">a</span> <span class="nx">value</span> <span class="nx">over</span> <span class="mi">100</span> <span class="nx">is</span> <span class="nx">usually</span> <span class="nx">not</span>
</span><span class='line'><span class="err">#</span> <span class="nx">a</span> <span class="nx">good</span> <span class="nx">idea</span><span class="p">.</span> <span class="nx">Most</span> <span class="nx">users</span> <span class="nx">should</span> <span class="nx">use</span> <span class="nx">the</span> <span class="k">default</span> <span class="nx">of</span> <span class="mi">10</span> <span class="nx">and</span> <span class="nx">raise</span> <span class="k">this</span> <span class="nx">up</span> <span class="nx">to</span>
</span><span class='line'><span class="err">#</span> <span class="mi">100</span> <span class="nx">only</span> <span class="k">in</span> <span class="nx">environments</span> <span class="nx">where</span> <span class="nx">very</span> <span class="nx">low</span> <span class="nx">latency</span> <span class="nx">is</span> <span class="nx">required</span><span class="p">.</span>
</span><span class='line'><span class="nx">hz</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<h5>AOF書き換え時のfsyncの設定</h5>

<p><code>yes</code>を設定することで、32MBごとにfsyncを実行するようになります。<br/>
これによりファイルをディスクに書き込む際に、大きな遅延スパイクが発生するのを避けることができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span> <span class="nx">When</span> <span class="nx">a</span> <span class="nx">child</span> <span class="nx">rewrites</span> <span class="nx">the</span> <span class="nx">AOF</span> <span class="nx">file</span><span class="p">,</span> <span class="k">if</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">option</span> <span class="nx">is</span> <span class="nx">enabled</span>
</span><span class='line'><span class="err">#</span> <span class="nx">the</span> <span class="nx">file</span> <span class="nx">will</span> <span class="nx">be</span> <span class="nx">fsync</span><span class="o">-</span><span class="nx">ed</span> <span class="nx">every</span> <span class="mi">32</span> <span class="nx">MB</span> <span class="nx">of</span> <span class="nx">data</span> <span class="nx">generated</span><span class="p">.</span> <span class="nx">This</span> <span class="nx">is</span> <span class="nx">useful</span>
</span><span class='line'><span class="err">#</span> <span class="k">in</span> <span class="nx">order</span> <span class="nx">to</span> <span class="nx">commit</span> <span class="nx">the</span> <span class="nx">file</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">disk</span> <span class="nx">more</span> <span class="nx">incrementally</span> <span class="nx">and</span> <span class="nx">avoid</span>
</span><span class='line'><span class="err">#</span> <span class="nx">big</span> <span class="nx">latency</span> <span class="nx">spikes</span><span class="p">.</span>
</span><span class='line'><span class="nx">aof</span><span class="o">-</span><span class="nx">rewrite</span><span class="o">-</span><span class="nx">incremental</span><span class="o">-</span><span class="nx">fsync</span> <span class="nx">yes</span>
</span></code></pre></td></tr></table></div></figure>


<h3>まとめ</h3>

<p>細かな設定の棚卸しをしてみたものの、かなりしんどかったです&hellip;<br/>
運用してみないと想像がつかない設定も多く、この辺りは本当に実務でしか経験を養えないのだと痛感しました。<br/>
しかし、各々の意味を理解しておくことは決して無駄ではないと思うので、勉強になったかなと思います。<br/>
と言ったところで本日はここまで。</p>

<h3>参考</h3>

<ul>
<li><a href="http://redis-documentasion-japanese.readthedocs.io/ja/latest/topics/replication.html">Redis Documentation レプリケーション</a></li>
<li><a href="http://redis-documentasion-japanese.readthedocs.io/ja/latest/topics/lru-cache.html">Redis Documentation LRUキャッシュ</a></li>
<li><a href="http://redis-documentasion-japanese.readthedocs.io/ja/latest/topics/notifications.html">Redis Documentation キー・スペース通知</a></li>
<li><a href="http://redis-documentasion-japanese.readthedocs.io/ja/latest/topics/memory-optimization.html">Redis Documentation メモリ最適化</a></li>
<li><a href="http://t-cyrill.hatenablog.jp/entry/2016/12/11/224604">真剣にRedisを使ってみようという気持ちになったのでRedisについて知っていることを書く</a></li>
<li><a href="http://qiita.com/eccyan/items/e8cc56948a00d6aad0aa">Redis のメモリが足りなくなった時にどうやってチューニングしたか</a></li>
<li><a href="http://mocobeta-backup.tumblr.com/post/84793291682/redis-set">Redisのメモリ使用量削減</a></li>
<li><a href="http://tech.guitarrapc.com/entry/2013/08/02/210858">EC2など 高負荷クラウド環境における Redis のチューニングについて</a></li>
<li><a href="http://redis.shibu.jp/admin/config.html">redis 2.0.3 documentation</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dockerコンテナ内のUbuntuでApache設定を試してみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2017/02/19/docker-for-mac-3/"/>
    <updated>2017-02-19T23:45:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2017/02/19/docker-for-mac-3</id>
    <content type="html"><![CDATA[<h3>はじめに</h3>

<p>前回の<a href="http://grandbig.github.io/blog/2017/02/19/docker-for-mac-2/">DockerにWebサーバーを立てよう！</a>に引き続きDocker内Apacheで遊んでみます。<br/>
前回はUbuntuへのApacheインストールから起動まで見てきました。<br/>
実際の現場でApacheを利用する際は様々な設定を施す必要があります。<br/>
本記事ではその一端を少しでも学ぼうということで書いていきます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h3>DocumentRootの設定</h3>

<p>Apacheでは設定ファイルで静的ファイルのルートパスを設定することができます。<br/>
デフォルトでは<code>/var/www/html</code>になっています。<br/>
これは、<code>/etc/apache2/sites-enabled/000-default.conf</code>で次のように定義されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">VirtualHost</span> <span class="o">*:</span><span class="mi">80</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">The</span> <span class="nx">ServerName</span> <span class="nx">directive</span> <span class="nx">sets</span> <span class="nx">the</span> <span class="nx">request</span> <span class="nx">scheme</span><span class="p">,</span> <span class="nx">hostname</span> <span class="nx">and</span> <span class="nx">port</span> <span class="nx">that</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">the</span> <span class="nx">server</span> <span class="nx">uses</span> <span class="nx">to</span> <span class="nx">identify</span> <span class="nx">itself</span><span class="p">.</span> <span class="nx">This</span> <span class="nx">is</span> <span class="nx">used</span> <span class="nx">when</span> <span class="nx">creating</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">redirection</span> <span class="nx">URLs</span><span class="p">.</span> <span class="nx">In</span> <span class="nx">the</span> <span class="nx">context</span> <span class="nx">of</span> <span class="nx">virtual</span> <span class="nx">hosts</span><span class="p">,</span> <span class="nx">the</span> <span class="nx">ServerName</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">specifies</span> <span class="nx">what</span> <span class="nx">hostname</span> <span class="nx">must</span> <span class="nx">appear</span> <span class="k">in</span> <span class="nx">the</span> <span class="nx">request</span><span class="err">’</span><span class="nx">s</span> <span class="nx">Host</span><span class="o">:</span> <span class="nx">header</span> <span class="nx">to</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">match</span> <span class="k">this</span> <span class="nx">virtual</span> <span class="nx">host</span><span class="p">.</span> <span class="nx">For</span> <span class="nx">the</span> <span class="k">default</span> <span class="nx">virtual</span> <span class="nx">host</span> <span class="p">(</span><span class="k">this</span> <span class="nx">file</span><span class="p">)</span> <span class="k">this</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">value</span> <span class="nx">is</span> <span class="nx">not</span> <span class="nx">decisive</span> <span class="nx">as</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">used</span> <span class="nx">as</span> <span class="nx">a</span> <span class="nx">last</span> <span class="nx">resort</span> <span class="nx">host</span> <span class="nx">regardless</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">However</span><span class="p">,</span> <span class="nx">you</span> <span class="nx">must</span> <span class="nx">set</span> <span class="nx">it</span> <span class="k">for</span> <span class="nx">any</span> <span class="nx">further</span> <span class="nx">virtual</span> <span class="nx">host</span> <span class="nx">explicitly</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span><span class="nx">ServerName</span> <span class="nx">www</span><span class="p">.</span><span class="nx">example</span><span class="p">.</span><span class="nx">com</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">ServerAdmin</span> <span class="nx">webmaster</span><span class="err">@</span><span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">DocumentRoot</span> <span class="o">/</span><span class="kd">var</span><span class="err">/www/html</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">Available</span> <span class="nx">loglevels</span><span class="o">:</span> <span class="nx">trace8</span><span class="p">,</span> <span class="p">...,</span> <span class="nx">trace1</span><span class="p">,</span> <span class="nx">debug</span><span class="p">,</span> <span class="nx">info</span><span class="p">,</span> <span class="nx">notice</span><span class="p">,</span> <span class="nx">warn</span><span class="p">,</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">error</span><span class="p">,</span> <span class="nx">crit</span><span class="p">,</span> <span class="nx">alert</span><span class="p">,</span> <span class="nx">emerg</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">It</span> <span class="nx">is</span> <span class="nx">also</span> <span class="nx">possible</span> <span class="nx">to</span> <span class="nx">configure</span> <span class="nx">the</span> <span class="nx">loglevel</span> <span class="k">for</span> <span class="nx">particular</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">modules</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span><span class="nx">LogLevel</span> <span class="nx">info</span> <span class="nx">ssl</span><span class="o">:</span><span class="nx">warn</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">ErrorLog</span> <span class="nx">$</span><span class="p">{</span><span class="nx">APACHE_LOG_DIR</span><span class="p">}</span><span class="o">/</span><span class="nx">error</span><span class="p">.</span><span class="nx">log</span>
</span><span class='line'>  <span class="nx">CustomLog</span> <span class="nx">$</span><span class="p">{</span><span class="nx">APACHE_LOG_DIR</span><span class="p">}</span><span class="o">/</span><span class="nx">access</span><span class="p">.</span><span class="nx">log</span> <span class="nx">combined</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">For</span> <span class="nx">most</span> <span class="nx">configuration</span> <span class="nx">files</span> <span class="nx">from</span> <span class="nx">conf</span><span class="o">-</span><span class="nx">available</span><span class="o">/</span><span class="p">,</span> <span class="nx">which</span> <span class="nx">are</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">enabled</span> <span class="nx">or</span> <span class="nx">disabled</span> <span class="nx">at</span> <span class="nx">a</span> <span class="nx">global</span> <span class="nx">level</span><span class="p">,</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">possible</span> <span class="nx">to</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">include</span> <span class="nx">a</span> <span class="nx">line</span> <span class="k">for</span> <span class="nx">only</span> <span class="nx">one</span> <span class="nx">particular</span> <span class="nx">virtual</span> <span class="nx">host</span><span class="p">.</span> <span class="nx">For</span> <span class="nx">example</span> <span class="nx">the</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">following</span> <span class="nx">line</span> <span class="nx">enables</span> <span class="nx">the</span> <span class="nx">CGI</span> <span class="nx">configuration</span> <span class="k">for</span> <span class="k">this</span> <span class="nx">host</span> <span class="nx">only</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">after</span> <span class="nx">it</span> <span class="nx">has</span> <span class="nx">been</span> <span class="nx">globally</span> <span class="nx">disabled</span> <span class="kd">with</span> <span class="s2">&quot;a2disconf&quot;</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span><span class="nx">Include</span> <span class="nx">conf</span><span class="o">-</span><span class="nx">available</span><span class="o">/</span><span class="nx">serve</span><span class="o">-</span><span class="nx">cgi</span><span class="o">-</span><span class="nx">bin</span><span class="p">.</span><span class="nx">conf</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/VirtualHost&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">vim</span><span class="o">:</span> <span class="nx">syntax</span><span class="o">=</span><span class="nx">apache</span> <span class="nx">ts</span><span class="o">=</span><span class="mi">4</span> <span class="nx">sw</span><span class="o">=</span><span class="mi">4</span> <span class="nx">sts</span><span class="o">=</span><span class="mi">4</span> <span class="nx">sr</span> <span class="nx">noet</span>
</span></code></pre></td></tr></table></div></figure>


<p>必要があれば書き換えて使いましょう。</p>

<h3>リバースプロキシ設定</h3>

<p>リバースプロキシとは、</p>

<ul>
<li>クライアントからのアクセスをキャッチして、特定のサーバへ送るプロキシサーバ</li>
<li>セキュリティや負荷分散などのために利用される</li>
</ul>


<p>ものです。<br/>
詳しくは<a href="https://ja.wikipedia.org/wiki/%E3%83%AA%E3%83%90%E3%83%BC%E3%82%B9%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7">リバースプロキシ &ndash; wiki</a>を見てください。</p>

<p>設定はいたって簡単です。<br/>
まずは、モジュールの有効化をするために下記コマンドを打ちましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// プロキシモジュールの有効化</span>
</span><span class='line'><span class="nx">$</span> <span class="nx">a2enmod</span> <span class="nx">proxy</span> <span class="nx">proxy_http</span>
</span><span class='line'><span class="nx">Enabling</span> <span class="nx">module</span> <span class="nx">proxy</span><span class="p">.</span>
</span><span class='line'><span class="nx">Considering</span> <span class="nx">dependency</span> <span class="nx">proxy</span> <span class="k">for</span> <span class="nx">proxy_http</span><span class="o">:</span>
</span><span class='line'><span class="nx">Module</span> <span class="nx">proxy</span> <span class="nx">already</span> <span class="nx">enabled</span>
</span><span class='line'><span class="nx">Enabling</span> <span class="nx">module</span> <span class="nx">proxy_http</span><span class="p">.</span>
</span><span class='line'><span class="nx">To</span> <span class="nx">activate</span> <span class="nx">the</span> <span class="k">new</span> <span class="nx">configuration</span><span class="p">,</span> <span class="nx">you</span> <span class="nx">need</span> <span class="nx">to</span> <span class="nx">run</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">service</span> <span class="nx">apache2</span> <span class="nx">restart</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apacheを再起動</span>
</span><span class='line'><span class="nx">$</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">init</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span><span class="nx">apache2</span> <span class="nx">restart</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、設定ファイルを更新します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">IfModule</span> <span class="nx">mod_proxy</span><span class="p">.</span><span class="nx">c</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">want</span> <span class="nx">to</span> <span class="nx">use</span> <span class="nx">apache2</span> <span class="nx">as</span> <span class="nx">a</span> <span class="nx">forward</span> <span class="nx">proxy</span><span class="p">,</span> <span class="nx">uncomment</span> <span class="nx">the</span>
</span><span class='line'>  <span class="err">#</span> <span class="s1">&#39;ProxyRequests On&#39;</span> <span class="nx">line</span> <span class="nx">and</span> <span class="nx">the</span> <span class="o">&lt;</span><span class="nx">Proxy</span> <span class="o">*&gt;</span> <span class="nx">block</span> <span class="nx">below</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">WARNING</span><span class="o">:</span> <span class="nx">Be</span> <span class="nx">careful</span> <span class="nx">to</span> <span class="nx">restrict</span> <span class="nx">access</span> <span class="nx">inside</span> <span class="nx">the</span> <span class="o">&lt;</span><span class="nx">Proxy</span> <span class="o">*&gt;</span> <span class="nx">block</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">Open</span> <span class="nx">proxy</span> <span class="nx">servers</span> <span class="nx">are</span> <span class="nx">dangerous</span> <span class="nx">both</span> <span class="nx">to</span> <span class="nx">your</span> <span class="nx">network</span> <span class="nx">and</span> <span class="nx">to</span> <span class="nx">the</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">Internet</span> <span class="nx">at</span> <span class="nx">large</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">If</span> <span class="nx">you</span> <span class="nx">only</span> <span class="nx">want</span> <span class="nx">to</span> <span class="nx">use</span> <span class="nx">apache2</span> <span class="nx">as</span> <span class="nx">a</span> <span class="nx">reverse</span> <span class="nx">proxy</span><span class="o">/</span><span class="nx">gateway</span> <span class="k">in</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">front</span> <span class="nx">of</span> <span class="nx">some</span> <span class="nx">web</span> <span class="nx">application</span> <span class="nx">server</span><span class="p">,</span> <span class="nx">you</span> <span class="nx">DON</span><span class="err">’</span><span class="nx">T</span> <span class="nx">need</span>
</span><span class='line'>  <span class="nx">ProxyRequests</span> <span class="nx">Off</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">Proxy</span> <span class="o">*&gt;</span>
</span><span class='line'>  <span class="err">#</span>   <span class="nx">AddDefaultCharset</span> <span class="nx">off</span>
</span><span class='line'>  <span class="err">#</span>   <span class="nx">Require</span> <span class="nx">all</span> <span class="nx">denied</span>
</span><span class='line'>  <span class="err">#</span>   <span class="err">#</span><span class="nx">Require</span> <span class="nx">local</span>
</span><span class='line'>    <span class="nx">Require</span> <span class="nx">all</span> <span class="nx">granted</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/Proxy&gt;</span>
</span><span class='line'>  <span class="nx">ProxyPass</span> <span class="o">/</span><span class="nx">hoge</span><span class="o">/</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//localhost:80/hoge.html</span>
</span><span class='line'>  <span class="nx">ProxyPassReverse</span> <span class="o">/</span><span class="nx">hoge</span><span class="o">/</span> <span class="nx">http</span><span class="o">:</span><span class="c1">//localhost:80/hoge.html</span>
</span><span class='line'>
</span><span class='line'>  <span class="err">#</span> <span class="nx">Enable</span><span class="o">/</span><span class="nx">disable</span> <span class="nx">the</span> <span class="nx">handling</span> <span class="nx">of</span> <span class="nx">HTTP</span><span class="o">/</span><span class="mf">1.1</span> <span class="s2">&quot;Via:&quot;</span> <span class="nx">headers</span><span class="p">.</span>
</span><span class='line'>  <span class="err">#</span> <span class="p">(</span><span class="s2">&quot;Full&quot;</span> <span class="nx">adds</span> <span class="nx">the</span> <span class="nx">server</span> <span class="nx">version</span><span class="p">;</span> <span class="s2">&quot;Block&quot;</span> <span class="nx">removes</span> <span class="nx">all</span> <span class="nx">outgoing</span> <span class="nx">Via</span><span class="o">:</span> <span class="nx">headers</span><span class="p">)</span>
</span><span class='line'>  <span class="err">#</span> <span class="nx">Set</span> <span class="nx">to</span> <span class="nx">one</span> <span class="nx">of</span><span class="o">:</span> <span class="nx">Off</span> <span class="o">|</span> <span class="nx">On</span> <span class="o">|</span> <span class="nx">Full</span> <span class="o">|</span> <span class="nx">Block</span>
</span><span class='line'>  <span class="err">#</span><span class="nx">ProxyVia</span> <span class="nx">Off</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/IfModule&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span> <span class="nx">vim</span><span class="o">:</span> <span class="nx">syntax</span><span class="o">=</span><span class="nx">apache</span> <span class="nx">ts</span><span class="o">=</span><span class="mi">4</span> <span class="nx">sw</span><span class="o">=</span><span class="mi">4</span> <span class="nx">sts</span><span class="o">=</span><span class="mi">4</span> <span class="nx">sr</span> <span class="nx">noet</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記の設定について説明します。</p>

<ul>
<li><code>ProxyRequests Off</code>: フォワードプロキシをOFFにする設定です</li>
<li><code>&lt;Proxy *&gt; 〜 &lt;/Proxy&gt;</code>: アクセスパスに対するアクセス権限範囲を設定します</li>
<li><code>ProxyPass 元のアクセス要求パス 転送パス</code>: クライアントからのアクセス要求を転送します</li>
<li><code>ProxyPassReverse 元のアクセス要求パス 転送パス</code>: Apache に HTTP リダイレクト応答の Location, Content-Location, URI ヘッダの調整を担います</li>
</ul>


<p>筆者自身、フォワードプロキシという単語を意識して使ったことがなかったのですが、ごくごく普通に使われているものなんですよね&hellip;<br/>
Apache公式ページの下記記述を見るとよくわかります。</p>

<blockquote><p>ファイアウォールによって 制限されている内部のクライアントにインターネットへのアクセスを 提供するもの</p></blockquote>

<p>どうも<code>ProxyPassReverse</code>は理解するのが厄介だったようで多くの方が記事にしてくれていました。</p>

<ul>
<li><a href="http://dev.classmethod.jp/server-side/server/introduction_mod_proxy/">mod_proxy再入門 – ProxyPassとProxyPassReverse</a></li>
<li><a href="http://d.hatena.ne.jp/a666666/20090211/1234348004">やっとわかった、リバースプロキシの設定の意味</a></li>
</ul>


<p>上記設定をしたので下記にアクセスしてみます。<br/>
<code>http://localhost:15600/hoge/</code><br/>
結果は下記の通りです。</p>

<p><img src="http://grandbig.github.io/images/docker_reverse_proxy.png" alt="リバースプロキシした画面を表示" /></p>

<p>このために用意した<code>hoge.html</code>が表示されました。</p>

<h3>RewriteRuleの設定</h3>

<p><code>Rewrite</code>はクライアントからのリクエストを内部変換してリダイレクトするような機能です。<br/>
今回は些か簡単な例を扱ったためリバースプロキシとの違いがわかりにくかったかもしれません。<br/>
あくまでも<code>Rewrite</code>はパスの読み替えであるため、物理的に別のサーバに接続を促すようなリバースプロキシならではの設定はできません。</p>

<p>まずはモジュールを有効化させます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span> <span class="nx">a2enmod</span> <span class="nx">rewrite</span>
</span><span class='line'><span class="nx">Enabling</span> <span class="nx">module</span> <span class="nx">rewrite</span><span class="p">.</span>
</span><span class='line'><span class="nx">To</span> <span class="nx">activate</span> <span class="nx">the</span> <span class="k">new</span> <span class="nx">configuration</span><span class="p">,</span> <span class="nx">you</span> <span class="nx">need</span> <span class="nx">to</span> <span class="nx">run</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">service</span> <span class="nx">apache2</span> <span class="nx">restart</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Apacheを再起動</span>
</span><span class='line'><span class="nx">$</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">init</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span><span class="nx">apache2</span> <span class="nx">restart</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、静的ファイルパスへのアクセス制限を変更します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// /etc/apache2/apache2.conf</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">Directory</span> <span class="o">/</span><span class="kd">var</span><span class="sr">/www/</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="nx">Options</span> <span class="nx">Indexes</span> <span class="nx">FollowSymLinks</span>
</span><span class='line'>  <span class="nx">AllowOverride</span> <span class="nx">All</span>
</span><span class='line'>  <span class="nx">Require</span> <span class="nx">all</span> <span class="nx">granted</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/Directory&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>デフォルトでは上記が<code>AllowOverride None</code>だったのを<code>AllowOverride All</code>に変更しています。<br/>
さらに、<code>.htaccess</code>ファイルを作成して書き換えルールを記載します。<br/>
<code>.htaccess</code>を利用する設定は<code>apache2.conf</code>にデフォルトで記載されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// /etc/apache2/apache2.conf</span>
</span><span class='line'><span class="err">#</span> <span class="nx">AccessFileName</span><span class="o">:</span> <span class="nx">The</span> <span class="nx">name</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">file</span> <span class="nx">to</span> <span class="nx">look</span> <span class="k">for</span> <span class="k">in</span> <span class="nx">each</span> <span class="nx">directory</span>
</span><span class='line'><span class="err">#</span> <span class="k">for</span> <span class="nx">additional</span> <span class="nx">configuration</span> <span class="nx">directives</span><span class="p">.</span>  <span class="nx">See</span> <span class="nx">also</span> <span class="nx">the</span> <span class="nx">AllowOverride</span>
</span><span class='line'><span class="err">#</span> <span class="nx">directive</span><span class="p">.</span>
</span><span class='line'><span class="err">#</span>
</span><span class='line'><span class="nx">AccessFileName</span> <span class="p">.</span><span class="nx">htaccess</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして実際の<code>RewriteRule</code>の記載です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// /var/www/html/.htaccess</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">IfModule</span> <span class="nx">mod_rewrite</span><span class="p">.</span><span class="nx">c</span><span class="o">&gt;</span>
</span><span class='line'><span class="nx">RewriteEngine</span> <span class="nx">On</span>
</span><span class='line'><span class="nx">RewriteRule</span> <span class="o">^</span><span class="nx">fuga</span><span class="o">/</span><span class="p">(.</span><span class="o">*</span><span class="p">)</span><span class="nx">$</span> <span class="o">/</span><span class="nx">bar</span><span class="o">/</span><span class="nx">$1</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/IfModule&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>サンプル用に、<code>/var/www/html</code>配下に<code>bar</code>フォルダを作成し、その配下に<code>index.html</code>を作成しました。<br/>
上記設定をしたので下記にアクセスしてみます。<br/>
<code>http://localhost:15600/fuga/</code><br/>
結果は下記の通りです。</p>

<p><img src="http://grandbig.github.io/images/docker_rewrite.png" alt="RewriteRule適用" /></p>

<h3>ErrorDocumentの設定</h3>

<p>エラー発生時にカスタムエラーページを表示したいときなどに利用します。<br/>
具体的には、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// /etc/apache2/site-enabled/000-default.conf</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">VirtualHost</span> <span class="o">*:</span><span class="mi">80</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="nx">ErrorLog</span> <span class="nx">$</span><span class="p">{</span><span class="nx">APACHE_LOG_DIR</span><span class="p">}</span><span class="o">/</span><span class="nx">error</span><span class="p">.</span><span class="nx">log</span>
</span><span class='line'>  <span class="nx">CustomLog</span> <span class="nx">$</span><span class="p">{</span><span class="nx">APACHE_LOG_DIR</span><span class="p">}</span><span class="o">/</span><span class="nx">access</span><span class="p">.</span><span class="nx">log</span> <span class="nx">combined</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 以下、ErrorDocumentの設定</span>
</span><span class='line'>  <span class="nx">ErrorDocument</span> <span class="mi">404</span> <span class="nx">error_404</span><span class="p">.</span><span class="nx">html</span>
</span><span class='line'>  <span class="nx">ErrorDocument</span> <span class="mi">500</span> <span class="nx">error_500</span><span class="p">.</span><span class="nx">html</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように設定が可能です。<br/>
Ubuntuの場合、<code>/etc/apache2/conf-enabled/localized-error-pages.conf</code>に<code>ErrorDocument</code>の構文が全てコメントアウトの状態で記載があるため、本格的にやるならきちんとファイルを分けた方が良さそうです。</p>

<h3>まとめ</h3>

<p>さて今回はApacheの設定を少し見ることができました。<br/>
WEBサーバとはどんなものなのか、わかったようでわかっていなかったことが見えてきた気がします。<br/>
引き続き勉強を続けていきたいものです。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
