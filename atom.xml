<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2016-02-29T23:55:01+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Swift2.0で追加された新機能を見てみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/29/swift-2-new-function/"/>
    <updated>2016-02-29T21:38:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/29/swift-2-new-function</id>
    <content type="html"><![CDATA[<h4>今更だけど見てみたいSwift2.0で追加された新機能</h4>

<p>さて、本日は表題通り、今更なんだけど&hellip;Swift2.0で追加された新機能について見ていきたいと思います。<br/>
Swift2.0では下記3つの新機能が追加されました。</p>

<ul>
<li><code>guard statement</code></li>
<li><code>do-catch</code>, <code>try</code>, <code>defer</code></li>
<li><code>Protocol Extension</code></li>
</ul>


<p>これらの使いどころやメリットなど見ていきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>guard statementについて</h4>

<p>まずは<code>guard statement</code>について見ていきます。</p>

<h5>用途について</h5>

<p>条件分岐(<code>if 〜 else 〜</code>)で利用します。<br/>
例えば、Open Weather Map APIでのリクエストでは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">GET</span><span class="p">,</span> <span class="s">&quot;http://api.openweathermap.org/data/2.5/weather?APPID=&lt;あなた自身のAPPID&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nl">parameters:</span><span class="p">[</span><span class="s">&quot;q&quot;</span><span class="o">:</span><span class="n">location</span><span class="p">]).</span><span class="n">responseJSON</span> <span class="p">{</span> <span class="p">(</span><span class="n">response</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">isSuccess</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">guard</span> <span class="n">let</span> <span class="n">value</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">value</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">// 値の取得に失敗した場合</span>
</span><span class='line'>              <span class="k">return</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">guard</span> <span class="n">let</span> <span class="nl">weatherArray:</span><span class="n">AnyObject</span><span class="o">?</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="s">&quot;weather&quot;</span><span class="p">]</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">// 値の取得に失敗した場合</span>
</span><span class='line'>              <span class="k">return</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">guard</span> <span class="n">let</span> <span class="n">weather</span> <span class="o">=</span> <span class="n">weatherArray</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">// 値の取得に失敗した場合</span>
</span><span class='line'>              <span class="k">return</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">guard</span> <span class="n">let</span> <span class="n">description</span> <span class="o">=</span> <span class="n">weather</span><span class="p">[</span><span class="s">&quot;description&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">// 値の取得に失敗した場合</span>
</span><span class='line'>              <span class="k">return</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">print</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように書くことができます。<br/>
以前であれば、下記のようにこれでもかってくらいネストしていたのですが、可読性が向上します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">GET</span><span class="p">,</span> <span class="s">&quot;http://api.openweathermap.org/data/2.5/weather?APPID=&lt;あなた自身のAPPID&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nl">parameters:</span><span class="p">[</span><span class="s">&quot;q&quot;</span><span class="o">:</span><span class="n">location</span><span class="p">]).</span><span class="n">responseJSON</span> <span class="p">{</span> <span class="p">(</span><span class="n">response</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">isSuccess</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">let</span> <span class="n">value</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">result</span><span class="p">.</span><span class="n">value</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="n">let</span> <span class="n">weatherArray</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="s">&quot;weather&quot;</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>                  <span class="k">if</span> <span class="n">let</span> <span class="n">weather</span> <span class="o">=</span> <span class="n">weatherArray</span><span class="o">?</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">{</span>
</span><span class='line'>                      <span class="k">if</span> <span class="n">let</span> <span class="n">description</span> <span class="o">=</span> <span class="n">weather</span><span class="p">[</span><span class="s">&quot;description&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">?</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>                          <span class="n">print</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
</span><span class='line'>                      <span class="p">}</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>do-catch, try, deferについて</h4>

<p>続いて、<code>do-catch</code>, <code>try</code>, <code>defer</code>について見ていきます。</p>

<h5>用途について</h5>

<p>基本的には、例外処理を実行したい場合に使います。<br/>
想定外の例外が発生した場合にアプリが落ちないようにしないことはもちろんのこと、<br/>
想定した例外処理が発生した場合にもそれ相応の処理を実施することがあるので、<br/>
そういったときに使います。</p>

<p>まずは、呼び出し元を書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// エラー種別の設定</span>
</span><span class='line'><span class="k">enum</span> <span class="nl">MyError:</span> <span class="n">ErrorType</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">NilError</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">StringError</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// サンプルメソッド</span>
</span><span class='line'><span class="n">func</span> <span class="n">sampleMethod</span><span class="p">(</span><span class="nl">param:</span> <span class="n">String</span><span class="o">?</span><span class="p">)</span> <span class="n">throws</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">defer</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;メソッドが呼ばれました！&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">param</span> <span class="o">==</span> <span class="nb">nil</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">throw</span> <span class="n">MyError</span><span class="p">.</span><span class="n">NilError</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="n">param</span> <span class="o">==</span> <span class="s">&quot;Error&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">throw</span> <span class="n">MyError</span><span class="p">.</span><span class="n">StringError</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">param</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>throw</code>で例外を投げる際にエラー種別を渡す必要があるため、エラー種別を設定します。<br/>
<code>defer</code>は例外発生の有無に関わらず、 <strong>必ず実行する処理内容</strong> を書きます。</p>

<p>続いて、呼び出し先を書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">do</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">result</span> <span class="o">=</span> <span class="n">try</span> <span class="n">self</span><span class="p">.</span><span class="n">sampleThrowMethod</span><span class="p">(</span><span class="s">&quot;Error&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span> <span class="n">catch</span> <span class="n">MyError</span><span class="p">.</span><span class="n">NilError</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="s">&quot;nilがパラメータとして渡されました&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span> <span class="n">catch</span> <span class="n">MyError</span><span class="p">.</span><span class="n">StringError</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="s">&quot;Error文字列がパラメータとして渡されました&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="s">&quot;想定外のErrorが発生しました&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>do-catch</code>は例外発生別にその後の処理を分けるために利用します。<br/>
<code>try!</code>で強制実行する場合は<code>do-catch</code>は不要ですが、<br/>
アプリがダウンしては元も子もないのでオススメしません。</p>

<h4>Protocol Extension</h4>

<p>最後に<code>Protocol Extension</code>です。</p>

<h5>用途について</h5>

<p>筆者のイメージではObjective-Cで言うところの <strong>カテゴリ</strong> の用途に近いのかなと思っています。<br/>
Objective-Cのカテゴリと異なるのは指定した既存クラスにメソッドを追加するのではなく、<br/>
<strong>プロトコル</strong> にメソッドを追加するので拡張性や柔軟性が高いようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// MyProtocol.swift</span>
</span><span class='line'><span class="n">protocol</span> <span class="n">MyProtocol</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">pico</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">extension</span> <span class="n">MyProtocol</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">pico</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;プロトコルメソッドを追加しました&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>定義したメソッドを下記のように呼び出せます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">MyProtocol</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">pico</span><span class="p">()</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>まとめ</h4>

<p>さて如何でしたでしょうか？<br/>
今更ですが、Swift2.0の新機能について見てきました。<br/>
個人的には<code>guard statement</code>はかなり利用したいなと思っています。<br/>
ネストが多発しがちなSwiftでは活躍の場面が目に浮かびます。<br/>
<code>do-catch</code>は待ち望んだ機能ですし、逆に今までなかったのが信じられないくらいですよね？<br/>
より安定したSwift製アプリを作成することができると想像するとワクワクしますね。</p>

<p>といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[『Swiftビギナーズ勉強会 第１３回』に参加してきました]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/20/swift-beginners-study-13/"/>
    <updated>2016-02-20T13:51:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/20/swift-beginners-study-13</id>
    <content type="html"><![CDATA[<h4>始めに</h4>

<p>本日は<a href="http://eventdots.jp/event/578498">Swiftビギナーズ勉強会 第１３回</a>に参加してきました。<br/>
筆者はiPhoneアプリ開発自体は4年近く前から関わっているものの<br/>
(初めはWebViewを使ったハイブリッドアプリから携わり、後にフルネイティブに&hellip;)、<br/>
多くはObjective-Cで書いてきたため、Swiftでのコーディング経験は長くありません。<br/>
そういった経緯や、iOS関連の勉強会を探していたこともあり、<br/>
良い機会だと思って参加することにしました。</p>

<p>今回の勉強会の概要はこちらの資料で説明頂きました。<br/>
<a href="http://www.slideshare.net/YoshinoriKoba/swiftswift">概要資料</a></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>ショートセッション</h4>

<ol>
<li><p>Swift × WordPress SwiftからWP REST APIを使ってWordPressの記事をリストする<br/>
<a href="http://www.slideshare.net/YoshinoriKoba/swift-wordpressswift-wp-rest-apiwordpressswift-160220">発表資料</a></p>

<ul>
<li>メモ

<ul>
<li>デバッグ方法に関するリンク<br/>
<a href="http://blogios.stack3.net/archives/776">Xcodeでのデバッグ方法</a></li>
<li>WP REST APIを使ったときにATSに関するエラーが発生した<br/>
HTTPSサーバを用意するのはハードルがあるので、plistの設定で対応した</li>
</ul>
</li>
<li>感想

<ul>
<li>個人的には<a href="https://github.com/SwiftyJSON/SwiftyJSON">SwiftyJson</a>を使ったことがなく、やっぱり使った方が良いのかなと</li>
<li>最近オープンに公開されているAPIがHTTPだと、ATSに引っかかるので、世の中のオープンなAPIが載っているサーバはHTTPSになっていくのかなと</li>
</ul>
</li>
</ul>
</li>
<li><p>mBaaSの基本的な扱い方の事始め</p>

<ul>
<li>参考URL

<ul>
<li><a href="http://qiita.com/fumiyasac@github/items/53d9d45d880b0e523417">ニフティクラウドmobile backendの事始めと導入手順まとめ</a></li>
<li><a href="http://qiita.com/fumiyasac@github/items/7549acb9610860de1733">ニフティクラウドmobile backendを利用した画像付きメモアプリ作成のポイントまとめ</a></li>
</ul>
</li>
<li>メモ

<ul>
<li>Coffre, 10秒虫食い算アプリ</li>
<li><a href="https://parse.com/">Parse</a>とNCMBの比較</li>
<li>Parseは <strong>2017/01/29(日本時間)</strong> でサービス終了するのでNCMBに乗り換えたい</li>
<li>ParseサーバのソースはGitHubに公開されている</li>
<li>Parseサーバのソースを見るとNode.js(Express)とMongoDBを利用している</li>
<li>Frameworkが提供されているので、Referenceに従ってアプリ側にソースを実装していけば、自分でREST API叩くだとかしなくて良い模様</li>
<li>FrameworkはObjective-C製なので、Bridge-Headerの作成が必要</li>
<li>NCMBはParseと大差なさそう</li>
<li>NCMBは日本語のコミュニティやフォーラムなどがあるので安心</li>
</ul>
</li>
<li>感想

<ul>
<li>いつも自分でNode.jsとMongoDBで構築しちゃうからmBaaS使ったことなかったな〜</li>
</ul>
</li>
</ul>
</li>
<li><p>iOS9で楽になったAutoLayout<br/>
<a href="https://speakerdeck.com/satotakeshi/shi-utukiyanai-ios9dele-ninatutaauto-layout">発表資料</a></p>

<ul>
<li>メモ

<ul>
<li>iOS6で誕生したAutoLayout</li>
<li>徐々に進化して&hellip;iOS9でStackView, NSLayoutAnchorsが出た</li>
<li>入れ子で複雑なレイアウトをStackViewで実現可能</li>
<li>これで等間隔にviewとか並べられるよ</li>
<li>iOS8まではspacingのviewを作成して、それぞれAutoLayoutをつけていた&hellip;</li>
<li>NSLayoutAnchorsが出たことでコードでも1行で制約を書ける(かなりソースコードが短縮される)</li>
<li>NSLayoutConstraintはたいへんだった</li>
<li>Visual Format Language → 複数の制約を一気につけれるが、不正な記法が判明するのが実行時&hellip;。記法が独特すぎる&hellip;</li>
</ul>
</li>
<li>感想

<ul>
<li>Dynamic Typeってあまり気にしたことなかった&hellip;</li>
</ul>
</li>
</ul>
</li>
<li><p>Linterを使って快適なチーム開発をしよう!<br/>
<a href="https://speakerdeck.com/akatsuki174/linterwoshi-tutekuai-shi-natimukai-fa-wosiyou">発表資料</a></p>

<ul>
<li>メモ

<ul>
<li>SwiftLintの話</li>
<li>『(』で引っかかる場合はautocorrect実行してやれば良い</li>
<li>バージョンアップの頻度が高い</li>
</ul>
</li>
<li>感想

<ul>
<li>先日、気になって取り組んだところだったので、復習になった</li>
</ul>
</li>
</ul>
</li>
</ol>


<h4>もくもく会</h4>

<p>ショートセッションの後にもくもく会の時間がありました。<br/>
あまりテーマを決めていなかったものの、1時間〜1時間30分程度の時間だったため、<br/>
あまり大きなことはやらずに基本的なところから見直してみることにしました。</p>

<p>そこで、Swift2.0から追加された新機能3つを試してみることにしました。</p>

<ul>
<li><code>do-catch</code>, <code>try</code>, <code>defer</code></li>
<li><code>guard</code></li>
<li><p><code>Protocol Extension</code></p></li>
<li><p>参考URL</p>

<ul>
<li><a href="https://moneyforward.com/engineers_blog/2015/06/17/swift2/">Swift2.0で追加された新機能 3選</a></li>
<li><a href="http://llcc.hatenablog.com/entry/2015/06/13/235129">Swift2.0で追加されたguard statementを試してみる</a></li>
</ul>
</li>
</ul>


<h4>まとめ</h4>

<p>今回、初めてSwiftビギナーズ勉強会に参加させて頂きましたが、<br/>
日本にはこんなにも幅広い年齢層、職種(専門プログラミングがSwift以外)の方々がSwiftに興味を示しているのだと改めて感じました。<br/>
Objective-Cであれば、基本的なところは抑えられていると思えるようになってきましたが、<br/>
Swiftに関してはまだまだ経験不足で学ぶべきところが多いと感じたのも事実です。<br/>
だからこそやり甲斐があり、モチベーションが上がるんですけどね。<br/>
といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SwiftでNSDateFormatterを使ってNSDateからStringに変換してみる！]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/19/swift-date/"/>
    <updated>2016-02-19T23:17:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/19/swift-date</id>
    <content type="html"><![CDATA[<h4>NSDateFormatterとは</h4>

<p>さて、本日は<code>NSDateFormatter</code>について見ていきます。<br/>
<code>NSDateFormatter</code>は</p>

<ul>
<li><code>NSDate</code>から<code>String</code>へ変換する際に指定するフォーマットオブジェクト</li>
<li><code>String</code>から<code>NSDate</code>へ変換する際に指定するフォーマットオブジェクト</li>
</ul>


<p>として使ったりします。<br/>
(他にも<code>NSCalendar</code>等々で利用します。)<br/>
基本的な変換は下記のようにできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="n">convertStringFromDate</span><span class="p">(</span><span class="nl">date:</span> <span class="n">NSDate</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">dateFormatter</span> <span class="o">=</span> <span class="n">NSDateFormatter</span><span class="p">()</span>
</span><span class='line'>  <span class="n">dateFormatter</span><span class="p">.</span><span class="n">dateFormat</span> <span class="o">=</span> <span class="s">&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">dateFormatter</span><span class="p">.</span><span class="n">stringFromDate</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、よく利用する各種設定について見ていきましょう。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>NSTimeZoneについて</h4>

<p><code>NSTimeZone</code>はグリニッジ標準時と各地域の標準時の時差情報を持ったクラスです。<br/>
このクラスを利用することで、欲しい時差情報を含んだ日付を取得できます。</p>

<p>例えば下記のような形です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="n">convertStringFromDate</span><span class="p">(</span><span class="nl">date:</span> <span class="n">NSDate</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">dateFormatter</span> <span class="o">=</span> <span class="n">NSDateFormatter</span><span class="p">()</span>
</span><span class='line'>  <span class="n">dateFormatter</span><span class="p">.</span><span class="n">timeZone</span> <span class="o">=</span> <span class="n">NSTimeZone</span><span class="p">.</span><span class="n">defaultTimeZone</span><span class="p">()</span>
</span><span class='line'>  <span class="n">dateFormatter</span><span class="p">.</span><span class="n">dateFormat</span> <span class="o">=</span> <span class="s">&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">dateFormatter</span><span class="p">.</span><span class="n">stringFromDate</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>NSTimeZone</code>には<code>systemTimeZone</code>, <code>defaultTimeZone</code>, <code>localTimeZone</code>, 直接地域を指定する方法があります。</p>

<ul>
<li><code>systemTimeZone</code>:<br/>
設定 > 一般 > 日付と時刻 で設定されている地域のタイムゾーンを返却する</li>
<li><code>defaultTimeZone</code>:<br/>
アプリで設定された地域のタイムゾーン<br/>
アプリで設定されていない場合は<code>systemTimeZone</code>を返却する</li>
<li><code>localTimeZone</code>:<br/>
<code>defaultTimeZone</code>への参照値を返却する</li>
<li>直接タイムゾーンを指定:<br/>
<code>GMT</code>, <code>UTC</code>, <code>ja_JP</code>, <code>en_US</code>などの地域を指定することで、指定地域のタイムゾーンを返却する</li>
</ul>


<p>仮に、それぞれのタイムゾーンの設定をして文字列を出力してみると、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="nl">systemTimeZone:</span> <span class="mi">2016</span><span class="o">-</span><span class="mo">02</span><span class="o">-</span><span class="mi">19</span> <span class="mi">23</span><span class="o">:</span><span class="mi">27</span><span class="o">:</span><span class="mf">37.550000</span>
</span><span class='line'><span class="nl">defaultTimeZone:</span> <span class="mi">2016</span><span class="o">-</span><span class="mo">02</span><span class="o">-</span><span class="mi">19</span> <span class="mi">23</span><span class="o">:</span><span class="mi">27</span><span class="o">:</span><span class="mf">37.550000</span>
</span><span class='line'><span class="nl">localTimeZone:</span> <span class="mi">2016</span><span class="o">-</span><span class="mo">02</span><span class="o">-</span><span class="mi">19</span> <span class="mi">23</span><span class="o">:</span><span class="mi">27</span><span class="o">:</span><span class="mf">37.550000</span>
</span><span class='line'><span class="nl">GMT:</span> <span class="mi">2016</span><span class="o">-</span><span class="mo">02</span><span class="o">-</span><span class="mi">19</span> <span class="mi">14</span><span class="o">:</span><span class="mi">27</span><span class="o">:</span><span class="mf">37.551000</span>
</span><span class='line'><span class="nl">UTC:</span> <span class="mi">2016</span><span class="o">-</span><span class="mo">02</span><span class="o">-</span><span class="mi">19</span> <span class="mi">14</span><span class="o">:</span><span class="mi">27</span><span class="o">:</span><span class="mf">37.551000</span>
</span><span class='line'><span class="nl">ja_JP:</span> <span class="mi">2016</span><span class="o">-</span><span class="mo">02</span><span class="o">-</span><span class="mi">19</span> <span class="mi">23</span><span class="o">:</span><span class="mi">27</span><span class="o">:</span><span class="mf">37.551000</span>
</span></code></pre></td></tr></table></div></figure>


<p>といった感じです。</p>

<h4>NSLocaleについて</h4>

<p><code>NSLocale</code>は言語や分化などの情報を持ったクラスです。<br/>
このクラスを利用することで、欲しい言語や分化の地域情報を含んだ日付を取得できます。</p>

<p>利用方法は下記のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="n">convertStringFromDate</span><span class="p">(</span><span class="nl">date:</span> <span class="n">NSDate</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="n">dateFormatter</span> <span class="o">=</span> <span class="n">NSDateFormatter</span><span class="p">()</span>
</span><span class='line'>  <span class="n">dateFormatter</span><span class="p">.</span><span class="n">locale</span> <span class="o">=</span> <span class="n">NSLocale</span><span class="p">.</span><span class="n">currentLocale</span><span class="p">()</span>
</span><span class='line'>  <span class="n">dateFormatter</span><span class="p">.</span><span class="n">dateFormat</span> <span class="o">=</span> <span class="s">&quot;yyyy-MM-dd HH:mm:ss.SSSSSS&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">dateFormatter</span><span class="p">.</span><span class="n">stringFromDate</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>systemLocale</code>:<br/>
設定 > 一般 > 日付と時刻 で設定されている地域の情報を返却する</li>
<li><code>currentLocale</code>:<br/>
現在のユーザで設定されている地域の情報を返却する<br/>
マルチユーザ環境下であれば、違いが出ると思います。</li>
</ul>


<p>地味に文字列変換って面倒だったりするんですよね&hellip;。<br/>
とは言え、アプリを世界対応させる場合は、<br/>
ユーザの設定している <strong>日付と時刻</strong> に注意を配ることが大切です。</p>

<p>と言ったところで本日はここまで。</p>

<p>参考:</p>

<ul>
<li><a href="http://aqubiblog.blogspot.jp/2012/11/ios.html">iOSの日付処理まとめ</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sansan×SONYアプリ勉強会に参加しました]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/16/sansan-sony-study/"/>
    <updated>2016-02-16T19:26:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/16/sansan-sony-study</id>
    <content type="html"><![CDATA[<h4>Sansan×SONYアプリ勉強会</h4>

<p>本日は勉強会への参加報告です。<br/>
<a href="http://connpass.com/event/25411/">Sansan×SONYアプリ勉強会</a>に参加してきました。<br/>
なかなか参加したいアプリ関連の勉強会って少ないんですが、今回は面白そうだなと思って、結構、早めに申し込んでいました。<br/>
当日見てみるとキャンセル待ちも数十名になっていたので、珍しく早めに申し込んで良かったなと思いました。<br/>
では、早速、筆者が今回の勉強会で得た感想等々を書いていきます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>チームでのiOSアプリ開発</h4>

<p>個人で開発するときはさして困らないものの、<br/>
チームで開発すると途端に困る&hellip;それがコンフリクトであることは周知の事実ですが、<br/>
それを如何にして減らしていけるのか<br/>
そんな話を聞いてきました。</p>

<p><a href="http://www.slideshare.net/ssuser65a265/ios-58353672?ref=http://connpass.com/event/25411/presentation/?utm_campaign=new_event_links_to_participant&amp;utm_source=notifications&amp;utm_medium=email&amp;utm_content=detail_btn">スライドシェアの資料</a></p>

<p><strong>【コンフリクトが起こった原因】</strong></p>

<ul>
<li>開発スタイル

<ul>
<li>命名規則, ハードタブとソフトタブが入り交じる, commitの粒度&hellip;は人によって異なる</li>
<li>チーム内の基準を設ける必要がある(Cocoa向けコーディングガイドラインなど)</li>
<li>GitHubとPullRequestで互いにレビューをし合うことで問題を早期発見</li>
</ul>
</li>
<li>Storyboard

<ul>
<li>同時に画面を作ると、コンフリクトが起こるので、複数画面が同じStoryboardに入るのをやめる</li>
<li>1画面1つのStoryboardで作った</li>
</ul>
</li>
<li>Localizable.strings

<ul>
<li>日本語だとUTF-16なのできれいにマージできず、GitHubでdiffが見れない</li>
<li>同時に実装を進めるとコンフリクトが起こる</li>
<li>機能単位に分割して取り組むと良い</li>
</ul>
</li>
<li>project.pbxproj

<ul>
<li>大きい機能追加だと確実にコンフリクトが発生</li>
<li>Editorでも開けないので、完全手直しになる&hellip;</li>
<li><a href="https://github.com/simonwagner/mergepbx">mergepbx</a>を使った

<ul>
<li>α版だったので、適用後に必ず目を通すことにした</li>
</ul>
</li>
</ul>
</li>
<li>証明書 (Code Signing)

<ul>
<li>Xcode上で『Fix Issue』ボタンのあるアラートが出たとき、『Fix Issue』を押すと困ることが起こる</li>
<li>Appleのストレージから証明書をRevokeして秘密鍵が行方不明, CIサーバまで影響なんてことが&hellip;</li>
<li>『Fix Issue』は押さないようにチームで決めた</li>
<li>チームで一人はProvisioning Profileや証明書のことがわかる人を入れる</li>
</ul>
</li>
</ul>


<p><strong>【まとめ】</strong></p>

<ul>
<li>Xcodeでの複数人開発には工夫が必要</li>
<li>マージにかかる労力を減らす→開発前に対策するのが理想</li>
<li>『Fix Issue』は何も解決しないので押さない</li>
</ul>


<h4>家電と繋がるアプリの開発 &ndash; リモコン＆テレビ番組表アプリ &ldquo;TV SideView&rdquo; の事例</h4>

<p>こちらはSONYが出している『TV SideView』アプリに関する話でした。</p>

<p><strong>【目指していること】</strong></p>

<ul>
<li>新しい・優れたユーザ体験(UX)の追求</li>
<li>理想のUX実現のために『家電, モバイル, ゲーム, アプリ』と横断して開発する</li>
</ul>


<p><strong>【家電とアプリの繋がり例】</strong></p>

<ul>
<li><a href="https://www.google.co.jp/chrome/devices/chromecast/">Chrome Cast</a> / <a href="http://www.google.co.jp/intl/ja_jp/nexus/player/">Nexus Player</a> / AirPlay</li>
<li><a href="https://nest.com/">Nest</a></li>
<li><a href="https://nest.com/camera/meet-nest-cam/">Dropcam</a></li>
</ul>


<p><strong>【家電とアプリが繋がることについて】</strong></p>

<ul>
<li>家電の操作について

<ul>
<li>アプリの機能: リモコン画面をスマホに表示, アプリから番組を選択, 番組の視聴/予約</li>
<li>長所: 高度な操作指示が可能なUIを実装できる, ネットワーク・電波があればどこでも使える

<ul>
<li>高度な操作の例: 家の中の機器をまとめて操作することができる</li>
</ul>
</li>
<li>短所: アプリ起動の手間, ブラインド操作できない, 操作フィードバックがない</li>
</ul>
</li>
<li>アプリが家電のディスプレイになる

<ul>
<li>画面のない家電の画面にアプリがなれる</li>
<li>手元にない家電の操作ができる</li>
<li>画面のある家電であっても、セカンドディスプレイになれる</li>
</ul>
</li>
<li>アプリならではの良さ

<ul>
<li>番組の詳細情報の閲覧ができる</li>
<li>人気番組を知る(予約数の人気ランキングで見せる)</li>
</ul>
</li>
<li>スマホが家電のセンサーになる

<ul>
<li>近くの家電を見つける</li>
<li>ユーザの接近を知る</li>
<li>ユーザ行動による家電の操作</li>
<li>音声入力</li>
<li>着信に応じて音量を下げる</li>
</ul>
</li>
<li>家電をパーソナライズ

<ul>
<li>モバイル端末の履歴からおすすめの番組をレコメンド</li>
</ul>
</li>
</ul>


<p><strong>【家電のUXの進化について】</strong></p>

<ul>
<li>アプリと繋がることで家電のUXの進化を加速</li>
<li>アプリであれば機能追加やアップデートが容易なので、家電と組み合わせることでUXの進化が劇的に加速する</li>
</ul>


<p><strong>【家電とアプリを繋げることの大変さ】</strong></p>

<ul>
<li>予約操作はTCPで → 信頼性を重視</li>
<li>機器検索やリモコンマウスカーソル機能はUDPで → パフォーマンスを重視</li>
<li>家電とクラウドサーバでは、可用性と反応速度が大きく異なる</li>
<li>ハード性能・コストの制約</li>
<li>家電の状態変化に対応できるアプリに&hellip;(リモコンで急遽、OFFにされるとか)</li>
<li>世界で10万台以上の家電がBotなどに感染されている&hellip;</li>
</ul>


<p><strong>【SONYでは】</strong></p>

<ul>
<li>TV SideView 1400万DL達成</li>
<li>データドリブンによるアプリ改善(機能の利用頻度, アクセス数を解析)</li>
<li>6週リリース体制(スクラム開発を導入)</li>
</ul>


<h4>アプリの不具合を少なくするために</h4>

<p><a href="http://www.slideshare.net/kenichitatsuhama/ss-58316068">スライドシェアの資料</a></p>

<p><strong>【勉強になったこと】</strong></p>

<ul>
<li>外注では品質担保が難しいというのが通例なのかもしれない</li>
<li>Android Studio Inspect Codeは良さそうなので使ってみたい</li>
<li>InferをInspect Codeと併用させるのはあり</li>
<li>設定で「アクティビティを保持しない」にすることで想定通りの動作をするか見ることで、堅牢なアプリになる<br/>
onCreateを通らない値は復帰しないと覚えておく(想定していた処理が呼ばれない, パラメータがないとかならないように&hellip;)</li>
<li>ViewPagerではFragmentは3つまでしか保持しないので注意</li>
<li><a href="http://tatsu-zine.com/books/master-of-fragments">Master of Fragment (Android Professional Developerシリーズ)</a>は良いらしい</li>
</ul>


<p><strong>【お役立ちツール】</strong></p>

<ul>
<li><a href="https://github.com/RobotiumTech/robotium">Robotium</a></li>
<li><a href="http://eclemma.org/jacoco/">Jacoco</a></li>
</ul>


<h4>Android / iOS アプリのコード共有 &ndash; J2ObjC を使ってみた &ndash;</h4>

<p>J2ObjCは個人的に気になっていたので、話が聞けて良かったです。</p>

<p><strong>【J2ObjCを使うきっかけ】</strong></p>

<ul>
<li>家電連携以上の価値を生み出したい</li>
<li>開発効率を上げる事で目指す</li>
<li>Android開発に強い人が多い</li>
<li>開発の段階、段階で適用が可能</li>
</ul>


<p><strong>【J2ObjCの特徴】</strong></p>

<ul>
<li>Native UI非対応 → UIはPlatform Nativeで開発したほうが良いというスタンス</li>
<li>ビルドが複雑</li>
<li>あくまでも開発量・メンテナンスコストの削減になるのであり、単一コードになるわけではない</li>
</ul>


<p><strong>【J2ObjCを使った結果のサンプル】</strong></p>

<ul>
<li>19%の開発量の削減ができた</li>
<li>Bluetoothの接続・通信開始処理も実装できた</li>
<li>JUnitのテストコードも変換された</li>
</ul>


<p><strong>【お役立ちツール】</strong></p>

<ul>
<li><a href="https://github.com/tomball/j2objc-sample-reversi">j2objc-sample-reversi</a></li>
</ul>


<p>今回、アプリ系の勉強会に久々に参加しましたが、<br/>
自分自身まだまだ知らないこともたくさんあるので非常に勉強になりました。<br/>
また、継続して、気になった勉強会には参加していきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SwiftLintを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/13/swift-lint/"/>
    <updated>2016-02-13T21:17:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/13/swift-lint</id>
    <content type="html"><![CDATA[<h4>SwiftLintを使ってコード規約に則ったチーム開発を目指そう！</h4>

<p>本日は<a href="https://github.com/realm/SwiftLint">SwiftLint</a>を紹介したいと思います。</p>

<p>SwiftLintとは<br/>
チーム内で1つのコード規約に則って開発することを補佐してくれる静的解析ツールです。</p>

<p>JavaScriptであれば<a href="http://www.jslint.com/">JSLint</a>や<a href="http://jshint.com/">JSHint</a>(最近であれば<a href="http://eslint.org/">ESLint</a>でしょうか)ですし、<br/>
Objective-Cであれば<a href="http://oclint.org/">OCLint</a>が主流かと思います。<br/>
それのSwift版ですね。</p>

<p>筆者はあまり大規模なチーム開発を経験したことがないので、<br/>
SwiftLintを使ったことがありません。<br/>
なので、逆に新鮮な心持ちで使い方や良いなと思う点について紹介できればと思っています。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>SwiftLintの導入方法</h4>

<p>早速、SwiftLintを導入していきましょう。</p>

<p>1．homebrewでインストール<br/>
下記コマンドでSwiftLintをインストールできます。<br/>
<code>brew install swiftlint</code></p>

<p>2．SwiftLintを適用したいXcodeプロジェクトの設定を変更<br/>
下図のように <strong>Run Script</strong> を追加しましょう。<br/>
<img src="http://grandbig.github.io/images/swiftlint-1.png" alt="Run Scriptの追加" /></p>

<p>続いて、下記のShell Scriptを記載しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">if</span> <span class="n">which</span> <span class="n">swiftlint</span> <span class="o">&gt;/</span><span class="n">dev</span><span class="o">/</span><span class="n">null</span><span class="p">;</span> <span class="n">then</span>
</span><span class='line'>  <span class="n">swiftlint</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="n">echo</span> <span class="s">&quot;SwiftLint does not exist, download from https://github.com/realm/SwiftLint&quot;</span>
</span><span class='line'><span class="n">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/swiftlint-2.png" alt="Shell Scriptを記載" /></p>

<p>たったこれだけで準備完了です。<br/>
非常に簡単ですね！</p>

<h4>SwiftLintを使ってみよう</h4>

<p>導入ができたので、SwiftLintを使っていきたいと思います。<br/>
因みに、今回導入したSwiftLintはバージョン <strong>0.8.0</strong> です。</p>

<p>実際にBuildしてみるとわかるのですが、<br/>
デフォルトで設定されているチェック内容では厳しすぎて気が遠くなります&hellip;。<br/>
特にCocoaPodsでオープンソースのライブラリをプロジェクトに追加している場合、<br/>
おびただしい数のErrorとWarningが出ます。</p>

<p><img src="http://grandbig.github.io/images/swiftlint-3.png" alt="OSSライブラリもひっかかる" /></p>

<p>よって設定をカスタム化したいと思います。<br/>
カスタム化は非常に簡単です。</p>

<p>xcodeprojファイルと同階層に<code>.swiftlint.yml</code>ファイルを作成します。<br/>
このファイルに設定可能なものは下記になります。</p>

<ul>
<li><code>disabled_rules</code><br/>
デフォルトで有効となっているルールの中から無効にしたいルールを設定</li>
<li><code>opt_in_rules</code><br/>
デフォルトで無効となっているルールの中から有効にしたいルールを設定</li>
<li><code>whitelist_rules</code><br/>
他の2つとの併用はできず、これに記載したルールのみ適用したい場合に設定</li>
<li><code>included</code><br/>
SwiftLintの対象に含めるファイルのパスを記載</li>
<li><code>excluded</code><br/>
SwiftLintの対象から外すファイルのパスを記載</li>
</ul>


<p><code>.swiftlint.yml</code>を作成する前のデフォルト設定は下図の通りです。<br/>
<code>swiftlint rules</code>とコマンドを打てば確認できます。</p>

<p><img src="http://grandbig.github.io/images/swiftlint-4.png" alt="SwiftLintのデフォルト設定" /></p>

<p>因みに、SwiftLintのコマンドは下記です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Available</span> <span class="nl">commands:</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">autocorrect</span>   <span class="n">Automatically</span> <span class="n">correct</span> <span class="n">warnings</span> <span class="n">and</span> <span class="n">errors</span>
</span><span class='line'>  <span class="n">help</span>          <span class="n">Display</span> <span class="n">general</span> <span class="n">or</span> <span class="n">command</span><span class="o">-</span><span class="n">specific</span> <span class="n">help</span>
</span><span class='line'>  <span class="n">lint</span>          <span class="n">Print</span> <span class="n">lint</span> <span class="n">warnings</span> <span class="n">and</span> <span class="n">errors</span> <span class="p">(</span><span class="k">default</span> <span class="n">command</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rules</span>         <span class="n">Display</span> <span class="n">the</span> <span class="n">list</span> <span class="n">of</span> <span class="n">rules</span> <span class="n">and</span> <span class="n">their</span> <span class="n">identifiers</span>
</span><span class='line'>  <span class="n">version</span>       <span class="n">Display</span> <span class="n">the</span> <span class="n">current</span> <span class="n">version</span> <span class="n">of</span> <span class="n">SwiftLint</span>
</span></code></pre></td></tr></table></div></figure>


<p>筆者が作成した<code>.swiftlint.yml</code>ファイルは下記になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="nl">disabled_rules:</span>
</span><span class='line'><span class="cp"># コードの記載のない改行を許可したい</span>
</span><span class='line'><span class="o">-</span> <span class="n">trailing_whitespace</span>
</span><span class='line'><span class="cp"># ネスト1つで怒られるのでDisableにしたい</span>
</span><span class='line'><span class="o">-</span> <span class="n">nesting</span>
</span><span class='line'>
</span><span class='line'><span class="cp"># 追加したOSSライブラリは対象に含めたくない</span>
</span><span class='line'><span class="nl">excluded:</span>
</span><span class='line'><span class="o">-</span> <span class="n">Pods</span><span class="o">/</span>
</span><span class='line'><span class="o">-</span> <span class="n">Podfile</span>
</span><span class='line'><span class="o">-</span> <span class="n">Podfile</span><span class="p">.</span><span class="n">lock</span>
</span><span class='line'>
</span><span class='line'><span class="cp"># 1行あたりの文字数制限を300に変更</span>
</span><span class='line'><span class="cp"># プロジェクト作成時にデフォルトで追加されるコメントをひっかけないため</span>
</span><span class='line'><span class="nl">line_length:</span> <span class="mi">300</span>
</span><span class='line'>
</span><span class='line'><span class="cp"># 変数名の長さのMAXとMINを変更</span>
</span><span class='line'><span class="nl">variable_name:</span>
</span><span class='line'>  <span class="nl">max_length:</span>
</span><span class='line'>    <span class="nl">warning:</span> <span class="mi">60</span>
</span><span class='line'>    <span class="nl">error:</span> <span class="mi">80</span>
</span><span class='line'>  <span class="nl">min_length:</span>
</span><span class='line'>    <span class="nl">warning:</span> <span class="mi">1</span>
</span><span class='line'>    <span class="nl">error:</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>実際に使ってみた結果、<br/>
チームとして開発するには非常に良いのではないかと思いました。<br/>
ただ、デフォルトの設定項目では全てをカバーし切れないことがあるように感じました。<br/>
なので、自前ルールを作成する機会がそれなりにある気がしました。</p>

<p><a href="https://github.com/realm/SwiftLint">SwiftLintのREADME</a>にも記載がある通り、<br/>
SwiftLintでは自前でルールを作成することができます。</p>

<p>といったところで本日はここまで。</p>

<p>参考:</p>

<ul>
<li><a href="http://qiita.com/akatsuki174/items/45205e0f0948f11e9db5">SwiftLintの.swiftlint.yml記述方式とその詳細</a></li>
<li><a href="http://qiita.com/akatsuki174/items/c37dfcae3ff3a79fb8cf">SwiftLint 0.8.0 アップデート内容まとめ</a></li>
</ul>


<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio2.0: TableLayoutを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/11/android-tablelayout/"/>
    <updated>2016-02-11T15:15:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/11/android-tablelayout</id>
    <content type="html"><![CDATA[<h4>TableLayoutとは</h4>

<p><code>TabLayout</code>に続いて、本日は、<code>TableLayout</code>を使った画面作成をしたいと思います。<br/>
Androidでの<code>TableLayout</code>はHTMLで言うところの<code>&lt;table&gt;</code>タグに当たり、<br/>
iOSで言うところの<code>UITableView</code>が使いどころとしては近いと思います。</p>

<p>筆者が思うに<code>TableLayout</code>は決まったレイアウトの実装には向いていますが、<br/>
複雑かつオリジナリティの高い画面を作成する際に使うには難しいのかなと感じています。<br/>
何はともあれ、実装に入っていきましょう。</p>

<p>本記事で利用しているAndroid Studioは <strong>Android Studio 2.0 Beta 3</strong> になります。<br/>
(Android Studio 1.5 以上であれば基本的に同じだと思います。)</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>TableLayoutを使ってみよう！</h4>

<p>順を追って説明していきます。<br/>
目標として、下図のような画面作成を目指したいと思います。</p>

<p><img src="http://grandbig.github.io/images/android-tablelayout.png" alt="TableLayoutを使った画面" /></p>

<p>これは1行目と4行目は1つのカラムで、2行目と3行目は2つのカラムで構成しています。</p>

<p>1． Android Studioで<code>Blank Activity</code>を選択して、プロジェクトを新規作成<br/>
下記のようなプロジェクト構成ができあがります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">app</span>
</span><span class='line'> <span class="err">┣━━</span> <span class="n">manifests</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┗━━</span> <span class="n">AndroidManifest</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'> <span class="err">┣━━</span> <span class="n">java</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┣━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tablelayoutapplication</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┃</span>      <span class="err">┗━━</span> <span class="n">MainActivity</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┣━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tablelayoutapplication</span><span class="o">(</span><span class="n">androidTest</span><span class="o">)</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┃</span>      <span class="err">┗━━</span> <span class="n">ApplicationTest</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┗━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tablelayoutapplication</span><span class="o">(</span><span class="n">test</span><span class="o">)</span>
</span><span class='line'> <span class="err">┃</span>           <span class="err">┗━━</span> <span class="n">ExampleUnitTest</span>
</span><span class='line'> <span class="err">┗━━</span> <span class="n">res</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">drawable</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">layout</span>
</span><span class='line'>      <span class="err">┃</span>     <span class="err">┣━━</span> <span class="n">activity_main</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'>      <span class="err">┃</span>     <span class="err">┗━━</span> <span class="n">content_main</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">menu</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">mipmap</span>
</span><span class='line'>      <span class="err">┗━━</span> <span class="n">values</span>
</span></code></pre></td></tr></table></div></figure>


<p>2．<code>content_main.xml</code>に<code>TableLayout</code>を追加<br/>
続いて、<code>TableLayout</code>をレイアウトファイルに実装していきましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// content_main.xml</span>
</span><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">LinearLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">app</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res-auto&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">tools</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingBottom</span><span class="o">=</span><span class="s">&quot;0dp&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingLeft</span><span class="o">=</span><span class="s">&quot;0dp&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingRight</span><span class="o">=</span><span class="s">&quot;0dp&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingTop</span><span class="o">=</span><span class="s">&quot;0dp&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;#efeff4&quot;</span>
</span><span class='line'>  <span class="nl">app:</span><span class="n">layout_behavior</span><span class="o">=</span><span class="s">&quot;@string/appbar_scrolling_view_behavior&quot;</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">context</span><span class="o">=</span><span class="s">&quot;com.example.ec_dev.tablelayoutapplication.MainActivity&quot;</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">showIn</span><span class="o">=</span><span class="s">&quot;@layout/activity_main&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;!--</span> <span class="err">構成要素が多くなる場合を踏まえて、画面スクロールを可能にしておく</span> <span class="o">--&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">ScrollView</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/scrollView&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="o">&lt;</span><span class="n">TableLayout</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">stretchColumns</span><span class="o">=</span><span class="s">&quot;0&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="o">&lt;!--</span> <span class="mi">1</span><span class="err">行目</span> <span class="o">--&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">TableRow</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingBottom</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingTop</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              
</span><span class='line'>              <span class="o">&lt;</span><span class="n">TextView</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">textAppearance</span><span class="o">=</span><span class="s">&quot;?android:attr/textAppearanceLarge&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">text</span><span class="o">=</span><span class="s">&quot;@string/top_message&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_span</span><span class="o">=</span><span class="s">&quot;2&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/textView&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">textSize</span><span class="o">=</span><span class="s">&quot;18sp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingRight</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingLeft</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="n">TableRow</span><span class="o">&gt;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="o">&lt;!--</span> <span class="mi">2</span><span class="err">行目</span> <span class="o">--&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">TableRow</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;#ffffff&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingBottom</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingTop</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">&lt;</span><span class="n">TextView</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;44dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">text</span><span class="o">=</span><span class="s">&quot;@string/androidText&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/textView2&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">textSize</span><span class="o">=</span><span class="s">&quot;20sp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">gravity</span><span class="o">=</span><span class="s">&quot;center_vertical&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingRight</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingLeft</span><span class="o">=</span><span class="s">&quot;@dimen/8dp&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">&lt;</span><span class="n">ImageButton</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;44dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;44dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/imageButton&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">src</span><span class="o">=</span><span class="s">&quot;@drawable/ic_android_white_18dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;@color/colorAccent&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_marginRight</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="n">TableRow</span><span class="o">&gt;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="o">&lt;--</span> <span class="mi">3</span><span class="err">行目</span> <span class="o">--&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">TableRow</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;#ffffff&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingBottom</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingTop</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">&lt;</span><span class="n">TextView</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;44dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">text</span><span class="o">=</span><span class="s">&quot;@string/animalText&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/textView2&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">textSize</span><span class="o">=</span><span class="s">&quot;20sp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">gravity</span><span class="o">=</span><span class="s">&quot;center_vertical&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingRight</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingLeft</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">&lt;</span><span class="n">ImageButton</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;44dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;44dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/imageButton&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">src</span><span class="o">=</span><span class="s">&quot;@drawable/ic_pets_white_18dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;@color/colorAccent&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_marginRight</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="n">TableRow</span><span class="o">&gt;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="o">&lt;!--</span> <span class="mi">4</span><span class="err">行目</span> <span class="o">--&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">TableRow</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingBottom</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">paddingTop</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">&gt;</span>
</span><span class='line'>              
</span><span class='line'>              <span class="o">&lt;</span><span class="n">TextView</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">textAppearance</span><span class="o">=</span><span class="s">&quot;?android:attr/textAppearanceLarge&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">text</span><span class="o">=</span><span class="s">&quot;@string/last_message&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_span</span><span class="o">=</span><span class="s">&quot;2&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/textView&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">textSize</span><span class="o">=</span><span class="s">&quot;18sp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingRight</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">paddingLeft</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="n">TableRow</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;/</span><span class="n">TableLayout</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">ScrollView</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ポイントは下記です。</p>

<ul>
<li><code>TableLayout</code>に<code>android:stretchColumns="0"</code>を設定して、0番目のカラム幅を極力大きくする</li>
<li>1行目と4行目<code>TableRow</code>の<code>TextView</code>は<code>android:layout_span="2"</code>を設定して、カラム2つ分とする</li>
</ul>


<p>その他、必要なケースに合わせてデザインを整えましょう。</p>

<p>因みに、<code>activity_main.xml</code>は以下にしています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">CoordinatorLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">app</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res-auto&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">tools</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">fitsSystemWindows</span><span class="o">=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">context</span><span class="o">=</span><span class="s">&quot;com.example.takahiro.tablelayoutapplication.MainActivity&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">AppBarLayout</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">theme</span><span class="o">=</span><span class="s">&quot;@style/AppTheme.AppBarOverlay&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">v7</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">Toolbar</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/toolbar&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;?attr/actionBarSize&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;?attr/colorPrimary&quot;</span>
</span><span class='line'>          <span class="nl">app:</span><span class="n">popupTheme</span><span class="o">=</span><span class="s">&quot;@style/AppTheme.PopupOverlay&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">AppBarLayout</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">include</span> <span class="n">layout</span><span class="o">=</span><span class="s">&quot;@layout/content_main&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">CoordinatorLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>デフォルトでは<code>FloatingActionButton</code>が作成されますが、不要なので削除しています。</p>

<p>合わせて、<code>strings.xml</code>も編集しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">resources</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">string</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;app_name&quot;</span><span class="o">&gt;</span><span class="n">TableLayoutApplication</span><span class="o">&lt;/</span><span class="n">string</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">string</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;action_settings&quot;</span><span class="o">&gt;</span><span class="n">Settings</span><span class="o">&lt;/</span><span class="n">string</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">string</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;top_message&quot;</span><span class="o">&gt;</span><span class="n">Congratulation</span><span class="o">!!&lt;/</span><span class="n">string</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">string</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;androidText&quot;</span><span class="o">&gt;</span><span class="n">Android</span><span class="o">&lt;/</span><span class="n">string</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">string</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;animalText&quot;</span><span class="o">&gt;</span><span class="n">Animals</span><span class="o">&lt;/</span><span class="n">string</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">string</span> <span class="n">name</span><span class="o">=</span><span class="s">&quot;last_message&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">-</span> <span class="k">this</span> <span class="n">page</span> <span class="n">is</span> <span class="n">simple</span> <span class="n">sample</span><span class="o">.</span><span class="err">\</span><span class="n">n</span><span class="o">-</span> <span class="k">this</span> <span class="n">app</span> <span class="n">is</span> <span class="n">simple</span> <span class="n">sample</span> <span class="n">application</span><span class="o">.</span><span class="err">\</span><span class="n">n</span><span class="o">-</span> <span class="n">GO</span><span class="o">!</span> <span class="n">GO</span><span class="o">!</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">string</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">resources</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>レイアウトを作成している途中、レイアウトが想定していない形になったり、崩れてしまったりすることがあるかもしれません。<br/>
そんなときはレイアウトファイル上でリフレッシュボタンをクリックして更新しましょう。</p>

<p><img src="http://grandbig.github.io/images/android-tablelayout-2.png" alt="レイアウトのリフレッシュ" /></p>

<p>さて、如何だったでしょうか？
今回の記事で紹介したProjectのソースは<a href="https://github.com/grandbig/TableLayoutSample">GitHub grandbig/TableLayoutSample</a>に載せてあります。<br/>
ご自由にご利用ください。</p>

<p>因みに、今回はレイアウトの作成に注目して記事を書きました。<br/>
そのため、ボタンアクションなど必要な場合は<code>MainActivity.java</code>に処理を追加してください。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio2.0: TabLayoutを使ってTabを画面最下部に配置しよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/11/android-tablayout-2/"/>
    <updated>2016-02-11T14:08:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/11/android-tablayout-2</id>
    <content type="html"><![CDATA[<h4>Tabを最下部に配置する方法について</h4>

<p>さて、本日は簡単な話なのですが、案外ハマったので、メモ代わりに書いておきたいと思います。<br/>
以前、<a href="http://grandbig.github.io/blog/2016/01/30/android-tablayout/">Android Studio2.0: TabLayoutを使ってみよう！</a>でTabLayoutを使ったTabデザインの実装方法について紹介させて頂きました。<br/>
そのときはTabをToolbarのすぐ下に配置していましたが、画面最下部に配置したいことも出てくることでしょう。<br/>
その方法について書きたいと思います。</p>

<p>TabLayoutの配置は<code>content_main.xml</code>に下記のように書きます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// content_main.xml</span>
</span><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">RelativeLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">app</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res-auto&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">tools</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingBottom</span><span class="o">=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingLeft</span><span class="o">=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingRight</span><span class="o">=</span><span class="s">&quot;@dimen/activity_horizontal_margin&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">paddingTop</span><span class="o">=</span><span class="s">&quot;@dimen/activity_vertical_margin&quot;</span>
</span><span class='line'>  <span class="nl">app:</span><span class="n">layout_behavior</span><span class="o">=</span><span class="s">&quot;@string/appbar_scrolling_view_behavior&quot;</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">context</span><span class="o">=</span><span class="s">&quot;com.example.takahiro.tablayoutsample2.MainActivity&quot;</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">showIn</span><span class="o">=</span><span class="s">&quot;@layout/activity_main&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">v4</span><span class="o">.</span><span class="na">view</span><span class="o">.</span><span class="na">ViewPager</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/pager&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_above</span><span class="o">=</span><span class="s">&quot;@+id/tabs&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">TabLayout</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/tabs&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;@color/colorPrimary&quot;</span>
</span><span class='line'>      <span class="nl">app:</span><span class="n">tabSelectedTextColor</span><span class="o">=</span><span class="s">&quot;@color/colorAccent&quot;</span>
</span><span class='line'>      <span class="nl">app:</span><span class="n">tabTextColor</span><span class="o">=</span><span class="s">&quot;#ffffff&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_alignParentBottom</span><span class="o">=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_alignParentLeft</span><span class="o">=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_alignParentStart</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;/</span><span class="n">RelativeLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ポイントは、</p>

<ul>
<li><code>android.support.v4.view.ViewPager</code>に<code>android:layout_above="@+id/tabs"</code>設定</li>
<li><code>android.support.design.widget.TabLayout</code>に<code>android:layout_alignParentBottom</code>, <code>android:layout_alignParentLeft</code>, <code>android:layout_alignParentStart</code>の3つをtrueで設定</li>
</ul>


<p>です。<br/>
これにより、下図のような配置ができているはずです。</p>

<p><img src="http://grandbig.github.io/images/android-tablayout-2.png" alt="Tabを最下部配置" /></p>

<p>なんてことはない単純な話なのですが、<strong>Android Design Support Library</strong> に惑わされてしまいました。  <br/>
もっとAndroidアプリの特にUI・UX周りの開発に精進したいと思います。</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studioでの初回作成Activityから考えるログイン画面]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/07/android-login-activity/"/>
    <updated>2016-02-07T22:38:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/07/android-login-activity</id>
    <content type="html"><![CDATA[<h4>Androidアプリでのログイン画面を考えてみる</h4>

<p>筆者はこれまでAndroidアプリでログイン画面を作成するとき、</p>

<ul>
<li>Person Name / E-mail / Phone などの必須入力項目用のText Fields</li>
<li>Password / Password(Numeric) のパスワード入力用のText Fields</li>
<li>ログインするためのアクション用のButton</li>
</ul>


<p>のみを配置することを考えていました。<br/>
今回はAndroid Studioで初回プロジェクト作成時に<code>Login Activity</code>を選択することで、<br/>
Google側の意図を読み取ってみようと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>Login画面のレイアウト</h4>

<p>では、早速、Android Studioを起動して<code>Login Activity</code>を選択したプロジェクトを作成しましょう。<br/>
(本ブログでは <strong>Android Studio 2.0 Beta2</strong> を利用しています。)</p>

<p>プロジェクト作成時に<code>Add an Activity to Mobile</code>のところで<code>Login Activity</code>を選択してみましょう。</p>

<p><img src="http://grandbig.github.io/images/login-activity-1.png" alt="Login Activityを選択する" /></p>

<p>すると、下記のようなレイアウトファイルが作成されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// activity_login.xml</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">LinearLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">tools</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">context</span><span class="o">=</span><span class="s">&quot;com.example.takahiro.loginapplicationsample.LoginActivity&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;!--</span> <span class="n">Login</span> <span class="n">progress</span> <span class="o">--&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">ProgressBar</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/login_progress&quot;</span>
</span><span class='line'>      <span class="n">style</span><span class="o">=</span><span class="s">&quot;?android:attr/progressBarStyleLarge&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_marginBottom</span><span class="o">=</span><span class="s">&quot;8dp&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">visibility</span><span class="o">=</span><span class="s">&quot;gone&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">ScrollView</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/login_form&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/email_login_form&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">TextInputLayout</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">&lt;</span><span class="n">AutoCompleteTextView</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/email&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">hint</span><span class="o">=</span><span class="s">&quot;@string/prompt_email&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">inputType</span><span class="o">=</span><span class="s">&quot;textEmailAddress&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">maxLines</span><span class="o">=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">singleLine</span><span class="o">=</span><span class="s">&quot;true&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">&lt;/</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">TextInputLayout</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">TextInputLayout</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          
</span><span class='line'>              <span class="o">&lt;</span><span class="n">EditText</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/password&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">hint</span><span class="o">=</span><span class="s">&quot;@string/prompt_password&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">imeActionId</span><span class="o">=</span><span class="s">&quot;@+id/login&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">imeActionLabel</span><span class="o">=</span><span class="s">&quot;@string/action_sign_in_short&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">imeOptions</span><span class="o">=</span><span class="s">&quot;actionUnspecified&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">inputType</span><span class="o">=</span><span class="s">&quot;textPassword&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">maxLines</span><span class="o">=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">singleLine</span><span class="o">=</span><span class="s">&quot;true&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">&lt;/</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">TextInputLayout</span><span class="o">&gt;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="o">&lt;</span><span class="n">Button</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/email_sign_in_button&quot;</span>
</span><span class='line'>              <span class="n">style</span><span class="o">=</span><span class="s">&quot;?android:textAppearanceSmall&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_marginTop</span><span class="o">=</span><span class="s">&quot;16dp&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">text</span><span class="o">=</span><span class="s">&quot;@string/action_sign_in&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">textStyle</span><span class="o">=</span><span class="s">&quot;bold&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">ScrollView</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>実際に画面はこのようになっています。<br/>
<img src="http://grandbig.github.io/images/login-activity-2.png" alt="ログイン画面" /></p>

<p>その成り立ちを見てみましょう。</p>

<h5>ProgressBarが配置されている</h5>

<p>まず、目についたのは<code>ProgressBar</code>です。<br/>
ログインボタンをタップした後に、サーバへの問い合わせをすることが通常だと思います。<br/>
サーバ通信後、データを受け取るまでにはそれなりに時間がかかる可能性があります。<br/>
なので、ユーザにロード中であることを知らせる<code>ProgressBar</code>は必要であるということなのでしょう。</p>

<h5>ScrollViewが配置されている</h5>

<p>続いて、<code>ScrollView</code>に着目しました。<br/>
デフォルトでは、EmailとPasswordに加えて、ログインボタンが設置されているのみですが、<br/>
場合によってはユーザ名, 電話番号, 住所, クレジットカード番号などなど必要とされる項目が多くなる可能性があります。<br/>
初めからそういったことを想定した作りになっているということでしょう。</p>

<h5>TextInputLayoutが配置されている</h5>

<p>そして、何と言っても、<code>android.support.design.widget.TextInputLayout</code>は目立つのではないでしょうか？<br/>
これは <strong>Android Design Support Library</strong> に含まれるマテリアルデザインを体現したパーツとなります。<br/>
<code>TextView</code>等を囲むことで、ユーザの入力アクションに合わせて、入力項目タイトルがスムーズに移動するデザインを実装することができます。<br/>
いわゆる<a href="https://www.google.com/design/spec/components/text-fields.html#">Floating Label</a>というものですね。</p>

<h5>AutoCompleteTextViewが使われている</h5>

<p>今回はEmailの入力が必要とのことで、<code>AutoCompleteTextView</code>によるユーザ補助機能がついています。<br/>
もちろん、<code>AutoCompleteTextView</code>をレイアウト上で設定しても補助機能を実装することはできず、<br/>
<code>AndroidManifest.xml</code>で設定が必要です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// AndroidManifest.xml</span>
</span><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">manifest</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="n">package</span><span class="o">=</span><span class="s">&quot;com.example.takahiro.loginapplicationsample&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;!--</span> <span class="n">To</span> <span class="n">auto</span><span class="o">-</span><span class="n">complete</span> <span class="n">the</span> <span class="n">email</span> <span class="n">text</span> <span class="n">field</span> <span class="n">in</span> <span class="n">the</span> <span class="n">login</span> <span class="n">form</span> <span class="n">with</span> <span class="n">the</span> <span class="n">user</span><span class="err">&#39;</span><span class="n">s</span> <span class="n">emails</span> <span class="o">--&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">uses</span><span class="o">-</span><span class="n">permission</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.permission.GET_ACCOUNTS&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">uses</span><span class="o">-</span><span class="n">permission</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.permission.READ_PROFILE&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">uses</span><span class="o">-</span><span class="n">permission</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.permission.READ_CONTACTS&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">manifest</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>このように<code>GET_ACCOUNTS</code>, <code>READ_PROFILE</code>, <code>READ_CONTACTS</code>の3つのパーミッションを設定します。<br/>
これによって、下図のようにアプリ起動後に連絡先へのアクセス許可を求めるアラートを表示することができます。</p>

<p><img src="http://grandbig.github.io/images/login-activity-3.png" alt="連絡先へのアクセス許可アラート" /></p>

<h4>LoginActivityについて</h4>

<p>続いて、<code>LoginActivity</code>はどのようになっているのか見ていきましょう。</p>

<h5>LoaderManagerを利用</h5>

<p><code>LoginActivity</code>では<code>LoaderManager</code>を利用しています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// LoginActivity.java</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LoginActivity</span> <span class="kd">extends</span> <span class="n">AppCompatActivity</span> <span class="kd">implements</span> <span class="n">LoaderCallbacks</span><span class="o">&lt;</span><span class="n">Cursor</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Loader</span><span class="o">&lt;</span><span class="n">Cursor</span><span class="o">&gt;</span> <span class="nf">onCreateLoader</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="n">Bundle</span> <span class="n">bundle</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">CursorLoader</span><span class="o">(</span><span class="k">this</span><span class="o">,</span>
</span><span class='line'>          <span class="c1">// Retrieve data rows for the device user&#39;s &#39;profile&#39; contact.</span>
</span><span class='line'>          <span class="n">Uri</span><span class="o">.</span><span class="na">withAppendedPath</span><span class="o">(</span><span class="n">ContactsContract</span><span class="o">.</span><span class="na">Profile</span><span class="o">.</span><span class="na">CONTENT_URI</span><span class="o">,</span>
</span><span class='line'>              <span class="n">ContactsContract</span><span class="o">.</span><span class="na">Contacts</span><span class="o">.</span><span class="na">Data</span><span class="o">.</span><span class="na">CONTENT_DIRECTORY</span><span class="o">),</span> <span class="n">ProfileQuery</span><span class="o">.</span><span class="na">PROJECTION</span><span class="o">,</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// Select only email addresses.</span>
</span><span class='line'>          <span class="n">ContactsContract</span><span class="o">.</span><span class="na">Contacts</span><span class="o">.</span><span class="na">Data</span><span class="o">.</span><span class="na">MIMETYPE</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot; = ?&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="n">ContactsContract</span><span class="o">.</span><span class="na">CommonDataKinds</span><span class="o">.</span><span class="na">Email</span>
</span><span class='line'>          <span class="o">.</span><span class="na">CONTENT_ITEM_TYPE</span><span class="o">},</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// Show primary email addresses first. Note that there won&#39;t be</span>
</span><span class='line'>          <span class="c1">// a primary email address if the user hasn&#39;t specified one.</span>
</span><span class='line'>          <span class="n">ContactsContract</span><span class="o">.</span><span class="na">Contacts</span><span class="o">.</span><span class="na">Data</span><span class="o">.</span><span class="na">IS_PRIMARY</span> <span class="o">+</span> <span class="s">&quot; DESC&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onLoadFinished</span><span class="o">(</span><span class="n">Loader</span><span class="o">&lt;</span><span class="n">Cursor</span><span class="o">&gt;</span> <span class="n">cursorLoader</span><span class="o">,</span> <span class="n">Cursor</span> <span class="n">cursor</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">emails</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>      <span class="n">cursor</span><span class="o">.</span><span class="na">moveToFirst</span><span class="o">();</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(!</span><span class="n">cursor</span><span class="o">.</span><span class="na">isAfterLast</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">emails</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cursor</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">ProfileQuery</span><span class="o">.</span><span class="na">ADDRESS</span><span class="o">));</span>
</span><span class='line'>          <span class="n">cursor</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">addEmailsToAutoComplete</span><span class="o">(</span><span class="n">emails</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onLoaderReset</span><span class="o">(</span><span class="n">Loader</span><span class="o">&lt;</span><span class="n">Cursor</span><span class="o">&gt;</span> <span class="n">cursorLoader</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>LoaderCallbacks&lt;Cursor&gt;</code>を <strong>implements</strong> しているのは、<br/>
<code>onCreateLoader</code>, <code>onLoadFinished</code>でEmailのオートコンプリート機能を実装するためです。</p>

<h5>showProgressメソッドの実装</h5>

<p>レイアウトで実装した<code>ProgressBar</code>のアニメーションまで実装されています。<br/>
また、AndroidのOSバージョンに合わせて適切な処理分けもされています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// LoginActivity.java</span>
</span><span class='line'><span class="nd">@TargetApi</span><span class="o">(</span><span class="n">Build</span><span class="o">.</span><span class="na">VERSION_CODES</span><span class="o">.</span><span class="na">HONEYCOMB_MR2</span><span class="o">)</span>
</span><span class='line'><span class="kd">private</span> <span class="kt">void</span> <span class="nf">showProgress</span><span class="o">(</span><span class="kd">final</span> <span class="kt">boolean</span> <span class="n">show</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="c1">// On Honeycomb MR2 we have the ViewPropertyAnimator APIs, which allow</span>
</span><span class='line'>  <span class="c1">// for very easy animations. If available, use these APIs to fade-in</span>
</span><span class='line'>  <span class="c1">// the progress spinner.</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">Build</span><span class="o">.</span><span class="na">VERSION</span><span class="o">.</span><span class="na">SDK_INT</span> <span class="o">&gt;=</span> <span class="n">Build</span><span class="o">.</span><span class="na">VERSION_CODES</span><span class="o">.</span><span class="na">HONEYCOMB_MR2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">shortAnimTime</span> <span class="o">=</span> <span class="n">getResources</span><span class="o">().</span><span class="na">getInteger</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">R</span><span class="o">.</span><span class="na">integer</span><span class="o">.</span><span class="na">config_shortAnimTime</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">mLoginFormView</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">show</span> <span class="o">?</span> <span class="n">View</span><span class="o">.</span><span class="na">GONE</span> <span class="o">:</span> <span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mLoginFormView</span><span class="o">.</span><span class="na">animate</span><span class="o">().</span><span class="na">setDuration</span><span class="o">(</span><span class="n">shortAnimTime</span><span class="o">).</span><span class="na">alpha</span><span class="o">(</span>
</span><span class='line'>              <span class="n">show</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="mi">1</span><span class="o">).</span><span class="na">setListener</span><span class="o">(</span><span class="k">new</span> <span class="n">AnimatorListenerAdapter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationEnd</span><span class="o">(</span><span class="n">Animator</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">mLoginFormView</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">show</span> <span class="o">?</span> <span class="n">View</span><span class="o">.</span><span class="na">GONE</span> <span class="o">:</span> <span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">mProgressView</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">show</span> <span class="o">?</span> <span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span> <span class="o">:</span> <span class="n">View</span><span class="o">.</span><span class="na">GONE</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mProgressView</span><span class="o">.</span><span class="na">animate</span><span class="o">().</span><span class="na">setDuration</span><span class="o">(</span><span class="n">shortAnimTime</span><span class="o">).</span><span class="na">alpha</span><span class="o">(</span>
</span><span class='line'>              <span class="n">show</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="o">).</span><span class="na">setListener</span><span class="o">(</span><span class="k">new</span> <span class="n">AnimatorListenerAdapter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAnimationEnd</span><span class="o">(</span><span class="n">Animator</span> <span class="n">animation</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">mProgressView</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">show</span> <span class="o">?</span> <span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span> <span class="o">:</span> <span class="n">View</span><span class="o">.</span><span class="na">GONE</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// The ViewPropertyAnimator APIs are not available, so simply show</span>
</span><span class='line'>      <span class="c1">// and hide the relevant UI components.</span>
</span><span class='line'>      <span class="n">mProgressView</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">show</span> <span class="o">?</span> <span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span> <span class="o">:</span> <span class="n">View</span><span class="o">.</span><span class="na">GONE</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mLoginFormView</span><span class="o">.</span><span class="na">setVisibility</span><span class="o">(</span><span class="n">show</span> <span class="o">?</span> <span class="n">View</span><span class="o">.</span><span class="na">GONE</span> <span class="o">:</span> <span class="n">View</span><span class="o">.</span><span class="na">VISIBLE</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>非同期通信処理の実装</h5>

<p>ログイン処理は通常、必ずサーバ通信を伴います。<br/>
そのため、バックグラウンドでの通信処理が必要となるんですが、それが既に側だけ実装されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// LoginActivity.java</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserLoginTask</span> <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">mEmail</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">mPassword</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">UserLoginTask</span><span class="o">(</span><span class="n">String</span> <span class="n">email</span><span class="o">,</span> <span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">mEmail</span> <span class="o">=</span> <span class="n">email</span><span class="o">;</span>
</span><span class='line'>      <span class="n">mPassword</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="n">Boolean</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// TODO: attempt authentication against a network service.</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// Simulate network access.</span>
</span><span class='line'>          <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">2000</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InterruptedException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">credential</span> <span class="o">:</span> <span class="n">DUMMY_CREDENTIALS</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">String</span><span class="o">[]</span> <span class="n">pieces</span> <span class="o">=</span> <span class="n">credential</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">&quot;:&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">pieces</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">mEmail</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// Account exists, return true if the password matches.</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">pieces</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">mPassword</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// TODO: register the new account here.</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>さて、いかがだったでしょうか？<br/>
レイアウトはまだしも、オートコンプリートの実装まで必要な場合は、自作するよりも、Android Studioでデフォルト実装してくれる<code>LoginActivity</code>の方が工数省略ができそうですよね！
といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift2.xでのシングルトンパターンとクラスメソッド / インスタンスメソッド]]></title>
    <link href="http://grandbig.github.io/blog/2016/02/06/swift2-singleton/"/>
    <updated>2016-02-06T11:41:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/02/06/swift2-singleton</id>
    <content type="html"><![CDATA[<h4>シングルトンを使用したクラスでクラスメソッドとインスタンスメソッドを定義する</h4>

<p>本日は、</p>

<ul>
<li>Swift2.xでのシングルトンパターンのクラスの定義の仕方</li>
<li>そのクラスにおけるクラスメソッドとインスタンスメソッドの定義の仕方</li>
<li>クラスメソッドとインスタンスメソッドの呼び出し方</li>
</ul>


<p>について見ていきたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h5>シングルトンパターンのクラスの定義</h5>

<p>まず、シングルトンパターンのクラスの定義の方法を見ていきましょう。<br/>
Swift1.2までとSwift2.xでは定義の仕方が異なります。<br/>
ここではSwift2.xの場合のみ書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">SingletonSample:</span><span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// シングルトンパターンとして定義</span>
</span><span class='line'>  <span class="k">static</span> <span class="n">let</span> <span class="nl">sharedInstance:</span><span class="n">SingletonSample</span> <span class="o">=</span> <span class="n">SingletonSample</span><span class="p">()</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">private</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>インスタンスは1つしか作られないので、</p>

<ul>
<li>内容に変更がない変数ということで<code>let</code>を使用</li>
<li>SingletonSampleクラスにおける固有の値ということで<code>static</code>を使用</li>
<li>外部クラスからインスタンス化することを防ぐために<code>private</code>で<code>init</code>を定義</li>
</ul>


<p>となっています。</p>

<p>シングルトンパターンのクラスを利用するときは、<br/>
<code>SingletonSample.sharedInstance</code>でOKです。<br/>
これで1つのインスタンスを使い回すことができます。</p>

<h5>インスタンスメソッドの定義</h5>

<p>次にシングルトンパターンにおけるインスタンスメソッドの定義方法について見ていきましょう。<br/>
まずは、定義する側です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">SingletonSample:</span><span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="c1">// インスタンスメソッドの定義</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">sampleInstanceMethod</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>インスタンスメソッドを使うときは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">SingletonSample</span><span class="p">.</span><span class="n">sharedInstance</span><span class="p">.</span><span class="n">sampleMethod</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>という形で使うことができます。<br/>
<code>SingletonSample.sharedInstance</code>で1つのインスタンスを使うことができるので、通常のクラスと使い方は同じですよね。</p>

<h5>クラスメソッドの定義</h5>

<p>最後にシングルトンパターンにおけるクラスメソッドの定義方法について見ていきましょう。<br/>
まずは、定義する側です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">SingletonSample:</span><span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>  <span class="c1">// クラスメソッドの定義</span>
</span><span class='line'>  <span class="n">class</span> <span class="n">func</span> <span class="n">sampleClassMethod</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>クラスメソッドを使うときは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">SingletonSample</span><span class="p">.</span><span class="n">sampleClassMethod</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>という形で使うことができます。<br/>
クラスメソッドはクラスをインスタンス化する必要なく、利用できるメソッドなので、<br/>
<code>SingletonSample.sharedInstance</code>とインスタンスを通して利用せずに、 <strong>クラス名+メソッド名</strong> で利用できるんですね。</p>

<p>本日は簡単ですが、以上になります。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[位置情報サービスの許可アラートに表示する文字数について]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/31/location-alert-number-of-characters/"/>
    <updated>2016-01-31T22:55:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/31/location-alert-number-of-characters</id>
    <content type="html"><![CDATA[<h4>位置情報サービスの許可アラートに文字数制限はあるのか！？</h4>

<p>位置情報サービスを利用するアプリの場合、位置情報サービスの利用許可を求めるアラートが表示されます。<br/>
これはアプリで位置情報を利用するために必須の機能であり、これなくしては、<code>CoreLocation.framework</code>を通して、位置情報を利用することはできません。</p>

<p>とここまではiOSエンジニアで位置情報サービスを扱ったアプリを開発した方々にとっては周知の事実かと思います。<br/>
しかし、その許可アラートには『 <strong>どのくらいの文字を記載することができるのか</strong> 』まで気にする方はあまり多くないかもしれません。</p>

<p>ふと気になったので、試してみました。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>Local Notification / Remote Notificationは文字数に制限があるということで以前から述べられてきました。<br/>
例えば、下記が参考になると思います。</p>

<ul>
<li><a href="http://www.hangout.co.jp/blog/archives/295">iOSのプッシュ通知の文字数とデータサイズの制限</a></li>
<li><a href="http://iot.mb.cloud.nifty.com/iotcolumn/%E6%96%87%E5%AD%97%E6%95%B0%E5%88%B6%E9%99%90%E3%83%97%E3%83%83%E3%82%B7%E3%83%A5%E9%80%9A%E7%9F%A5">文字数制限を知って効果的にプッシュ通知を利用しよう！</a></li>
<li><a href="http://qiita.com/mono0926/items/df03c61adc56934e2e7a">iOSのPUSH通知(APNS)の特徴・ノウハウまとめ(iOS 9まで対応)</a></li>
</ul>


<p>では、位置情報サービスを利用する際に表示される許可アラートに表示可能な文字数に制限はあるのでしょうか？<br/>
iOS9ではLocal Notification / Remote Notificationの制限は4KB(4096Bytes)とのことなので、このくらいいけるのでしょうか&hellip;。</p>

<p>はい。結果です。<br/>
全角で <strong>3938文字</strong> まで行けました。<br/>
これは<code>Info.plist</code>に記載できた文字数です。<br/>
これ以上は入力しても<code>Info.plist</code>に表示されないんですね&hellip;。<br/>
ただ、設定 > 位置情報サービス > アプリ に表示される文言はもう少し行けてるんですよ&hellip;。</p>

<p>たぶんLocal Notification / Remote Notificationと同じ制限な気がしますね。<br/>
まだまだiOS7やiOS8に対応する必要もあるでしょうし、長すぎるとそもそもユーザに対するハードルを上げることになるので全くオススメできませんよね。</p>

<p>ま、文字数は気にしすぎずに、Appleが言うように極力短く的確に書くにこしたことはないと思います。</p>

<p>参考までにキャプチャを貼っておきます。</p>

<p><img src="http://grandbig.github.io/images/corelocation_alert.png" alt="位置情報サービス許可アラート" /><br/>
アラート内をスクロールして全文を読むことができます。</p>

<p>といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio2.0: TabLayoutを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/30/android-tablayout/"/>
    <updated>2016-01-30T14:32:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/30/android-tablayout</id>
    <content type="html"><![CDATA[<h4>TabHostとTabLayoutについて</h4>

<p>前回、AndroidでTabHostを使ったアプリの作り方について見ていきましたが、本日は <strong>TabLayout</strong> を使ったアプリの作り方を見ていきたいと思います。<br/>
なぜ似たような名前のクラスがあるのかと思いますよね？<br/>
実はTabHostはもう随分前から非推奨とされており、同様の機能を実装するために <strong>TabLayout</strong> が提供されているようなんです。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>もう少し、詳しく説明すると、<br/>
『Google I/O 2014』にて<a href="https://www.google.com/design/spec/material-design/introduction.html">Material Design</a>が発表されました。<br/>
(これはGoogleが提唱するパソコンやスマートフォン向けのアプリまたはWebサイト等の新しいデザイン方式です。)</p>

<p>そして、『<a href="https://events.google.com/io2015/#">Google I/O 2015</a>』にてMaterial Designを実現するためのサポートライブラリ『 <strong>Android Design Support Library</strong> 』が発表されました。<br/>
<strong>TabLayout</strong> はこの <strong>Android Design Support Library</strong> に含まれるコンポーネントの1つなのです。</p>

<p>また、現在(2016/01/30時点)、公式でリリースされているAndroid Studioでは自身で<code>build.gradle</code>に<code>compile 'com.android.support:design:23.+'</code>と追記する必要がありますが、Preview版として提供されている <strong>Android Studio 2.0</strong> では、Blank Activityですらデフォルトで <strong>Android Design Support Library</strong> を利用するように組み込まれています。</p>

<p>さて、今日はそんな <strong>Android Design Support Library</strong> のコンポーネントの1つ <strong>TabLayout</strong> について見ていきたいと思います。</p>

<!-- more -->


<h4>TabLayoutを使ってみよう！</h4>

<p>TabHostを書いた時と同じ書式で書いていきます。</p>

<p>1． Android Studioで<code>Blank Activity</code>を選択して、プロジェクトを新規作成<br/>
下記のようなプロジェクト構成ができあがります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">app</span>
</span><span class='line'> <span class="err">┣━━</span> <span class="n">manifests</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┗━━</span> <span class="n">AndroidManifest</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'> <span class="err">┣━━</span> <span class="n">java</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┣━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tabhostapplication</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┃</span>      <span class="err">┗━━</span> <span class="n">MainActivity</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┣━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tabhostapplication</span><span class="o">(</span><span class="n">androidTest</span><span class="o">)</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┃</span>      <span class="err">┗━━</span> <span class="n">ApplicationTest</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┗━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tabhostapplication</span><span class="o">(</span><span class="n">test</span><span class="o">)</span>
</span><span class='line'> <span class="err">┃</span>           <span class="err">┗━━</span> <span class="n">ExampleUnitTest</span>
</span><span class='line'> <span class="err">┗━━</span> <span class="n">res</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">drawable</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">layout</span>
</span><span class='line'>      <span class="err">┃</span>     <span class="err">┣━━</span> <span class="n">activity_main</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'>      <span class="err">┃</span>     <span class="err">┗━━</span> <span class="n">content_main</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">menu</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">mipmap</span>
</span><span class='line'>      <span class="err">┗━━</span> <span class="n">values</span>
</span></code></pre></td></tr></table></div></figure>


<p>2．<code>content_main.xml</code>にTabLayoutを追加<br/>
ページ遷移のためにViewPagerも追加しておきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">RelativeLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="o">....</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">showIn</span><span class="o">=</span><span class="s">&quot;@layout/activity_main&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">TabLayout</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/tabs&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">v4</span><span class="o">.</span><span class="na">view</span><span class="o">.</span><span class="na">ViewPager</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/pager&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_below</span><span class="o">=</span><span class="s">&quot;@+id/tabs&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">RelativeLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>因みに、<code>activity_main.xml</code>は以下にしています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">CoordinatorLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">app</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res-auto&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">tools</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">fitsSystemWindows</span><span class="o">=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">context</span><span class="o">=</span><span class="s">&quot;com.example.takahiro.tablayoutsample2.MainActivity&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">AppBarLayout</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">theme</span><span class="o">=</span><span class="s">&quot;@style/AppTheme.AppBarOverlay&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">v7</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">Toolbar</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/toolbar&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;?attr/actionBarSize&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">background</span><span class="o">=</span><span class="s">&quot;?attr/colorPrimary&quot;</span>
</span><span class='line'>          <span class="nl">app:</span><span class="n">popupTheme</span><span class="o">=</span><span class="s">&quot;@style/AppTheme.PopupOverlay&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">AppBarLayout</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">include</span> <span class="n">layout</span><span class="o">=</span><span class="s">&quot;@layout/content_main&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">android</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">design</span><span class="o">.</span><span class="na">widget</span><span class="o">.</span><span class="na">CoordinatorLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>デフォルトで<code>FloatingActionButton</code>が作成されますが、こちらは今回不要なので削除しています。</p>

<p>3．表示ページ用に<code>Fragment</code>を継承した<code>PageFragment</code>を作成<br/>
メニューから<code>BlankFragment</code>を追加すると、ある程度デフォルトで処理を作成してくれます。<br/>
まずは<code>PageFragment.java</code>ファイルは下記に一部修正しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tablayoutapplication</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.net.Uri</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.Bundle</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.support.v4.app.Fragment</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.LayoutInflater</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.View</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.ViewGroup</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PageFragment</span> <span class="kd">extends</span> <span class="n">Fragment</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">ARG_PARAM</span> <span class="o">=</span> <span class="s">&quot;page&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">mParam</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">OnFragmentInteractionListener</span> <span class="n">mListener</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// コンストラクタ</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">PageFragment</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">PageFragment</span> <span class="nf">newInstance</span><span class="o">(</span><span class="kt">int</span> <span class="n">page</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">PageFragment</span> <span class="n">fragment</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PageFragment</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Bundle</span> <span class="n">args</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bundle</span><span class="o">();</span>
</span><span class='line'>      <span class="n">args</span><span class="o">.</span><span class="na">putInt</span><span class="o">(</span><span class="n">ARG_PARAM</span><span class="o">,</span> <span class="n">page</span><span class="o">);</span>
</span><span class='line'>      <span class="n">fragment</span><span class="o">.</span><span class="na">setArguments</span><span class="o">(</span><span class="n">args</span><span class="o">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">fragment</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">getArguments</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">mParam</span> <span class="o">=</span> <span class="n">getArguments</span><span class="o">().</span><span class="na">getString</span><span class="o">(</span><span class="n">ARG_PARAM</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">View</span> <span class="nf">onCreateView</span><span class="o">(</span><span class="n">LayoutInflater</span> <span class="n">inflater</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">container</span><span class="o">,</span>
</span><span class='line'>      <span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// Inflate the layout for this fragment</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">page</span> <span class="o">=</span> <span class="n">getArguments</span><span class="o">().</span><span class="na">getInt</span><span class="o">(</span><span class="n">ARG_PARAM</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="n">View</span> <span class="n">view</span> <span class="o">=</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">fragment_page</span><span class="o">,</span> <span class="n">container</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class='line'>      <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">view</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView</span><span class="o">)).</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;Page&quot;</span> <span class="o">+</span> <span class="n">page</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">view</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onButtonPressed</span><span class="o">(</span><span class="n">Uri</span> <span class="n">uri</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">mListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">mListener</span><span class="o">.</span><span class="na">onFragmentInteraction</span><span class="o">(</span><span class="n">uri</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAttach</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onAttach</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">context</span> <span class="k">instanceof</span> <span class="n">OnFragmentInteractionListener</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">mListener</span> <span class="o">=</span> <span class="o">(</span><span class="n">OnFragmentInteractionListener</span><span class="o">)</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">toString</span><span class="o">()</span>
</span><span class='line'>              <span class="o">+</span> <span class="s">&quot; must implement OnFragmentInteractionListener&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onDetach</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onDetach</span><span class="o">();</span>
</span><span class='line'>      <span class="n">mListener</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">interface</span> <span class="nc">OnFragmentInteractionListener</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">void</span> <span class="nf">onFragmentInteraction</span><span class="o">(</span><span class="n">Uri</span> <span class="n">uri</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、XMLファイルは下記です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">FrameLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="nl">xmlns:</span><span class="n">tools</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/tools&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">context</span><span class="o">=</span><span class="s">&quot;com.example.takahiro.tablayoutapplication.PageFragment&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">&lt;</span><span class="n">TextView</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">text</span><span class="o">=</span><span class="s">&quot;Page&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/textView&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_centerVertical</span><span class="o">=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_centerHorizontal</span><span class="o">=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">textSize</span><span class="o">=</span><span class="s">&quot;32sp&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">RelativeLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>4．<code>MainActivity.java</code>にTabLayoutとViewPagerを組み込み</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">AppCompatActivity</span> <span class="kd">implements</span> <span class="n">ViewPager</span><span class="o">.</span><span class="na">OnPageChangeListener</span><span class="o">,</span>
</span><span class='line'>      <span class="n">PageFragment</span><span class="o">.</span><span class="na">OnFragmentInteractionListener</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Toolbar</span> <span class="n">toolbar</span> <span class="o">=</span> <span class="o">(</span><span class="n">Toolbar</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">toolbar</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setSupportActionBar</span><span class="o">(</span><span class="n">toolbar</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// xmlからTabLayoutの取得</span>
</span><span class='line'>      <span class="n">TabLayout</span> <span class="n">tabLayout</span> <span class="o">=</span> <span class="o">(</span><span class="n">TabLayout</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tabs</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// xmlからViewPagerを取得</span>
</span><span class='line'>      <span class="n">ViewPager</span> <span class="n">viewPager</span> <span class="o">=</span> <span class="o">(</span><span class="n">ViewPager</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">pager</span><span class="o">);</span>
</span><span class='line'>      <span class="c1">// ページタイトル配列</span>
</span><span class='line'>      <span class="kd">final</span> <span class="n">String</span><span class="o">[]</span> <span class="n">pageTitle</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;HOME&quot;</span><span class="o">,</span> <span class="s">&quot;EVENT&quot;</span><span class="o">,</span> <span class="s">&quot;SETTING&quot;</span><span class="o">};</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// 表示Pageに必要な項目を設定</span>
</span><span class='line'>      <span class="n">FragmentPagerAdapter</span> <span class="n">adapter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FragmentPagerAdapter</span><span class="o">(</span><span class="n">getSupportFragmentManager</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="n">Fragment</span> <span class="nf">getItem</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">PageFragment</span><span class="o">.</span><span class="na">newInstance</span><span class="o">(</span><span class="n">position</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="n">CharSequence</span> <span class="nf">getPageTitle</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">pageTitle</span><span class="o">[</span><span class="n">position</span><span class="o">];</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">pageTitle</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">};</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// ViewPagerにページを設定</span>
</span><span class='line'>      <span class="n">viewPager</span><span class="o">.</span><span class="na">setAdapter</span><span class="o">(</span><span class="n">adapter</span><span class="o">);</span>
</span><span class='line'>      <span class="n">viewPager</span><span class="o">.</span><span class="na">addOnPageChangeListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// ViewPagerをTabLayoutを設定</span>
</span><span class='line'>      <span class="n">tabLayout</span><span class="o">.</span><span class="na">setupWithViewPager</span><span class="o">(</span><span class="n">viewPager</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="o">....</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPageScrolled</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="kt">float</span> <span class="n">positionOffset</span><span class="o">,</span> <span class="kt">int</span> <span class="n">positionOffsetPixels</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPageSelected</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onPageScrollStateChanged</span><span class="o">(</span><span class="kt">int</span> <span class="n">state</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFragmentInteraction</span><span class="o">(</span><span class="n">Uri</span> <span class="n">uri</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでタブによる画面遷移が完成です。</p>

<p><img src="http://grandbig.github.io/images/android-tablayout.png" alt="TabLayoutによるアプリ画面" /></p>

<h4>スワイプを禁止した単純なTab遷移にするためには</h4>

<p>筆者のTabの印象には、横スワイプによる画面切替は含まれていませんでした。<br/>
なので、スワイプによる画面切替を禁止してみましょう。<br/>
<a href="http://pastebin.com/J63dvdDB">HoldableViewPager</a>をまんま使います。</p>

<p><code>ViewPager</code>を継承した<code>HoldableViewPager</code>を作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tablayoutapplication</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.support.v4.view.ViewPager</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.util.AttributeSet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.view.MotionEvent</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HoldableViewPager</span> <span class="kd">extends</span> <span class="n">ViewPager</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// スワイプの禁止フラグ(true: スワイプ禁止, false: スワイプOK)</span>
</span><span class='line'>  <span class="kt">boolean</span> <span class="n">isSwipeHold</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setSwipeHold</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">enabled</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">isSwipeHold</span> <span class="o">=</span> <span class="n">enabled</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// コンストラクタ</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">HoldableViewPager</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// コンストラクタ</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">HoldableViewPager</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attributeSet</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attributeSet</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTouchEvent</span><span class="o">(</span><span class="n">MotionEvent</span> <span class="n">motionEvent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">isSwipeHold</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// スワイプ禁止の場合</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">onTouchEvent</span><span class="o">(</span><span class="n">motionEvent</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onInterceptTouchEvent</span><span class="o">(</span><span class="n">MotionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">isSwipeHold</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// スワイプ禁止の場合</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">onInterceptTouchEvent</span><span class="o">(</span><span class="n">event</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>この<code>HoldableViewPager</code>を<code>MainActivity.java</code>で使います。<br/>
使い方は簡単で<code>ViewPager</code>を<code>HoldableViewPager</code>で置き換えて、<code>isSwipeHold</code>をtrueにするだけです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">....</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">....</span>
</span><span class='line'>  <span class="c1">// xmlからTabLayoutの取得</span>
</span><span class='line'>  <span class="n">TabLayout</span> <span class="n">tabLayout</span> <span class="o">=</span> <span class="o">(</span><span class="n">TabLayout</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tabs</span><span class="o">);</span>
</span><span class='line'>  <span class="c1">// xmlからViewPagerを取得</span>
</span><span class='line'>  <span class="n">HoldableViewPager</span> <span class="n">viewPager</span> <span class="o">=</span> <span class="o">(</span><span class="n">HoldableViewPager</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">pager</span><span class="o">);</span>
</span><span class='line'>  <span class="c1">// スワイプ禁止設定の追加</span>
</span><span class='line'>  <span class="n">viewPager</span><span class="o">.</span><span class="na">setSwipeHold</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>  <span class="o">....</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">....</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、<code>content_main.xml</code>も<code>ViewPager</code>から<code>HoldableViewPager</code>に変更する必要があります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">RelativeLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tablayoutapplication</span><span class="o">.</span><span class="na">HoldableViewPager</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/pager&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_below</span><span class="o">=</span><span class="s">&quot;@+id/tabs&quot;</span>
</span><span class='line'>   <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">RelativeLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio2.0: TabHostを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/27/android-tabhost/"/>
    <updated>2016-01-27T23:14:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/27/android-tabhost</id>
    <content type="html"><![CDATA[<h4>始めに</h4>

<p>たまには本格的にAndroid開発についてブログを書こうと思います。<br/>
最近は特に期待のAndroid Studio2.0の本リリースが近づいていると思いますし、筆者的にもiOS開発が集中してしまっていたのでモチベーションがAndroidによっています。<br/>
何はともあれシリーズ化を目指して、一先ず <strong>TabHost</strong> から扱ってみたいと思います。</p>

<h4>TabHostを使ってみよう</h4>

<p>さて、早速、TabHostを実装してみたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>1． Android Studioで<code>Blank Activity</code>を選択して、プロジェクトを新規作成<br/>
下記のようなプロジェクト構成ができあがります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">app</span>
</span><span class='line'> <span class="err">┣━━</span> <span class="n">manifests</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┗━━</span> <span class="n">AndroidManifest</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'> <span class="err">┣━━</span> <span class="n">java</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┣━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tabhostapplication</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┃</span>      <span class="err">┗━━</span> <span class="n">MainActivity</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┣━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tabhostapplication</span><span class="o">(</span><span class="n">androidTest</span><span class="o">)</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┃</span>      <span class="err">┗━━</span> <span class="n">ApplicationTest</span>
</span><span class='line'> <span class="err">┃</span>    <span class="err">┗━━</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">tabhostapplication</span><span class="o">(</span><span class="n">test</span><span class="o">)</span>
</span><span class='line'> <span class="err">┃</span>           <span class="err">┗━━</span> <span class="n">ExampleUnitTest</span>
</span><span class='line'> <span class="err">┗━━</span> <span class="n">res</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">drawable</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">layout</span>
</span><span class='line'>      <span class="err">┃</span>     <span class="err">┣━━</span> <span class="n">activity_main</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'>      <span class="err">┃</span>     <span class="err">┗━━</span> <span class="n">content_main</span><span class="o">.</span><span class="na">xml</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">menu</span>
</span><span class='line'>      <span class="err">┣━━</span> <span class="n">mipmap</span>
</span><span class='line'>      <span class="err">┗━━</span> <span class="n">values</span>
</span></code></pre></td></tr></table></div></figure>


<p>2． <code>content_main.xml</code>にTabHostを追加<br/>
下記のようなxmlが作成されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">RelativeLayout</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>  <span class="o">.....</span>
</span><span class='line'>  <span class="nl">tools:</span><span class="n">showIn</span><span class="o">=</span><span class="s">&quot;@layout/activity_main&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">TabHost</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/tabHost&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_alignParentTop</span><span class="o">=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>      <span class="nl">android:</span><span class="n">layout_alignParentStart</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">TabWidget</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@android:id/tabs&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span><span class="o">&gt;&lt;/</span><span class="n">TabWidget</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">FrameLayout</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@android:id/tabcontent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>              <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/linearLayout&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/linearLayout2&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span><span class='line'>              
</span><span class='line'>              <span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/linearLayout3&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>                  <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;/</span><span class="n">FrameLayout</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">TabHost</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">RelativeLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3．各Tabで表示するためのActivityを作成<br/>
右クリックして、NEW > Activity > Empty Activityを追加したいタブ数分 追加する。</p>

<p>各Tabのレイアウトやデザインは各xmlファイルに書きたいので、<br/>
先ほどの<code>content_main.xml</code>を修正します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/linearLayout&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">include</span> <span class="n">layout</span><span class="o">=</span><span class="s">&quot;@layout/activity_tab1&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/linearLayout2&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">include</span> <span class="n">layout</span><span class="o">=</span><span class="s">&quot;@layout/activity_tab2&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">LinearLayout</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">id</span><span class="o">=</span><span class="s">&quot;@+id/linearLayout3&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_width</span><span class="o">=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">layout_height</span><span class="o">=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>  <span class="nl">android:</span><span class="n">orientation</span><span class="o">=</span><span class="s">&quot;vertical&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">include</span> <span class="n">layout</span><span class="o">=</span><span class="s">&quot;@layout/activity_tab3&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">LinearLayout</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>&lt;include layout="@layout/activity_tab1"&gt;</code>のようにファイルのインクルードを指定します。</p>

<p>4．<code>MainActivity.java</code>に<code>TabHost</code>の初期化および設定をする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">AppCompatActivity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// TabHostの初期化および設定処理</span>
</span><span class='line'>      <span class="n">initTabs</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">.....</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">....</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">initTabs</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">TabHost</span> <span class="n">tabHost</span> <span class="o">=</span> <span class="o">(</span><span class="n">TabHost</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tabHost</span><span class="o">);</span>
</span><span class='line'>          <span class="n">tabHost</span><span class="o">.</span><span class="na">setup</span><span class="o">();</span>
</span><span class='line'>          <span class="n">TabHost</span><span class="o">.</span><span class="na">TabSpec</span> <span class="n">spec</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// Tab1</span>
</span><span class='line'>          <span class="n">spec</span> <span class="o">=</span> <span class="n">tabHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;Tab1&quot;</span><span class="o">)</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;Home&quot;</span><span class="o">,</span> <span class="n">ContextCompat</span><span class="o">.</span><span class="na">getDrawable</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_home_white_36dp</span><span class="o">))</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">linearLayout</span><span class="o">);</span>
</span><span class='line'>          <span class="n">tabHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">spec</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// Tab2</span>
</span><span class='line'>          <span class="n">spec</span> <span class="o">=</span> <span class="n">tabHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;Tab2&quot;</span><span class="o">)</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;Event&quot;</span><span class="o">,</span> <span class="n">ContextCompat</span><span class="o">.</span><span class="na">getDrawable</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_event_white_36dp</span><span class="o">))</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">linearLayout2</span><span class="o">);</span>
</span><span class='line'>          <span class="n">tabHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">spec</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// Tab3</span>
</span><span class='line'>          <span class="n">spec</span> <span class="o">=</span> <span class="n">tabHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;Tab3&quot;</span><span class="o">)</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;Event&quot;</span><span class="o">,</span> <span class="n">ContextCompat</span><span class="o">.</span><span class="na">getDrawable</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">ic_event_white_36dp</span><span class="o">))</span>
</span><span class='line'>                  <span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">linearLayout3</span><span class="o">);</span>
</span><span class='line'>          <span class="n">tabHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">spec</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">tabHost</span><span class="o">.</span><span class="na">setCurrentTab</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalArgumentException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">RuntimeException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでタブでの画面遷移完成です！<br/>
完成した画面がこちら(<code>TabHost</code>しか実装してないので、簡素ですが&hellip;)</p>

<p><img src="http://grandbig.github.io/images/android-tabhost.png" alt="TabHost実装画面" /></p>

<p>本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swiftでドキュメントコメントを正しく書こう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/24/swift-document-comment/"/>
    <updated>2016-01-24T00:13:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/24/swift-document-comment</id>
    <content type="html"><![CDATA[<h4>Swiftでのドキュメントコメントの書き方を覚えよう！</h4>

<p>先日、<a href="http://grandbig.github.io/blog/2016/01/12/jazzy/">jazzy: リファレンス自動生成ツール</a>の記事を書きました。<br/>
その中で幾つかのドキュメントコメントの書き方を紹介しましたが、改めて説明しておきたいと思います。</p>

<p>Swiftではドキュメントコメントの中でマークアップ言語の書式が有効に働きます。<br/>
代表的なマークアップ言語の書式は下記の通りです。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>マークアップ言語の書式</h4>

<h5>見出し</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp"># 最大見出し</span>
</span><span class='line'><span class="cp">## 大見出し</span>
</span><span class='line'><span class="cp">### 中見出し</span>
</span><span class='line'><span class="cp">#### 見出し</span>
</span><span class='line'><span class="cp">##### 小見出し</span>
</span><span class='line'><span class="cp">###### 最小見出し</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_1.png" alt="見出しを書いた場合" /></p>

<h5>リスト</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">-</span> <span class="err">リスト項目１</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">リスト小項目１</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">リスト小項目２</span>
</span><span class='line'>    <span class="o">-</span> <span class="err">リスト小項目３</span>
</span><span class='line'><span class="o">-</span> <span class="err">リスト項目２</span>
</span><span class='line'><span class="o">-</span> <span class="err">リスト項目３</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_2.png" alt="リストを書いた場合" /></p>

<h5>順序リスト</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="mf">1.</span> <span class="err">順序リスト項目１</span>
</span><span class='line'>    <span class="mf">1.</span> <span class="err">小順序リスト項目１</span>
</span><span class='line'>    <span class="mf">2.</span> <span class="err">小順序リスト項目２</span>
</span><span class='line'>    <span class="mf">3.</span> <span class="err">小順序リスト項目３</span>
</span><span class='line'><span class="mf">2.</span> <span class="err">順序リスト項目２</span>
</span><span class='line'><span class="mf">3.</span> <span class="err">順序リスト項目３</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_3.png" alt="順序リストを書いた場合" /></p>

<h5>ItalicとBold</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">normal</span>
</span><span class='line'>
</span><span class='line'><span class="o">*</span><span class="n">Italic</span><span class="o">*</span>
</span><span class='line'>
</span><span class='line'><span class="o">**</span><span class="n">Bold</span><span class="o">**</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_4.png" alt="ItalicとBold" /></p>

<h5>URLリンク</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">URL</span><span class="err">リンク</span><span class="p">](</span><span class="nl">https:</span><span class="c1">//developer.apple.com/jp/)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_5.png" alt="URLリンク" /></p>

<h5>罫線</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">abcdefg</span>
</span><span class='line'><span class="o">***</span>
</span><span class='line'><span class="mi">123456</span>
</span><span class='line'>      
</span><span class='line'><span class="o">---</span>
</span><span class='line'><span class="err">あいうえお</span>
</span><span class='line'><span class="n">___</span>
</span><span class='line'><span class="err">かきくけこ</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_6.png" alt="罫線" /></p>

<h5>コード表記</h5>

<p>(Octopressの都合上、ここでは書き方が異なりますが、ご了承ください。)</p>

<p>` ` `<br/>
self.sampleMethod()<br/>
` ` `</p>

<p><img src="http://grandbig.github.io/images/documment_comment_7.png" alt="コード表記" /></p>

<h4>Swiftのドキュメントコメントの書式</h4>

<h5>MARK</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// MARK: - Properties</span>
</span><span class='line'><span class="n">var</span> <span class="nl">sample:</span><span class="n">String</span> <span class="o">=</span> <span class="s">&quot;sampleProperty&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// MARK: - Method</span>
</span><span class='line'><span class="n">func</span> <span class="n">sampleMethod</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="s">&quot;This is sampleMethod.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_8.png" alt="MARK" /></p>

<h5>FIXME</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="nf">sampleMethod</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// FIXME: - ログ出力ではなく、アラートを出す</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="s">&quot;This is sampleMethod.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_9.png" alt="FIXME" /></p>

<h5>TODO</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">func</span> <span class="nf">sampleMethod</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// TODO: - ログ出力ではなく、何か処理を書く(まだ決まっていないけど)</span>
</span><span class='line'>  <span class="n">print</span><span class="p">(</span><span class="s">&quot;This is sampleMethod.&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_10.png" alt="TODO" /></p>

<h5>Parameter / Throws / Returns</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> サンプルメソッド</span>
</span><span class='line'><span class="cm">       </span>
</span><span class='line'><span class="cm"> - parameter name: パラメータの書き方</span>
</span><span class='line'><span class="cm"> - throws: 例外処理の書き方</span>
</span><span class='line'><span class="cm"> - returns: 戻り値の書き方</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">func</span> <span class="n">sampleMethod2</span><span class="p">(</span><span class="nl">name:</span><span class="n">String</span><span class="p">)</span> <span class="n">throws</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>                                  
</span><span class='line'>  <span class="k">return</span> <span class="s">&quot;result: &quot;</span> <span class="o">+</span> <span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://grandbig.github.io/images/documment_comment_11.png" alt="Parameter / Throws / Returns" /></p>

<h5>Description内で利用可能な文言</h5>

<p>この他にクラス, プロパティ, メソッドの説明(Description)を書く際に利用可能な予約語的なものが幾つかあります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> - Attention: 注意書き</span>
</span><span class='line'><span class="cm"> - Author: 作成者が一人の場合</span>
</span><span class='line'><span class="cm"> - Authors: 作成者が複数人の場合</span>
</span><span class='line'><span class="cm"> - Bug: バグの詳細</span>
</span><span class='line'><span class="cm"> - Copyright: 著作権の所在</span>
</span><span class='line'><span class="cm"> - Date: 日付(作成日, 更新日など)</span>
</span><span class='line'><span class="cm"> - Experiment: 実験内容</span>
</span><span class='line'><span class="cm"> - Important: 重要事項</span>
</span><span class='line'><span class="cm"> - Invariant: 不変事項</span>
</span><span class='line'><span class="cm"> - Note: その他、必要事項</span>
</span><span class='line'><span class="cm"> - Precondition: 事前条件</span>
</span><span class='line'><span class="cm"> - Postcondition: 事後条件</span>
</span><span class='line'><span class="cm"> - Remark: 備考</span>
</span><span class='line'><span class="cm"> - Requires: 要求事項</span>
</span><span class='line'><span class="cm"> - SeeAlso: 参照事項</span>
</span><span class='line'><span class="cm"> - Since: いつから実装されているか</span>
</span><span class='line'><span class="cm"> - Version: バージョン</span>
</span><span class='line'><span class="cm"> - Warning: 警告                  </span>
</span><span class='line'><span class="cm">*/</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のように書くことで、 <strong>太字</strong> かつ <strong>各用語に属する説明</strong> が付与されます。</p>

<p><img src="http://grandbig.github.io/images/documment_comment_12.png" alt="予約語1" /></p>

<p><img src="http://grandbig.github.io/images/documment_comment_13.png" alt="予約語2" /></p>

<h4>まとめ</h4>

<p>さて、いかがだったでしょうか？<br/>
これだけ知っていれば、ほぼ確実に困ることはないと思います。<br/>
どこまで頑張って書くかは開発者次第かもしれませんが、やはり初めてコードを見る人でも極力伝わるようにしておくことは必要不可欠かと思います。</p>

<p>といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kotlinを使ってみよう！(2) : OkHttp編]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/23/kotlin-okhttp/"/>
    <updated>2016-01-23T16:47:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/23/kotlin-okhttp</id>
    <content type="html"><![CDATA[<h4>今回のKotlinのお題は？</h4>

<p>さて、久々にKotlinについて勉強をしたいと思います。<br/>
今回のお題は<a href="http://grandbig.github.io/blog/2016/01/19/android-okhttp/">Android StudioでOkHttp3.0.1を使おう！</a>にしたいと思います。<br/>
では、早速見ていきましょう！</p>

<h4>KotlinでOkHttp3.0.1を使うソースを書いてみる</h4>

<p>まずは、OkHttp3.0.1を使ったソースを書いてみます。<br/>
OkHttpの導入はJavaと同じです。</p>

<p>build.gradle(app)に下記を追加しましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'>  <span class="n">compile</span> <span class="err">&#39;</span><span class="n">com</span><span class="o">.</span><span class="na">squareup</span><span class="o">.</span><span class="na">okhttp3</span><span class="o">:</span><span class="nl">okhttp:</span><span class="mf">3.0</span><span class="o">.</span><span class="mi">1</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>Javaで紹介したときと同様に、Open Weather Map APIを使ったGETリクエストを利用します。<br/>
OkHttpでは通信処理をメインスレッドで実行しようとするとエラーが発生してしまうので、<code>AsyncTask</code>を利用します。<br/>
<code>AsyncTask</code>を継承したクラスを書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">simpleapplication</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.AsyncTask</span>
</span><span class='line'>
</span><span class='line'><span class="n">open</span> <span class="kd">class</span> <span class="nc">MyAsyncTask</span> <span class="o">:</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;()</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">override</span> <span class="n">fun</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">vararg</span> <span class="nl">params:</span> <span class="n">Void</span><span class="o">):</span> <span class="n">String</span><span class="o">?</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">null</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここでKotlinの書き方を説明しましょう。</p>

<ul>
<li><code>open</code>

<ul>
<li>他のクラスからの継承を許可するアノテーション</li>
<li><code>MainActivity</code>で<code>doInBackground</code>メソッドをオーバーライドするために設定<br/>
　</li>
</ul>
</li>
<li><code>vararg</code>

<ul>
<li>可変長にしたい引数の名前に設定</li>
<li><code>donInBackground</code>は引数が1つ以上設定可能な可変長なものを持つため利用</li>
</ul>
</li>
</ul>


<p>続いて、<code>MainActivity</code>を書いていきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">simpleapplication</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.AsyncTask</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">okhttp3.OkHttpClient</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">okhttp3.Request</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">okhttp3.Response</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">MainActivity</span><span class="o">:</span><span class="n">AppCompatActivity</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">internal</span> <span class="n">var</span> <span class="n">client</span> <span class="o">=</span> <span class="n">OkHttpClient</span><span class="o">()</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">override</span> <span class="n">fun</span> <span class="nf">onCreate</span><span class="o">(</span><span class="nl">savedInstanceState:</span> <span class="n">Bundle</span><span class="o">?)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">)</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">)</span>
</span><span class='line'>      <span class="n">val</span> <span class="n">toolbar</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">toolbar</span><span class="o">)</span> <span class="n">as</span> <span class="n">Toolbar</span>
</span><span class='line'>      <span class="n">setSupportActionBar</span><span class="o">(</span><span class="n">toolbar</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// GET Weatherボタンを取得して、クリック処理を実装</span>
</span><span class='line'>      <span class="n">val</span> <span class="n">btn</span> <span class="o">=</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">button</span><span class="o">)</span> <span class="n">as</span> <span class="n">Button</span>
</span><span class='line'>      <span class="n">btn</span><span class="o">.</span><span class="na">setOnClickListener</span> <span class="o">{</span>
</span><span class='line'>          <span class="nl">object:</span> <span class="n">MyAsyncTask</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">override</span> <span class="n">fun</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">vararg</span> <span class="nl">params:</span> <span class="n">Void</span><span class="o">):</span> <span class="n">String</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">var</span> <span class="nl">res:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>                  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">res</span> <span class="o">=</span> <span class="n">run</span><span class="o">(</span><span class="s">&quot;http://api.openweathermap.org/data/2.5/weather?APPID=&lt;自身のAPPID&gt;&amp;q=Tokyo&quot;</span><span class="o">)</span>
</span><span class='line'>                      <span class="n">val</span> <span class="n">resJson</span> <span class="o">=</span> <span class="n">JsonObject</span><span class="o">(</span><span class="n">res</span><span class="o">)</span>
</span><span class='line'>                      <span class="n">val</span> <span class="n">weathers</span> <span class="o">=</span> <span class="n">resJson</span><span class="o">.</span><span class="na">getJSONArray</span><span class="o">(</span><span class="s">&quot;weather&quot;</span><span class="o">)</span>
</span><span class='line'>                      <span class="n">val</span> <span class="n">weather</span> <span class="o">=</span> <span class="n">weathers</span><span class="o">.</span><span class="na">getJsonObject</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span>
</span><span class='line'>                      <span class="n">val</span> <span class="n">description</span> <span class="o">=</span> <span class="n">weather</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;description&quot;</span><span class="o">)</span>
</span><span class='line'>                      <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;MainActivity&quot;</span><span class="o">,</span> <span class="n">description</span><span class="o">)</span>
</span><span class='line'>                      <span class="n">res</span> <span class="o">=</span> <span class="n">description</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="nl">e:</span> <span class="n">IOException</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">()</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="nl">e:</span> <span class="n">JSONException</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">()</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}.</span><span class="na">execute</span><span class="o">()</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">fun</span> <span class="nf">run</span><span class="o">(</span><span class="nl">url:</span> <span class="n">String</span><span class="o">):</span> <span class="n">String</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">val</span> <span class="n">request</span> <span class="o">=</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">().</span><span class="na">url</span><span class="o">(</span><span class="n">url</span><span class="o">).</span><span class="na">build</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">val</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">()</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">string</span><span class="o">()</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここでもKotlinの書き方を説明します。</p>

<ul>
<li><code>object</code>

<ul>
<li>匿名サブクラスのインスタンスの返却式</li>
<li>setOnClickListenerの引数にMyAsyncTaskを匿名クラスとして指定するために利用</li>
<li>Kotlinではインスタンス生成に<code>new</code>は利用しない</li>
</ul>
</li>
</ul>


<p>さて、いかがでしたでしょうか？<br/>
KotlinはSwiftに近い書式で書けるため、筆者にとっては非常にわかりやすいです。<br/>
ただ、Javaとの互換性が非常に高いため、やはりそれなりに覚えなくてはならないことがありますね。</p>

<p>これからも少しずつではありますが、Kotlinを見ていきたいと思います。<br/>
といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android StudioでOkHttp3.0.1を使おう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/19/android-okhttp/"/>
    <updated>2016-01-19T00:35:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/19/android-okhttp</id>
    <content type="html"><![CDATA[<h4>Volleyではなく、OkHttpを使おう！</h4>

<p>さて、本日は久しぶりにAndroidの話です。<br/>
これまでAndroidの通信ライブラリとして活躍してきた <strong>Volley</strong> が敬遠されている傾向があります。<br/>
と言うのも、Volleyが依存しているApache Http ClientがAPI Level22からdeprecatedになったためです。</p>

<p>では、今後は何を使っていけば良いのでしょうか？<br/>
もちろん開発者自身で通信処理を0から実装することも悪いことではないのですが、<br/>
やはり、少しでも開発効率を良くするためにオープンソースを利用したいところですよね。</p>

<p>そこで、昨今、皆が使っているものとして<a href="http://square.github.io/okhttp/">OkHttp</a>というものがあります。<br/>
これは <strong>HTTP</strong> だけでなく、 <strong>HTTP/2</strong> も対応しているため、きちんと最新を追えているという安心感がある点も良い印象です。</p>

<p>また、<a href="http://techlife.cookpad.com/entry/2015/06/25/093507">クックパッド開発者ブログ</a>でも <strong>OkHttp</strong> への移行を進める旨が書かれていますので、知っていて損はなさそうです。</p>

<p>今回は、OKHttpを使ったサンプルを載せたいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>OKHttpの導入</h4>

<p>Android StudioにOKHttpを導入しましょう。<br/>
導入は超簡単です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">dependencies</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'>  <span class="n">compile</span> <span class="err">&#39;</span><span class="n">com</span><span class="o">.</span><span class="na">squareup</span><span class="o">.</span><span class="na">okhttp3</span><span class="o">:</span><span class="nl">okhttp:</span><span class="mf">3.0</span><span class="o">.</span><span class="mi">1</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>はい。以上です。</p>

<h4>OKHttpでGETリクエストを実行</h4>

<p>さて、GETリクエストを実行してみましょう。<br/>
今回は下記のようなサンプルアプリを作成しました。<br/>
<img src="http://grandbig.github.io/images/android-okhttp.png" alt="サンプルアプリ" /></p>

<p>まずは、<code>AsyncTask</code>を継承したクラスを下記のように作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">example</span><span class="o">.</span><span class="na">takahiro</span><span class="o">.</span><span class="na">simpleapplication</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">android.os.AsyncTask</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Created by kato_takahiro on 2016/01/19.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyAsyncTask</span> <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">Void</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// コンストラクタ</span>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">MyAsyncTask</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="n">String</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>さて、<code>MainActivity.java</code>内で実行してみます。<br/>
このとき、 <strong>GET Weather</strong> ボタンをタップしたときに天気情報を取得するものとします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">AppCompatActivity</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Toolbar</span> <span class="n">toolbar</span> <span class="o">=</span> <span class="o">(</span><span class="n">Toolbar</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">toolbar</span><span class="o">);</span>
</span><span class='line'>      <span class="n">setSupportActionBar</span><span class="o">(</span><span class="n">toolbar</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// GET Weatherボタンを取得して、クリック処理を実装</span>
</span><span class='line'>      <span class="n">Button</span> <span class="n">btn</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">button</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btn</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">new</span> <span class="nf">MyAsyncTask</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>                  <span class="nd">@Override</span>
</span><span class='line'>                  <span class="kd">protected</span> <span class="n">String</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">String</span> <span class="n">res</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="n">run</span><span class="o">(</span><span class="s">&quot;http://api.openweathermap.org/data/2.5/weather?APPID=&lt;自身のAPPID&gt;&amp;q=Tokyo&quot;</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">JSONObject</span> <span class="n">resJson</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JSONObject</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">JSONArray</span> <span class="n">weathers</span> <span class="o">=</span> <span class="n">resJson</span><span class="o">.</span><span class="na">getJSONArray</span><span class="o">(</span><span class="s">&quot;weather&quot;</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">JSONObject</span> <span class="n">weather</span> <span class="o">=</span> <span class="n">weathers</span><span class="o">.</span><span class="na">getJSONObject</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>                          <span class="n">String</span> <span class="n">description</span> <span class="o">=</span> <span class="n">weather</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">&quot;description&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                          <span class="n">res</span> <span class="o">=</span> <span class="n">description</span><span class="o">;</span>
</span><span class='line'>                      <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                      <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">JSONException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                      <span class="k">return</span> <span class="n">res</span><span class="o">;</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}.</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// OKHttpを使った通信処理</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">run</span><span class="o">(</span><span class="n">String</span> <span class="n">url</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
</span><span class='line'>              <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="n">url</span><span class="o">)</span>
</span><span class='line'>              <span class="o">.</span><span class="na">build</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">string</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>忘れずに<code>AndroidManifest.xml</code>で通信許可しておきましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&quot;utf-8&quot;</span><span class="o">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">manifest</span> <span class="nl">xmlns:</span><span class="n">android</span><span class="o">=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="n">package</span><span class="o">=</span><span class="s">&quot;com.example.takahiro.simpleapplication&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">uses</span><span class="o">-</span><span class="n">permission</span> <span class="nl">android:</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="o">&gt;&lt;/</span><span class="n">uses</span><span class="o">-</span><span class="n">permission</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;/</span><span class="n">manifest</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>まだ、GETしか試していませんが、割りと簡単に実装できますね。</p>

<h4>注意点</h4>

<p>初め、実装するにあたって、躓いたことを書いておきます。<br/>
何となしに<code>OKHttp</code>を実装し、デバッグしたところ、<code>android.os.NetworkOnMainThreadException</code>が発生しました。</p>

<p>これは、通信処理をメインスレッドで実行しようとしたために発生しました。<br/>
そのため、<code>AsyncTask</code>を使って別スレッドで通信処理を実行するように改修する必要がありました。</p>

<p>さて、今回は筆者用のメモの意味合いが強いのですが、Androidアプリの開発に関する記事も今度どんどん増やしていきたいと思います。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SwiftでGCDを使ってみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/18/semaphore/"/>
    <updated>2016-01-18T09:26:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/18/semaphore</id>
    <content type="html"><![CDATA[<h4>GCDとは</h4>

<p>GCDとはGrand Central Dispatchの略で、iOSアプリでマルチスレッド処理を実行したいときに利用する手法です。<br/>
書き方は独特ですが、慣れてしまえば、簡単に使いこなすことができると思います。<br/>
今回は筆者が困ったときに使う方法について紹介していきます。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>メインスレッドの処理を妨げたくないとき</h4>

<p>iOSアプリでは描画はメインスレッドでしか実行できません。<br/>
(もし、それ以外で実行しようとすれば、アプリがダウンしてしまいます。)</p>

<p>筆者がアプリを開発しているときに、<br/>
検証のため、ログをローカルストレージに保存したい場面がありました。<br/>
ログ保存処理は一時的な検証のためであり、本来のメイン処理を妨げたくはありません。</p>

<p>ログ保存処理は <strong>描画を含まない処理</strong> であるため、<br/>
別にスレッドを立てて、そちらに任せてしまうことができます。<br/>
これにより、メインスレッドに影響を及ぼすことなく、処理を実行することができます。</p>

<p>下記にサンプルを載せます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// ViewController.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">let</span> <span class="nl">queue:</span><span class="n">dispatch_queue_t</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">dispatch_async</span><span class="p">(</span><span class="n">queue</span><span class="p">)</span> <span class="p">{()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="c1">// 別スレッドでの処理</span>
</span><span class='line'>          <span class="c1">// 例えば、Realmを使った保存処理などを書く(今回は省略します)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// アラート表示処理</span>
</span><span class='line'>      <span class="n">let</span> <span class="nl">alertController:</span><span class="n">UIAlertController</span> <span class="o">=</span> <span class="n">UIAlertController</span><span class="p">(</span><span class="nl">title:</span> <span class="s">&quot;確認&quot;</span><span class="p">,</span> <span class="nl">message:</span> <span class="n">message</span><span class="p">,</span> <span class="nl">preferredStyle:</span> <span class="p">.</span><span class="n">Alert</span><span class="p">)</span>
</span><span class='line'>      <span class="n">let</span> <span class="nl">okAction:</span><span class="n">UIAlertAction</span> <span class="o">=</span> <span class="n">UIAlertAction</span><span class="p">(</span><span class="nl">title:</span> <span class="s">&quot;OK&quot;</span><span class="p">,</span> <span class="nl">style:</span> <span class="p">.</span><span class="n">Default</span><span class="p">)</span> <span class="p">{</span> <span class="p">(</span><span class="n">alert</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="c1">// OKを選択したときに実行される処理</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">alertController</span><span class="p">.</span><span class="n">addAction</span><span class="p">(</span><span class="n">okAction</span><span class="p">)</span>
</span><span class='line'>      <span class="n">presentViewController</span><span class="p">(</span><span class="n">alertController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">,</span> <span class="nl">completion:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>このように <strong>dispatch_async</strong> 内でRealmへのログ保存処理をすれば、<br/>
別スレッドでの処理となるため、<br/>
ログ保存処理を待たずにアラートの表示処理を実行することができます。</p>

<p><strong>dispatch_get_global_queue</strong> とその引数などの詳細は<a href="https://github.com/mixi-inc/iOSTraining/wiki/8.2-Grand-Central-Dispatch">8.2 Grand Central Dispatch</a>に非常に詳しく書かれているので、ぜひご参照ください。</p>

<h4>複数の非同期処理の情報で何か処理がしたいとき</h4>

<p>例えば、複数種類のWeb APIを叩いて、それぞれから取得した情報を合算して、画面に表示したいとします。<br/>
（別々にAPIを叩いて取得した情報を別々に返せば問題ない場面では当てはまらないので注意）</p>

<p>そんなときは <strong>dispatch_group_async</strong> と <strong>dispatch_group_notify</strong> を使います。</p>

<p>下記にサンプルを載せます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewControlelr:</span><span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">let</span> <span class="nl">queue:</span><span class="n">dispatch_queue_t</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">let</span> <span class="nl">group:</span><span class="n">dispatch_group_t</span> <span class="o">=</span> <span class="n">dispatch_group_create</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm"> 指定都市の天気情報を取得する処理</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">getWeather</span><span class="p">(</span><span class="nl">location:</span><span class="n">String</span><span class="p">,</span> <span class="nl">closure:</span><span class="p">(</span><span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">GET</span><span class="p">,</span> <span class="s">&quot;http://api.openweathermap.org/data/2.5/weather?APPID=&lt;自身のAPPID&gt;&quot;</span><span class="p">,</span> <span class="nl">parameters:</span>
</span><span class='line'>          <span class="p">[</span><span class="s">&quot;q&quot;</span><span class="o">:</span><span class="n">location</span><span class="p">]).</span><span class="n">response</span> <span class="p">{</span> <span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">response</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">error</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                  <span class="n">let</span> <span class="n">dataDict</span> <span class="o">=</span> <span class="n">try</span> <span class="n">NSJSONSerialization</span><span class="p">.</span><span class="n">JSONObjectWithData</span><span class="p">(</span><span class="n">data</span><span class="o">!</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">NSJSONReadingOptions</span><span class="p">.</span><span class="n">AllowFragments</span><span class="p">)</span>
</span><span class='line'>                  <span class="n">let</span> <span class="nl">weatherArray:</span><span class="p">[</span><span class="n">AnyObject</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataDict</span><span class="p">[</span><span class="s">&quot;weather&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">!</span> <span class="p">[</span><span class="n">AnyObject</span><span class="p">]</span>
</span><span class='line'>                  <span class="n">let</span> <span class="nl">weather:</span><span class="n">AnyObject</span> <span class="o">=</span> <span class="n">weatherArray</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>                  <span class="n">let</span> <span class="nl">description:</span><span class="n">String</span> <span class="o">=</span> <span class="n">weather</span><span class="p">[</span><span class="s">&quot;description&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">!</span> <span class="n">String</span>
</span><span class='line'>                  <span class="n">closure</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
</span><span class='line'>              <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                  <span class="n">print</span><span class="p">(</span><span class="s">&quot;例外が発生しました&quot;</span><span class="p">)</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm"> 複数都市の天気情報を取得しログ出力する処理</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">getMultiLocationWeather</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">var</span> <span class="nl">tokyoWeather:</span><span class="n">String</span> <span class="o">=</span> <span class="s">&quot;unknown&quot;</span>
</span><span class='line'>      <span class="n">var</span> <span class="nl">osakaWeather:</span><span class="n">String</span> <span class="o">=</span> <span class="s">&quot;unknown&quot;</span>
</span><span class='line'>      <span class="n">var</span> <span class="nl">saitamaWeather:</span><span class="n">String</span> <span class="o">=</span> <span class="s">&quot;unknown&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// グループに 「+1」</span>
</span><span class='line'>      <span class="n">dispatch_group_enter</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">)</span>
</span><span class='line'>      <span class="n">dispatch_group_async</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">queue</span><span class="p">)</span> <span class="p">{</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="n">self</span><span class="p">.</span><span class="n">getWeather</span><span class="p">(</span><span class="s">&quot;Tokyo, jp&quot;</span><span class="p">,</span> <span class="nl">closure:</span> <span class="p">{</span> <span class="p">(</span><span class="n">weather</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>              <span class="n">tokyoWeather</span> <span class="o">=</span> <span class="n">weather</span>
</span><span class='line'>              <span class="c1">// グループに 「-1」</span>
</span><span class='line'>              <span class="n">dispatch_group_leave</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">)</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// グループに 「+1」</span>
</span><span class='line'>      <span class="n">dispatch_group_enter</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">)</span>
</span><span class='line'>      <span class="n">dispatch_group_async</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">queue</span><span class="p">)</span> <span class="p">{</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="n">self</span><span class="p">.</span><span class="n">getWeather</span><span class="p">(</span><span class="s">&quot;Osaka, jp&quot;</span><span class="p">,</span> <span class="nl">closure:</span> <span class="p">{</span> <span class="p">(</span><span class="n">weather</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>              <span class="n">osakaWeather</span> <span class="o">=</span> <span class="n">weather</span>
</span><span class='line'>              <span class="c1">// グループに 「-1」</span>
</span><span class='line'>              <span class="n">dispatch_group_leave</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">)</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// グループに 「+1」</span>
</span><span class='line'>      <span class="n">dispatch_group_enter</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">)</span>
</span><span class='line'>      <span class="n">dispatch_group_async</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">queue</span><span class="p">)</span> <span class="p">{</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="n">self</span><span class="p">.</span><span class="n">getWeather</span><span class="p">(</span><span class="s">&quot;Saitama, jp&quot;</span><span class="p">,</span> <span class="nl">closure:</span> <span class="p">{</span> <span class="p">(</span><span class="n">weather</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>              <span class="n">saitamaWeather</span> <span class="o">=</span> <span class="n">weather</span>
</span><span class='line'>              <span class="c1">// グループに 「-1」</span>
</span><span class='line'>              <span class="n">dispatch_group_leave</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">)</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// 全ての処理が終わったら実行される</span>
</span><span class='line'>      <span class="n">dispatch_group_notify</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">group</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">queue</span><span class="p">)</span> <span class="p">{</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="n">print</span><span class="p">(</span><span class="s">&quot;Tokyo: \(tokyoWeather), Osaka: \(osakaWeather), Saitama: \(saitamaWeather)&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上のように、3つの非同期処理で取得した情報を使って、文章を作成し、ログ出力することができます。</p>

<h4>非同期処理を同期処理にしたい(排他制御を使いたい)とき</h4>

<p>さて、こちらは正直、筆者は利用したいと思ったことがありません。<br/>
恐らく、かなり多機能なアプリで、極力多くの処理を並列に実行したい場合に必要なのかなと思ったりします。<br/>
では、なぜ書くかというと、先日スタックオーバーフローを見て気になったからです。</p>

<p>因みに、筆者のスタックオーバーフローユーザは<a href="http://ja.stackoverflow.com/users/8968/takahiro">こちら</a>です。</p>

<p><a href="https://blog.katty.in/2365">Objective-Cで非同期処理を同期処理にする方法。</a>の例をSwiftで書き直します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span><span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">let</span> <span class="nl">semaphore:</span><span class="n">dispatch_semaphore_t</span> <span class="o">=</span> <span class="n">dispatch_semaphore_create</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">let</span> <span class="nl">queue:</span><span class="n">dispatch_queue_t</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">func</span> <span class="n">printLog</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">dispatch_async</span><span class="p">(</span><span class="n">queue</span><span class="p">)</span> <span class="p">{</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="k">for</span><span class="p">(</span><span class="n">var</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>              <span class="n">print</span><span class="p">(</span><span class="s">&quot;Process: \(i)&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">dispatch_semaphore_signal</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">semaphore</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;wait...&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">dispatch_semaphore_wait</span><span class="p">(</span><span class="n">semaphore</span><span class="p">,</span> <span class="n">DISPATCH_TIME_FOREVER</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;finish&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行してみれば、下記のようにログ出力されることがわかるでしょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">wait</span><span class="p">...</span>
</span><span class='line'><span class="nl">Process:</span> <span class="mi">0</span>
</span><span class='line'><span class="nl">Process:</span> <span class="mi">1</span>
</span><span class='line'><span class="nl">Process:</span> <span class="mi">2</span>
</span><span class='line'><span class="nl">Process:</span> <span class="mi">3</span>
</span><span class='line'><span class="nl">Process:</span> <span class="mi">4</span>
</span><span class='line'><span class="n">finish</span>
</span></code></pre></td></tr></table></div></figure>


<p>非同期処理を待ってから、 <strong>finish</strong> とログ出力されていることがわかります。<br/>
この例ではわかりやすさのため、 <strong>dispatch_async</strong> を使って、非同期処理を作り出しています。</p>

<p>iOSアプリの開発でよく利用する非同期処理と言えば、通信処理ではないでしょうか？<br/>
Swiftでは特に<a href="https://github.com/Alamofire/Alamofire">Alamofire</a>がよく利用されています。</p>

<p>Alamofireを使って、上記と似たことをやろうとすると、下記のように書くかもしれません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp">#import UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span><span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">let</span> <span class="nl">semaphore:</span><span class="n">dispatch_semaphore_t</span> <span class="o">=</span> <span class="n">dispatch_semaphore_create</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">let</span> <span class="nl">queue:</span><span class="n">dispatch_queue_t</span> <span class="o">=</span> <span class="n">dispatch_get_global_queue</span><span class="p">(</span><span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">func</span> <span class="n">getWeather</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">GET</span><span class="p">,</span> <span class="s">&quot;http://api.openweathermap.org/data/2.5/weather?APPID=&lt;自身のAPPID&gt;&quot;</span><span class="p">,</span> <span class="nl">parameters:</span>
</span><span class='line'>          <span class="p">[</span><span class="nl">q:</span> <span class="s">&quot;Tokyo, jp&quot;</span><span class="p">]).</span><span class="n">response</span> <span class="p">{</span> <span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">response</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>              <span class="k">if</span><span class="p">(</span><span class="n">error</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                      <span class="n">let</span> <span class="n">dataDict</span> <span class="o">=</span> <span class="n">try</span> <span class="n">NSJSONSerialization</span><span class="p">.</span><span class="n">JSONObjectWithData</span><span class="p">(</span><span class="n">data</span><span class="o">!</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">NSJSONReadingOptions</span><span class="p">.</span><span class="n">AllowFragments</span><span class="p">)</span>
</span><span class='line'>                      <span class="n">let</span> <span class="nl">weatherArray:</span><span class="p">[</span><span class="n">AnyObject</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataDict</span><span class="p">[</span><span class="s">&quot;weather&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">!</span> <span class="p">[</span><span class="n">AnyObject</span><span class="p">]</span>
</span><span class='line'>                      <span class="n">let</span> <span class="nl">weather:</span><span class="n">AnyObject</span> <span class="o">=</span> <span class="n">weatherArray</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>                      <span class="n">let</span> <span class="nl">description:</span><span class="n">String</span> <span class="o">=</span> <span class="n">weather</span><span class="p">[</span><span class="s">&quot;description&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">!</span> <span class="n">String</span>
</span><span class='line'>
</span><span class='line'>                      <span class="n">dispatch_semaphore_signal</span><span class="p">(</span><span class="n">semaphore</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                      <span class="n">print</span><span class="p">(</span><span class="s">&quot;例外が発生しました&quot;</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;wait...&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">dispatch_semaphore_wait</span><span class="p">(</span><span class="n">semaphore</span><span class="p">,</span> <span class="n">DISPATCH_TIME_FOREVER</span><span class="p">)</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="s">&quot;finish&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>しかしながら、これは実行しても <strong>finish</strong> とログを出力することはありません。<br/>
理由は、<strong>dispatch_semaphore_wait</strong> を実行した後、メインスレッドを停止するのですが、<br/>
<code>Alamofire</code>の <strong>response</strong> のクロージャ処理はメインスレッドで実行されるため、<br/>
<strong>dispatch_semaphore_signal</strong> が実行されることがないからです。</p>

<p>実際に<code>Alamofire</code>の<code>ResponseSerialization.swift</code> > <code>Request</code> クラスを見てみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">public</span> <span class="n">func</span> <span class="nf">response</span><span class="p">(</span>
</span><span class='line'>  <span class="n">queue</span> <span class="nl">queue:</span> <span class="n">dispatch_queue_t</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">,</span>
</span><span class='line'>  <span class="nl">completionHandler:</span> <span class="p">(</span><span class="n">NSURLRequest</span><span class="o">?</span><span class="p">,</span> <span class="n">NSHTTPURLResponse</span><span class="o">?</span><span class="p">,</span> <span class="n">NSData</span><span class="o">?</span><span class="p">,</span> <span class="n">NSError</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span>
</span><span class='line'>  <span class="o">-&gt;</span> <span class="n">Self</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">delegate</span><span class="p">.</span><span class="n">queue</span><span class="p">.</span><span class="n">addOperationWithBlock</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">dispatch_async</span><span class="p">(</span><span class="n">queue</span> <span class="o">??</span> <span class="n">dispatch_get_main_queue</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">completionHandler</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">request</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">response</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">delegate</span><span class="p">.</span><span class="n">data</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">delegate</span><span class="p">.</span><span class="n">error</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">self</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>となっていることがわかるはずです。</p>

<p>さて、いかがでしたでしょうか？<br/>
GCDは非常に便利な反面、迂闊に使うと思わぬ落とし穴にハマってしまうことがあります。<br/>
とは言え、<br/>
一度ハマってみないと身につかないのがプログラミングの世界だと思っているので、<br/>
ぜひじゃんじゃん使ってハマってみて頂ければと思います笑</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tabBarControllerとUINavigationControllerを同時に使いたい！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/17/tabbarcontroller/"/>
    <updated>2016-01-17T22:18:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/17/tabbarcontroller</id>
    <content type="html"><![CDATA[<h4>tabBarControllerとUINavigationControllerを両立させよう！</h4>

<p>本日はtabBarControllerとUINavigationControllerを両方使いたい場合の方法を説明します。<br/>
方法は簡単です。</p>

<p><strong>tabBarControllerを先に追加して、</strong><br/>
<strong>その子要素にUINavigationControllerを追加してください。</strong></p>

<p>具体的に図で説明します。</p>

<p>１．storyboardでtabBarControllerを追加<br/>
XcodeメニューのEditor > Embed in > Tab Bar Controller を選択してください。<br/>
<img src="http://grandbig.github.io/images/tabBarController_1.png" alt="tabBarControllerの追加" /></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>すると、下図のようにstoryboardにTab Bar Controllerが追加されます。<br/>
<img src="http://grandbig.github.io/images/tabBarController_2.png" alt="storyboardに表示されます" /></p>

<p>このままでは、tabBarにitem(項目)が１つしかないので、ViewControllerを追加しましょう。</p>

<p>２．ドラッグ＆ドロップでstoryboardにUIViewControllerを追加<br/>
右メニューから <strong>View Controller</strong> をドラッグ＆ドロップしましょう。<br/>
<img src="http://grandbig.github.io/images/tabBarController_3.png" alt="View Controllerをドラッグ＆ドロップ" /></p>

<p>３．tabBarControllerと追加したUIViewControllerを紐付ける<br/>
Tab Bar Controller上でcontrolキーを押しながら、追加したView Controllerの方へ線を伸ばして紐付けます。<br/>
<img src="http://grandbig.github.io/images/tabBarController_4.png" alt="Tab Bar ControllerとView Controllerのひも付け" /></p>

<p>これにより、Tab Bar Controllerに1つ項目が増えて、View Controllerまでひも付けが伸びていることを確認できます。<br/>
<img src="http://grandbig.github.io/images/tabBarController_5.png" alt="項目の追加完了" /></p>

<p>続いて、UINavigationControllerを追加していきましょう。</p>

<p>４．子要素のView ControllerにUINavigationControllerを追加<br/>
UINavigationControllerを追加したいView Controllerを選択して、<br/>
XcodeメニューのEditor > Embed in > Navigation Controller を選択してください。<br/>
<img src="http://grandbig.github.io/images/tabBarController_6.png" alt="UINavigationControllerの追加" /></p>

<p>結果、Tab Bar ControllerとView Controllerの間にNavigation Controllerが追加されたことがわかると思います。<br/>
<img src="http://grandbig.github.io/images/tabBarController_7.png" alt="Navigation Controllerが追加されました" /></p>

<p>別の子要素のView ControllerにもNavigation Controllerが必要な場合は、<br/>
そのView Controllerに対して同じ操作を繰り返し実施してください。</p>

<p>storyboard上ではUINavigationControllerを先に追加して、<br/>
tabBarControllerを追加することもできます。<br/>
ですが、UINavigationControllerの戻るボタンの非表示やカスタム化などをしようとすると、<br/>
どうもうまくいきません&hellip;。<br/>
なので、一見無駄に見えるかもしれませんが、この方法を試してみることをオススメします。</p>

<p>本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QuickでSwiftコードのUnitテストをしよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/16/quick/"/>
    <updated>2016-01-16T19:49:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/16/quick</id>
    <content type="html"><![CDATA[<h4>Quickフレームワークを使おう！</h4>

<p>先日、XCTestによるiOSアプリのUnit TestとUI Testについて記事を書きました。<br/>
もちろんXCTestを使って、テストをすることに問題はありません。<br/>
ですが、XCTestは非常に独特な書式で、初めて使う人には取っ付きにくいかと思います。</p>

<p>そんな中、注目を集めているiOSアプリ用のテストフレームワークが<a href="https://github.com/Quick/Quick">Quick</a>です。<br/>
GitHubに書かれている通り、<a href="https://github.com/rspec/rspec">RSpec</a> / <a href="https://github.com/specta/specta">Specta</a> / <a href="https://github.com/onsi/ginkgo">Ginkgo</a>にインスパイアされて開発されているため、親しみやすい書式でテストコードを書くことができます。<br/>
(筆者もこれを機に親しもうと思います笑)</p>

<p>これまでiOSアプリのテストコードは独特で&hellip;と避けてきた方がいましたら、ぜひ <strong>Quick</strong> を導入してみて頂ければと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>Quickの導入方法</h4>

<p>では、Quickを導入しましょう。<br/>
GitHubにも書いてありますが、CocoaPodsでの導入方法は下記です。<br/>
※ 説明用のプロジェクト名を <strong>QuickSample</strong> とします。</p>

<p>１．Podfileの作成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="cp"># Podfile</span>
</span><span class='line'>
</span><span class='line'><span class="n">use_frameworks</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="n">def</span> <span class="n">testing_pods</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Quick</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="o">~&gt;</span> <span class="mf">0.8.0</span><span class="err">&#39;</span>
</span><span class='line'>  <span class="n">pod</span> <span class="err">&#39;</span><span class="n">Nimble</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="mf">3.0.0</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="err">&#39;</span><span class="n">QuickSampleTests</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">testing_pods</span>
</span><span class='line'><span class="n">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">target</span> <span class="err">&#39;</span><span class="n">QuickSampleUITests</span><span class="err">&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">testing_pods</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>２．CocoaPodsコマンドを実行<br/>
Podfileと同階層で<code>pod install</code>を実行</p>

<p>３．テストファイルを用意<br/>
プロジェクト作成時に<code>QuickSampleTests.swift</code>を作成しておいたので、それを編集します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// QuickSampleTests.swift</span>
</span><span class='line'><span class="n">import</span> <span class="n">XCTest</span>
</span><span class='line'><span class="n">import</span> <span class="n">Quick</span>
</span><span class='line'><span class="n">import</span> <span class="n">Nimble</span>
</span><span class='line'><span class="err">@</span><span class="n">testable</span> <span class="n">import</span> <span class="n">QuickSample</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">QuickSampleTests:</span> <span class="n">QuickSpec</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">override</span> <span class="n">func</span> <span class="n">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// ここにテストコードを書いていきます。</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで<code>QuickSpec</code>をオーバーライドしたテスト用クラスになりました。<br/>
最低限の準備はこれで完了です。</p>

<h4>Quickでのテストコードの書式</h4>

<p>続いて、基本的なテストコードの書式を見ていきましょう。</p>

<p>１．<code>describe</code>：『何のテストをするのか』を記述</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// テストコード</span>
</span><span class='line'><span class="n">override</span> <span class="n">func</span> <span class="nf">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">describe</span><span class="p">(</span><span class="s">&quot;天気情報をログ出力する&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// 「天気情報をログ出力する」ことをテストするためのコードを書いていきます。</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>２．<code>context</code>：『どういった条件のテストをするのか』を記述</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// テストコード</span>
</span><span class='line'><span class="n">override</span> <span class="n">func</span> <span class="nf">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">describe</span><span class="p">(</span><span class="s">&quot;天気情報をログ出力する&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">context</span><span class="p">(</span><span class="s">&quot;晴れの場合&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 天気が晴れの場合のテスト</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">context</span><span class="p">(</span><span class="s">&quot;雨の場合&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 天気が雨の場合のテスト</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>３．<code>it</code>：『このテストはこういった結果になる』ということを記述</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// テストコード</span>
</span><span class='line'><span class="n">override</span> <span class="n">func</span> <span class="nf">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">describe</span><span class="p">(</span><span class="s">&quot;天気情報をログ出力する&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">context</span><span class="p">(</span><span class="s">&quot;晴れの場合&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 天気が晴れの場合のテスト</span>
</span><span class='line'>          <span class="n">it</span><span class="p">(</span><span class="s">&quot;print out &#39;sunny&#39;&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">// 実行するテストコードをここに記述します</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>４．<code>expect('☓☓☓').to(△△△)</code>：『「☓☓☓」が「△△△」と等しい結果になる』ことを記述<br/>
ここは説明のために、テスト対象を<code>Weather.swift</code>として下記のようなコードだとします。<br/>
あくまでも<code>expect('☓☓☓').to(△△△)</code>の説明であるため、<code>Weather.getWeather</code>の処理は超簡単にしています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Weather.swift</span>
</span><span class='line'><span class="n">class</span> <span class="nl">Weather:</span><span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">getWeather</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;sunny&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いてテストコードです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// テストコード</span>
</span><span class='line'><span class="n">override</span> <span class="n">func</span> <span class="nf">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">describe</span><span class="p">(</span><span class="s">&quot;天気情報をログ出力する&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">context</span><span class="p">(</span><span class="s">&quot;晴れの場合&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 天気が晴れの場合のテスト</span>
</span><span class='line'>          <span class="n">it</span><span class="p">(</span><span class="s">&quot;print out &#39;sunny&#39;&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">let</span> <span class="n">weather</span> <span class="o">=</span> <span class="n">Weather</span><span class="p">().</span><span class="n">getWeather</span><span class="p">()</span>
</span><span class='line'>              <span class="n">expect</span><span class="p">(</span><span class="n">weather</span><span class="p">).</span><span class="n">to</span><span class="p">(</span><span class="n">contain</span><span class="p">(</span><span class="s">&quot;sunny&quot;</span><span class="p">))</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>補足すると、</p>

<p>・戻り値と期待値が完全一致する場合：<code>to(equal(△△△))</code><br/>
・戻り値が期待値の一部を含む場合：<code>to(contain(△△△))</code></p>

<p>といったように使い分けましょう。</p>

<p>５．非同期処理のテストをする場合<br/>
これまで同期処理を見てきましたが、今度は非同期処理を見ていきましょう。</p>

<p><code>Weather.swift</code>クラスに非同期処理を追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Weather.swift</span>
</span><span class='line'><span class="n">class</span> <span class="nl">Weather:</span><span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">getAsyncWeather</span><span class="p">(</span><span class="nl">closure:</span><span class="p">(</span><span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">Alamofire</span><span class="p">.</span><span class="n">request</span><span class="p">(.</span><span class="n">GET</span><span class="p">,</span> <span class="s">&quot;http://api.openweathermap.org/data/2.5/weather?APPID=&lt;自身のAPPIDを指定&gt;&quot;</span><span class="p">,</span> <span class="nl">parameters:</span>
</span><span class='line'>          <span class="p">[</span><span class="s">&quot;q&quot;</span><span class="o">:</span><span class="s">&quot;Tokyo,jp&quot;</span><span class="p">]).</span><span class="n">response</span> <span class="p">{</span> <span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="n">response</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">error</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">error</span> <span class="o">==</span> <span class="nb">nil</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">do</span> <span class="p">{</span>
</span><span class='line'>                  <span class="n">let</span> <span class="n">dataDict</span> <span class="o">=</span> <span class="n">try</span> <span class="n">NSJSONSerialization</span><span class="p">.</span><span class="n">JSONObjectWithData</span><span class="p">(</span><span class="n">data</span><span class="o">!</span><span class="p">,</span> <span class="nl">options:</span> <span class="n">NSJSONReadingOptions</span><span class="p">.</span><span class="n">AllowFragments</span><span class="p">)</span>
</span><span class='line'>                  <span class="n">let</span> <span class="nl">weatherArray:</span><span class="p">[</span><span class="n">AnyObject</span><span class="p">]</span> <span class="o">=</span> <span class="n">dataDict</span><span class="p">[</span><span class="s">&quot;weather&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">!</span> <span class="p">[</span><span class="n">AnyObject</span><span class="p">]</span>
</span><span class='line'>                  <span class="n">let</span> <span class="nl">weather:</span><span class="n">AnyObject</span> <span class="o">=</span> <span class="n">weatherArray</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>                  <span class="n">let</span> <span class="nl">description:</span><span class="n">String</span> <span class="o">=</span> <span class="n">weather</span><span class="p">[</span><span class="s">&quot;description&quot;</span><span class="p">]</span> <span class="n">as</span><span class="o">!</span> <span class="n">String</span>
</span><span class='line'>                  <span class="n">closure</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
</span><span class='line'>              <span class="p">}</span> <span class="n">catch</span> <span class="p">{</span>
</span><span class='line'>                  <span class="n">clouser</span><span class="p">(</span><span class="s">&quot;exception&quot;</span><span class="p">)</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>XCTestでも説明しましたが、<br/>
Swiftではスタブの代わりに <strong>manual mocking</strong> という手法を採用しています。<br/>
なので、通信処理はテストコード内で継承したクラスを作成して、そちらで定数を返すようにしましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// テストコード</span>
</span><span class='line'><span class="n">override</span> <span class="n">func</span> <span class="nf">spec</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// manual mockingのための用意</span>
</span><span class='line'>  <span class="n">class</span> <span class="nl">WeatherMock:</span><span class="n">Weather</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">override</span> <span class="n">func</span> <span class="n">getAsyncWeather</span><span class="p">(</span><span class="nl">closure:</span><span class="p">(</span><span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">closure</span><span class="p">(</span><span class="s">&quot;sunny&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span><span class="p">(</span><span class="s">&quot;天気情報を取得する&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">context</span><span class="p">(</span><span class="s">&quot;晴れの場合&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// 天気が晴れの場合のテスト</span>
</span><span class='line'>          <span class="n">it</span><span class="p">(</span><span class="s">&quot;print out &#39;sunny&#39;&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">var</span> <span class="nl">result:</span><span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>              <span class="n">let</span> <span class="nl">wm:</span><span class="n">WeatherMock</span> <span class="o">=</span> <span class="n">WeatherMock</span><span class="p">()</span>
</span><span class='line'>              <span class="n">wm</span><span class="p">.</span><span class="n">getAsyncWeather</span><span class="p">{(</span><span class="n">weather</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>                  <span class="n">result</span> <span class="o">=</span> <span class="n">weather</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="n">expect</span><span class="p">(</span><span class="n">result</span><span class="p">).</span><span class="n">toEventually</span><span class="p">(</span><span class="n">equal</span><span class="p">(</span><span class="s">&quot;sunny&quot;</span><span class="p">))</span><span class="s">&quot;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>因みに、非同期処理では、<code>to</code>ではなく<code>toEventually</code>を利用します。<br/>
<code>expect(result).toEventually(equal("sunny"), timeout: 10)</code>と書けば、<br/>
任意のタイムアウトを設定可能です。</p>

<p>その他のメソッドを探したい場合は、<br/>
<strong>Pods > Nimble > ObjCExpectation.swift > NMBExpectation</strong> を確認してみてください。<br/>
また、<a href="https://github.com/Quick/Nimble">GitHubのNimble</a>も参考になります。</p>

<h4>Quickでのテスト結果</h4>

<p>テストの実行方法はXCTestと同じです。<br/>
<strong>Xcodeメニュー > Product > Test</strong> を選択してテストを実行しましょう。</p>

<p>結果は同じく、Xcodeの左メニューに表示されます。</p>

<p><img src="http://grandbig.github.io/images/quick.png" alt="Xcodeのテスト結果" /></p>

<p>また、ログでも細かな結果が出力されますので、<br/>
(少し見づらいですが)なぜかテストが成功しないといったことがあれば、<br/>
積極的に確認してみましょう。</p>

<p>さて、いかがでしたでしょうか？<br/>
今のところは <strong>XCTest</strong> もしくは <strong>Quick</strong> によるUnit テストが主流になると思います。<br/>
開発者の使いやすさに合わせて選んでみてください。</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[東京Node学園付属小学校 1限目に参加してみた！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/15/node-elementary-school/"/>
    <updated>2016-01-15T19:27:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/15/node-elementary-school</id>
    <content type="html"><![CDATA[<h4>Node.jsを基礎から見直そう！</h4>

<p>以前、業務でNode.js v0.6.12だったり、v0.10.24だったりを触ってきました。<br/>
しかし個々最近は、ネイティブアプリ開発にかかりっきりになっていたので、Node.jsから遠ざかってしまっていました。<br/>
そんなこともあり、「これじゃいかん！」ということで今回、 <strong>東京Node学園付属小学校 1限目</strong> に参加してみることにしました。</p>

<p>通常のNode学園は行ったことがあったものの、非常にレベルが高いなと感じた経験があり、まずは思い出す足掛けということで&hellip;。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>勉強会の内容と感想</h4>

<p>さて、勉強会の内容と感想について書いていきます。</p>

<h5>オープニング</h5>

<p>teratailでは技術の壁をなくしたい。<br/>
何かサービスを開発するときには、いつも使っている言語を選びがちだけど、一番適した技術を使ったり、新しい技術を導入したりできると良いな〜という感じ。</p>

<p>工数やリソースの問題から、保守的になって実績のあるやり方で進めるパターン多いんだよな〜と思いながら聞いていました笑。</p>

<h5>ゲスト講演</h5>

<p>ゲスト講演はNode.js日本ユーザーグループ代表の古川陽介さんが担当されていました。<br/>
内容はあえてNode.jsではなく、Guillermo Rauch(socket.ioの作者)が提唱した  <strong>7 principles of rich web applications</strong> でした。<br/>
筆者は勉強不足のせいもあって、初めて知りました。</p>

<p>古川さん曰く、実際に7つの原則を満たしているWeb Applicationは存在しないんではないかと&hellip;。<br/>
詳しい内容は<a href="http://yosuke-furukawa.hatenablog.com/entry/2014/11/14/141415">【翻訳】リッチなWebアプリケーションのための7つの原則</a>に書かれています。</p>

<p>筆者個人としてはSPA(Single Page Application)が興味を惹いている理由を知れたり、<a href="https://developers.google.com/web/tools/chrome-devtools/profile/evaluate-performance/rail">RAIL</a>という重要な指標を知れたりと、かなり勉強になりました。</p>

<p>また特に印象的だったのは、 <strong>レイテンシの壁</strong> の話でした。<br/>
通信をする限り、レイテンシは必ず存在するのだと。<br/>
それを処理の仕方で早く見せることができないかと鎬を削る様がとても惹きつけられました。</p>

<p>最近ネイティブ開発ばかりやっていた自分としては、描画に対するレイテンシはあまり気にしていませんでした。<br/>
きちんと考えないとダメだなと。</p>

<p>JavaScriptは7つの原則をクリアできるのだ！！</p>

<h5>LT</h5>

<p>続いて、LTです。<br/>
<strong>東京Node学園付属小学校</strong> という名にふさわしく、知識・技術的についていけないといったことなく、落ち着いて聞くことができました。</p>

<p>以下、聞いたことを箇条書き</p>

<ul>
<li>お役立ちツール

<ul>
<li><a href="http://swagger.io/">SWAGGER</a>
Web APIドキュメント生成ツール</li>
<li><a href="http://nodered.org/">Node-RED</a>
Drug&amp;Dropで簡単にWebアプリを作れるツール</li>
<li><a href="http://loopback.io/">LoopBack</a>
Node.jsベースのBaaSを作れるオープンソース
　</li>
</ul>
</li>
<li>Node.jsが使われているサービス

<ul>
<li>Uber</li>
<li>PayPal(JavaからNode.jsに移行)</li>
<li>NETFLIX
　</li>
</ul>
</li>
<li>Node.jsの良いところ

<ul>
<li>非エンジニアでも簡単にWebアプリが作れる</li>
<li>クライアントとサーバサイド共にJavaScriptで書ける</li>
<li>リアルタイム通信でいろいろなWebアプリを作りたくなる</li>
<li>IoTでも使える</li>
<li>「同時に接続して、チームで協力してゴールを達成する」方向にも注目&hellip;</li>
</ul>
</li>
</ul>


<p>とりあえず、Node.js意欲が湧いてきたので、何か作りたい！！</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jazzyを使って、Swiftで書いたプロジェクトのリファレンスを自動生成しよう！]]></title>
    <link href="http://grandbig.github.io/blog/2016/01/12/jazzy/"/>
    <updated>2016-01-12T23:18:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2016/01/12/jazzy</id>
    <content type="html"><![CDATA[<h4>jazzyとは</h4>

<p>さて、本日は<a href="https://github.com/Realm/jazzy">jazzy</a>について書こうと思います。<br/>
jazzyはSwiftで書いたプロジェクトのリファレンスを自動で生成できるツールです。<br/>
最近、熱いMobile DatabaseであるRealmと同じチームが開発しているようです。<br/>
今のところ、他に良さそうなツールはないんじゃないでしょうか？</p>

<p>兎にも角にも、早速使ってみることにします。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h5>jazzyのインストール</h5>

<p>jazzyのインストールは簡単です。<br/>
下記コマンドを実行してください。</p>

<p><code>sudo gem install jazzy</code></p>

<h5>jazzyのコマンド</h5>

<p><code>jazzy -h</code>を実行してコマンドを確認してみましょう。<br/>
下記のような結果が得られるはずです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="nl">Usage:</span> <span class="n">jazzy</span>
</span><span class='line'>
</span><span class='line'><span class="n">Options</span>
</span><span class='line'>  <span class="o">-</span><span class="n">o</span><span class="p">,</span> <span class="o">--</span><span class="n">output</span> <span class="n">FOLDER</span>              <span class="n">Folder</span> <span class="n">to</span> <span class="n">output</span> <span class="n">the</span> <span class="n">HTML</span> <span class="n">docs</span> <span class="n">to</span>
</span><span class='line'>  <span class="o">-</span><span class="n">c</span><span class="p">,</span> <span class="o">--</span><span class="p">[</span><span class="n">no</span><span class="o">-</span><span class="p">]</span><span class="n">clean</span>                 <span class="n">Delete</span> <span class="n">contents</span> <span class="n">of</span> <span class="n">output</span> <span class="n">directory</span> <span class="n">before</span> <span class="n">running</span><span class="p">.</span>
</span><span class='line'>                                   <span class="nl">WARNING:</span> <span class="n">If</span> <span class="o">--</span><span class="n">output</span> <span class="n">is</span> <span class="n">set</span> <span class="n">to</span> <span class="o">~/</span><span class="n">Desktop</span><span class="p">,</span> <span class="n">this</span> <span class="n">will</span> <span class="n">delete</span> <span class="n">the</span> <span class="o">~/</span><span class="n">Desktop</span> <span class="n">directory</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="p">[</span><span class="n">no</span><span class="o">-</span><span class="p">]</span><span class="n">objc</span>                  <span class="n">Generate</span> <span class="n">docs</span> <span class="k">for</span> <span class="n">Objective</span><span class="o">-</span><span class="n">C</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="n">umbrella</span><span class="o">-</span><span class="n">header</span> <span class="n">PATH</span>       <span class="n">Umbrella</span> <span class="n">header</span> <span class="k">for</span> <span class="n">your</span> <span class="n">Objective</span><span class="o">-</span><span class="n">C</span> <span class="n">framework</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="n">framework</span><span class="o">-</span><span class="n">root</span> <span class="n">PATH</span>        <span class="n">The</span> <span class="n">root</span> <span class="n">path</span> <span class="n">to</span> <span class="n">your</span> <span class="n">Objective</span><span class="o">-</span><span class="n">C</span> <span class="n">framework</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="n">sdk</span> <span class="p">[</span><span class="n">iphone</span><span class="o">|</span><span class="n">watch</span><span class="o">|</span><span class="n">appletv</span><span class="p">][</span><span class="n">os</span><span class="o">|</span><span class="n">simulator</span><span class="p">]</span><span class="o">|</span><span class="n">macosx</span>
</span><span class='line'>                                   <span class="n">The</span> <span class="n">SDK</span> <span class="k">for</span> <span class="n">which</span> <span class="n">your</span> <span class="n">code</span> <span class="n">should</span> <span class="n">be</span> <span class="n">built</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="n">config</span> <span class="n">PATH</span>                <span class="n">Configuration</span> <span class="n">file</span> <span class="p">(.</span><span class="n">yaml</span> <span class="n">or</span> <span class="p">.</span><span class="n">json</span><span class="p">)</span>
</span><span class='line'>                                   <span class="nl">Default:</span> <span class="p">.</span><span class="n">jazzy</span><span class="p">.</span><span class="n">yaml</span> <span class="k">in</span> <span class="n">source</span> <span class="n">directory</span> <span class="n">or</span> <span class="n">ancestor</span>
</span><span class='line'>  <span class="o">-</span><span class="n">x</span> <span class="n">arg1</span><span class="p">,</span><span class="n">arg2</span><span class="p">,</span><span class="err">…</span><span class="n">argN</span><span class="p">,</span>              <span class="n">Arguments</span> <span class="n">to</span> <span class="n">forward</span> <span class="n">to</span> <span class="n">xcodebuild</span>
</span><span class='line'>      <span class="o">--</span><span class="n">xcodebuild</span><span class="o">-</span><span class="n">arguments</span>
</span><span class='line'>  <span class="o">-</span><span class="n">s</span> <span class="n">FILEPATH</span><span class="p">,</span>                     <span class="n">File</span> <span class="n">generated</span> <span class="n">from</span> <span class="n">sourcekitten</span> <span class="n">output</span> <span class="n">to</span> <span class="n">parse</span>
</span><span class='line'>      <span class="o">--</span><span class="n">sourcekitten</span><span class="o">-</span><span class="n">sourcefile</span>
</span><span class='line'>      <span class="o">--</span><span class="n">source</span><span class="o">-</span><span class="n">directory</span> <span class="n">DIRPATH</span>   <span class="n">The</span> <span class="n">directory</span> <span class="n">that</span> <span class="n">contains</span> <span class="n">the</span> <span class="n">source</span> <span class="n">to</span> <span class="n">be</span> <span class="n">documented</span>
</span><span class='line'>  <span class="o">-</span><span class="n">e</span><span class="p">,</span> <span class="o">--</span><span class="n">exclude</span> <span class="n">file1</span><span class="p">,</span><span class="n">file2</span><span class="p">,</span><span class="err">…</span><span class="n">fileN</span> <span class="n">Files</span> <span class="n">to</span> <span class="n">be</span> <span class="n">excluded</span> <span class="n">from</span> <span class="n">documentation</span>
</span><span class='line'>      <span class="o">--</span><span class="n">swift</span><span class="o">-</span><span class="n">version</span> <span class="n">VERSION</span>
</span><span class='line'>  <span class="o">-</span><span class="n">a</span><span class="p">,</span> <span class="o">--</span><span class="n">author</span> <span class="n">AUTHOR_NAME</span>         <span class="n">Name</span> <span class="n">of</span> <span class="n">author</span> <span class="n">to</span> <span class="n">attribute</span> <span class="k">in</span> <span class="n">docs</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.</span> <span class="n">Realm</span><span class="p">)</span>
</span><span class='line'>  <span class="o">-</span><span class="n">u</span><span class="p">,</span> <span class="o">--</span><span class="n">author_url</span> <span class="n">URL</span>             <span class="n">Author</span> <span class="n">URL</span> <span class="n">of</span> <span class="n">this</span> <span class="n">project</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.</span> <span class="nl">http:</span><span class="c1">//realm.io)</span>
</span><span class='line'>  <span class="o">-</span><span class="n">m</span><span class="p">,</span> <span class="o">--</span><span class="n">module</span> <span class="n">MODULE_NAME</span>         <span class="n">Name</span> <span class="n">of</span> <span class="n">module</span> <span class="n">being</span> <span class="n">documented</span><span class="p">.</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.</span> <span class="n">RealmSwift</span><span class="p">)</span>
</span><span class='line'>      <span class="o">--</span><span class="n">module</span><span class="o">-</span><span class="n">version</span> <span class="n">VERSION</span>     <span class="n">module</span> <span class="n">version</span><span class="p">.</span> <span class="n">will</span> <span class="n">be</span> <span class="n">used</span> <span class="n">when</span> <span class="n">generating</span> <span class="n">docset</span>
</span><span class='line'>      <span class="o">--</span><span class="n">copyright</span> <span class="n">COPYRIGHT_MARKDOWN</span>
</span><span class='line'>                                   <span class="n">copyright</span> <span class="n">markdown</span> <span class="n">rendered</span> <span class="n">at</span> <span class="n">the</span> <span class="n">bottom</span> <span class="n">of</span> <span class="n">the</span> <span class="n">docs</span> <span class="n">pages</span>
</span><span class='line'>      <span class="o">--</span><span class="n">readme</span> <span class="n">FILEPATH</span>            <span class="n">The</span> <span class="n">path</span> <span class="n">to</span> <span class="n">a</span> <span class="n">markdown</span> <span class="n">README</span> <span class="n">file</span>
</span><span class='line'>      <span class="o">--</span><span class="n">podspec</span> <span class="n">FILEPATH</span>
</span><span class='line'>      <span class="o">--</span><span class="n">docset</span><span class="o">-</span><span class="n">icon</span> <span class="n">FILEPATH</span>
</span><span class='line'>      <span class="o">--</span><span class="n">docset</span><span class="o">-</span><span class="n">path</span> <span class="n">DIRPATH</span>        <span class="n">The</span> <span class="n">relative</span> <span class="n">path</span> <span class="k">for</span> <span class="n">the</span> <span class="n">generated</span> <span class="n">docset</span>
</span><span class='line'>  <span class="o">-</span><span class="n">r</span><span class="p">,</span> <span class="o">--</span><span class="n">root</span><span class="o">-</span><span class="n">url</span> <span class="n">URL</span>               <span class="n">Absolute</span> <span class="n">URL</span> <span class="n">root</span> <span class="n">where</span> <span class="n">these</span> <span class="n">docs</span> <span class="n">will</span> <span class="n">be</span> <span class="n">stored</span>
</span><span class='line'>  <span class="o">-</span><span class="n">d</span><span class="p">,</span> <span class="o">--</span><span class="n">dash_url</span> <span class="n">URL</span>               <span class="n">Location</span> <span class="n">of</span> <span class="n">the</span> <span class="n">dash</span> <span class="n">XML</span> <span class="n">feed</span> <span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.</span> <span class="nl">http:</span><span class="c1">//realm.io/docsets/realm.xml)</span>
</span><span class='line'>  <span class="o">-</span><span class="n">g</span><span class="p">,</span> <span class="o">--</span><span class="n">github_url</span> <span class="n">URL</span>             <span class="n">GitHub</span> <span class="n">URL</span> <span class="n">of</span> <span class="n">this</span> <span class="n">project</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.</span> <span class="nl">https:</span><span class="c1">//github.com/realm/realm-cocoa)</span>
</span><span class='line'>      <span class="o">--</span><span class="n">github</span><span class="o">-</span><span class="n">file</span><span class="o">-</span><span class="n">prefix</span> <span class="n">PREFIX</span>  <span class="n">GitHub</span> <span class="n">URL</span> <span class="n">file</span> <span class="n">prefix</span> <span class="n">of</span> <span class="n">this</span> <span class="n">project</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.</span> <span class="nl">https:</span><span class="c1">//github.com/realm/realm-cocoa/tree/v0.87.1)</span>
</span><span class='line'>      <span class="o">--</span><span class="n">min</span><span class="o">-</span><span class="n">acl</span> <span class="p">[</span><span class="n">private</span> <span class="o">|</span> <span class="n">internal</span> <span class="o">|</span> <span class="n">public</span><span class="p">]</span>
</span><span class='line'>                                   <span class="n">minimum</span> <span class="n">access</span> <span class="n">control</span> <span class="n">level</span> <span class="n">to</span> <span class="n">document</span>
</span><span class='line'>      <span class="o">--</span><span class="p">[</span><span class="n">no</span><span class="o">-</span><span class="p">]</span><span class="n">skip</span><span class="o">-</span><span class="n">undocumented</span>     <span class="n">Don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">document</span> <span class="n">declarations</span> <span class="n">that</span> <span class="n">have</span> <span class="n">no</span> <span class="n">documentation</span> <span class="n">comments</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="p">[</span><span class="n">no</span><span class="o">-</span><span class="p">]</span><span class="n">hide</span><span class="o">-</span><span class="n">documentation</span><span class="o">-</span><span class="n">coverage</span>
</span><span class='line'>                                   <span class="n">Hide</span> <span class="s">&quot;(X% documented)&quot;</span> <span class="n">from</span> <span class="n">the</span> <span class="n">generated</span> <span class="n">documents</span>
</span><span class='line'>      <span class="o">--</span><span class="n">head</span> <span class="n">HTML</span>                  <span class="n">Custom</span> <span class="n">HTML</span> <span class="n">to</span> <span class="n">inject</span> <span class="n">into</span> <span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;&lt;/</span><span class="n">head</span><span class="o">&gt;</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="n">theme</span> <span class="p">[</span><span class="n">apple</span> <span class="o">|</span> <span class="n">fullwidth</span> <span class="o">|</span> <span class="n">DIRPATH</span><span class="p">]</span>
</span><span class='line'>                                   <span class="n">Which</span> <span class="n">theme</span> <span class="n">to</span> <span class="n">use</span><span class="p">.</span> <span class="n">Specify</span> <span class="n">either</span> <span class="err">&#39;</span><span class="n">apple</span><span class="err">&#39;</span> <span class="p">(</span><span class="k">default</span><span class="p">),</span> <span class="err">&#39;</span><span class="n">fullwidth</span><span class="err">&#39;</span> <span class="n">or</span> <span class="n">the</span> <span class="n">path</span> <span class="n">to</span> <span class="n">your</span> <span class="n">mustache</span> <span class="n">templates</span> <span class="n">and</span> <span class="n">other</span> <span class="n">assets</span> <span class="k">for</span> <span class="n">a</span> <span class="n">custom</span> <span class="n">theme</span><span class="p">.</span>
</span><span class='line'>  <span class="o">-</span><span class="n">t</span><span class="p">,</span> <span class="o">--</span><span class="n">template</span><span class="o">-</span><span class="n">directory</span> <span class="n">DIRPATH</span> <span class="nl">DEPRECATED:</span> <span class="n">Use</span> <span class="o">--</span><span class="n">theme</span> <span class="n">instead</span><span class="p">.</span>
</span><span class='line'>      <span class="o">--</span><span class="n">assets</span><span class="o">-</span><span class="n">directory</span> <span class="n">DIRPATH</span>   <span class="nl">DEPRECATED:</span> <span class="n">Use</span> <span class="o">--</span><span class="n">theme</span> <span class="n">instead</span><span class="p">.</span>
</span><span class='line'>  <span class="o">-</span><span class="n">v</span><span class="p">,</span> <span class="o">--</span><span class="n">version</span>                    <span class="n">Print</span> <span class="n">version</span> <span class="n">number</span>
</span><span class='line'>  <span class="o">-</span><span class="n">h</span><span class="p">,</span> <span class="o">--</span><span class="n">help</span> <span class="p">[</span><span class="n">TOPIC</span><span class="p">]</span>               <span class="n">Available</span> <span class="nl">topics:</span>
</span><span class='line'>                                      <span class="n">usage</span>   <span class="n">Command</span> <span class="n">line</span> <span class="n">options</span> <span class="p">(</span><span class="n">this</span> <span class="n">help</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'>                                      <span class="n">config</span>  <span class="n">Configuration</span> <span class="n">file</span> <span class="n">options</span>
</span><span class='line'>                                   <span class="p">...</span><span class="n">or</span> <span class="n">an</span> <span class="n">option</span> <span class="n">keyword</span><span class="p">,</span> <span class="n">e</span><span class="p">.</span><span class="n">g</span><span class="p">.</span> <span class="s">&quot;dash&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ヘルプを見て頂ければ、なんとなく概要をつかめると思いますが、特に重要なものを説明します。</p>

<ol>
<li><code>-o FOLDER</code><br/>
リファレンスの出力場所を指定するコマンドです</li>
<li><code>--min-acl [private | internal | public]</code><br/>
リファレンスに出力するプロパティおよびメソッドの最低アクセス権限<br/>
例えば、<code>--min-acl public</code>を指定した場合、<code>private</code>や<code>internal</code>指定されたプロパティやメソッドはリファレンスに出力されません。</li>
<li><code>--skip-undocumented</code><br/>
ドキュメントコメントが書かれていないプロパティやメソッドはリファレンスに出力しません。</li>
<li><code>--author AUTHOR_NAME</code><br/>
リファレンスに開発者を明記します。</li>
<li><code>--author_url URL</code><br/>
リファレンス上に表記される開発者名にURlリンクを付与します。</li>
</ol>


<h4>Swift2.0以降でのドキュメントコメントの書き方について</h4>

<p>Swift2.0以降でのドキュメントコメントの書き方を見ていきます。<br/>
<strong>jazzy</strong> を使うことを前提にした書き方のみ記述します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'>
</span><span class='line'><span class="cm">UIViewControllerを継承したViewControllerクラス</span>
</span><span class='line'><span class="cm">  </span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="n">class</span> <span class="nl">ViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// MARK: Properties</span>
</span><span class='line'>  <span class="c1">/// 文字列を格納するためのサンプル変数</span>
</span><span class='line'>  <span class="n">var</span> <span class="nl">sampleParam1:</span><span class="n">String</span><span class="o">?</span>
</span><span class='line'>  <span class="c1">/// 数値を格納するためのサンプル定数</span>
</span><span class='line'>  <span class="n">let</span> <span class="nl">sampleParam2:</span><span class="n">Int</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">省略</span><span class="o">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// MARK: Method</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> ログを出力するメソッド</span>
</span><span class='line'><span class="cm">         </span>
</span><span class='line'><span class="cm"> - parameter message: ログ出力したいメッセージ</span>
</span><span class='line'><span class="cm">                 </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">sampleMethod</span><span class="p">(</span><span class="nl">message:</span> <span class="n">String</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">print</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> trueフラグを返すメソッド</span>
</span><span class='line'><span class="cm">         </span>
</span><span class='line'><span class="cm"> - returns: trueフラグ</span>
</span><span class='line'><span class="cm">                 </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">sampleMethod2</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> メッセージを生成するメソッド</span>
</span><span class='line'><span class="cm">          </span>
</span><span class='line'><span class="cm"> - parameter message: 生成したいメッセージの一部分</span>
</span><span class='line'><span class="cm"> - returns: 生成したメッセージ</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>  <span class="n">func</span> <span class="n">sampleMethod3</span><span class="p">(</span><span class="nl">message:</span><span class="n">String</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s">&quot;生成したメッセージ： \(message)&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ポイントは、</p>

<ul>
<li>クラス名にドキュメントコメントを必ずつけること</li>
<li>メソッドのDescriptionとParameterもしくはReturnとの間に1行をあけること</li>
<li><code>:param:</code>や<code>:returns:</code>といった古い書き方をしないこと</li>
</ul>


<p>です。</p>

<p>上記ポイントを踏まえた上で、<br/>
<code>jazzy --min-acl internal --skip-undocumented -o jazzy_doc --author Takahiro --author_url https://grandbig.github.io/</code><br/>
を実行してみましょう。<br/>
オプションは必要に応じてつけてください。</p>

<p>結果、下図のようなリファレンスが作成されます。</p>

<p><img src="http://grandbig.github.io/images/jazzy_1.png" alt="トップページ" /><br/>
こちらはトップページです。</p>

<p><img src="http://grandbig.github.io/images/jazzy_2.png" alt="クラスの説明" /><br/>
続いて、クラスを選択した際に表示されるクラスの説明ページ</p>

<p><img src="http://grandbig.github.io/images/jazzy_3.png" alt="クラスのプロパティの説明" /><br/>
各プロパティを選択すれば、その説明が表示されます。</p>

<p><img src="http://grandbig.github.io/images/jazzy_4.png" alt="クラスのメソッドの説明" /><br/>
各メソッドを選択すれば、その説明が表示されます。</p>

<p>いかがだったでしょうか？<br/>
リファレンスは第三者にソースコードを説明する上でも非常に重要なものです。<br/>
初めから書式ルールに沿ってコードを書いておけば、自動生成ツールで速攻リファレンスを作れますので、ぜひぜひ把握しておきましょう。</p>

<p>と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
